code,author,id,tokens
"#pragma comment(linker, ""/STACK:256000000"")

void readData() {}

int n, r, o, y, g, b, v;

string solve(int r, int y, int b) {
  int a[3] = {r, y, b};
  string t = ""RYB"";

  for (int i = 0; i < 3; ++i) {
    for (int j = i + 1; j < 3; ++j) {
      if (a[j] > a[i]) {
        swap(a[j], a[i]);
        swap(t[j], t[i]);
      }
    }
  }

  string res(n, ' ');
  for (int i = 0; i < n; i += 2) {
    for (int j = 0; j < 3; ++j) {
      if (a[j] > 0) {
        res[i] = t[j];
        --a[j];
        break;
      }
    }
  }
  for (int i = 1; i < n; i += 2) {
    for (int j = 0; j < 3; ++j) {
      if (a[j] > 0) {
        res[i] = t[j];
        --a[j];
        break;
      }
    }
  }

  bool ok = true;
  for (int i = 1; i < n; ++i) {
    if (res[i] == res[i - 1] || (n > 1 && res[0] == res[n - 1])) {
      ok = false;
    }
  }

  if (!ok) {
    cerr << ""BAD"" << endl;
  }

  return res;
}

void solve(int test) {
  cin >> n >> r >> o >> y >> g >> b >> v;
  if (2 * r > n || 2 * y > n || 2 * b > n) {
    printf(""Case #%d: IMPOSSIBLE\n"", test);
    return;
  }
  if (r + y + b != n) {
    printf(""Case #%d: IMPOSSIBLE\n"", test);
    return;
  }

  printf(""Case #%d: %s\n"", test, solve(r, y, b).c_str());
}

int main(int argc, char *argv[]) {
  freopen(""input.txt"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  int left_bound, right_bound;

  /*freopen(argv[3], ""w"", stdout);
  sscanf(argv[1], ""%d"", &left_bound);
  sscanf(argv[2], ""%d"", &right_bound);*/

  int t;
  cin >> t;
  left_bound = 1, right_bound = t;
  for (int i = 1; i <= t; ++i) {
    if (i >= left_bound && i <= right_bound) {
      solve(i);
    } else {
      readData();
    }
    cerr << i << "": "" << clock() << endl;
  }

  return 0;
}
",9,1,821
"const int inf = 1e8;
const int N = 77;

bool check_90(long long have, long long need) {
  return have * 100 >= 90 * need;
}

bool check_110(long long have, long long need) {
  return have * 100 <= 110 * need;
}

int get_l(int have, int need) {
  int l = 0, r = inf;
  while (r - l > 1) {
    int s = (l + r) / 2;
    if (check_90(have, 1LL * need * s)) {
      l = s;
    } else {
      r = s;
    }
  }
  return l;
}

int get_r(int have, int need) {
  int l = 0, r = inf;
  while (r - l > 1) {
    int s = (l + r) / 2;
    if (check_110(have, 1LL * need * s)) {
      r = s;
    } else {
      l = s;
    }
  }
  return r;
}

int need[N];
int have[N][N];
int p[N];

int main() {
  freopen(""in"", ""r"", stdin);
  freopen(""out"", ""w"", stdout);
  int tt;
  scanf(""%d"", &tt);
  for (int cc = 1; cc <= tt; ++cc) {
    double begt = clock();
    printf(""Case #%d: "", cc);
    int n, m;
    scanf(""%d %d"", &n, &m);
    for (int i = 0; i < n; ++i) {
      scanf(""%d"", need + i);
    }
    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < m; ++j) {
        scanf(""%d"", have[i] + j);
      }
    }
    if (n == 1) {
      int ans = 0;
      for (int i = 0; i < m; ++i) {
        int l = get_l(have[0][i], need[0]);
        int r = get_r(have[0][i], need[0]);
        swap(l, r);
        if (l <= r) {
          ++ans;
        }
      }
      printf(""%d\n"", ans);
      continue;
    }
    for (int i = 0; i < m; ++i) {
      p[i] = i;
    }
    int ans = 0;
    do {
      int cur = 0;
      for (int i = 0; i < m; ++i) {
        int l0 = get_l(have[0][i], need[0]);
        int r0 = get_r(have[0][i], need[0]);
        swap(l0, r0);
        if (l0 > r0) {
          continue;
        }
        int l1 = get_l(have[1][p[i]], need[1]);
        int r1 = get_r(have[1][p[i]], need[1]);
        swap(l1, r1);
        if (l1 > r1) {
          continue;
        }
        int l = max(l0, l1);
        int r = min(r0, r1);
        if (l <= r) {
          ++cur;
        }
      }
      ans = max(ans, cur);
    } while (next_permutation(p, p + m));
    printf(""%d\n"", ans);
    fprintf(stderr, ""case %d solved in %.3f\n"", cc,
            (clock() - begt) / CLOCKS_PER_SEC);
  }
}
",29,2,969
"typedef pair<int, int> par;
typedef long long int tint;
map<char, char> inv;

bool is_tidy(string s) {
  int l = s.size();
  char cur = s[0];

  for (int i = (1); i < (l); i++) {
    if (cur > s[i])
      return (false);
    cur = s[i];
  }

  return (true);
}

int main() {
  freopen(""test.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);

  int t, l;
  cin >> t;
  string n;

  for (int caso = (1); caso < (t + 1); caso++) {
    cin >> n;
    l = n.size();
    vector<string> cnd;
    if (is_tidy(n))
      cnd.push_back(n);
    string acum = """";
    for (int i = 0; i < (l); i++) {
      char c = (char)(n[i] - 1);
      string aux = acum + c;
      for (int j = (i + 1); j < (l); j++)
        aux += '9';
      if (is_tidy(aux))
        cnd.push_back(aux);
      acum += n[i];
    }

    sort(cnd.begin(), cnd.end());
    int u = cnd.size() - 1;
    int j = 0;
    while (cnd[u][j] == '0')
      j++;
    string ans = """";
    for (int k = (j); k < (cnd[u].size()); k++)
      ans += cnd[u][k];

    cout << ""Case #"" << caso << "": "" << ans << endl;
  }

  return 0;
}
",37,3,473
"//
//  main.cpp
//  ProblemB
//
//  Created by Tung Nguyen on 4/22/17.
//
//

char chars[] = {'R', 'O', 'Y', 'G', 'B', 'V'};
int nums[6];
int N;

bool possible;
char result[1001];

bool can_match(int i, int j) {
  if (abs(i - j) <= 1 || abs(i - j) == 5) {
    return false;
  }
  return true;
}

int get_max(int idx, int i0) {
  int r = -1;
  int r_m = 0;
  for (int i = 0; i < 6; i++) {
    if ((idx == -1 || can_match(idx, i)) && nums[i] > 0) {
      int i_m = 0;
      for (int j = 0; j < 6; j++) {
        if (!can_match(i, j)) {
          i_m += nums[j];
        }
      }

      if (r_m < i_m) {
        r = i;
        r_m = i_m;
      } else if (r_m == i_m && i0 != -1) {
        if (!can_match(i0, i)) {
          r = i;
        }
      }
    }
  }
  return r;
}

void solve() {
  int idx = -1;
  int first = -1;
  int last = -1;
  possible = true;
  for (int i = 0; i < N; i++) {
    idx = get_max(idx, first);
    if (idx == -1) {
      possible = false;
      break;
    }
    if (i == 0) {
      first = idx;
    }
    if (i == N - 1) {
      last = idx;
    }
    result[i] = chars[idx];
    nums[idx]--;
  }
  result[N] = 0;
  if (possible) {
    if (!can_match(first, last)) {
      possible = false;
    }
  }
}

int main(int argc, const char *argv[]) {
  ifstream fin(""B-small-attempt0.in.txt"");
  ofstream fout(""B-small-attempt0.out.txt"");

  int T;
  fin >> T;
  for (int Case = 1; Case <= T; Case++) {
    fin >> N >> nums[0] >> nums[1] >> nums[2] >> nums[3] >> nums[4] >> nums[5];
    solve();
    fout << ""Case #"" << Case << "": "";
    if (possible) {
      fout << result;
    } else {
      fout << ""IMPOSSIBLE"";
    }
    fout << endl;
  }

  fin.close();
  fout.close();
  return 0;
}
",39,4,773
"typedef long long LL;
typedef long double LD;

int cond = 1;

int solve() {
  int r, c;
  cin >> r >> c;
  vector<string> res;
  for (int i = 0; i < r; ++i) {
    string row;
    cin >> row;
    bool empty = true;
    char first = '?';
    for (int j = 0; j < c; ++j) {
      if (row[j] != '?') {
        empty = false;
        first = row[j];
        break;
      }
    }
    if (!empty) {
      string s(c, '?');
      for (int j = 0; j < c; ++j) {
        if (row[j] == first || row[j] == '?') {
          s[j] = first;
        } else {
          first = row[j];
          s[j] = first;
        }
      }
      while (res.size() < i + 1) {
        res.push_back(s);
      }
    } else {
      if (res.size() > 0) {
        res.push_back(res[res.size() - 1]);
      }
    }
  }
  for (int i = 0; i < r; ++i) {
    cout << res[i] << endl;
  }
  return 0;
}

int main() {
  int t;
  cin >> t;
  for (int x = 1; x <= t; ++x) {
    cout << ""Case #"" << x << "": "" << endl;
    solve(); // result
  }
  return 0;
}
",41,5,424
"typedef long long int lli;

int tc;

lli ctdy(string input) {
  lli dp[18][2][10];
  memset(dp, 0, sizeof(dp));
  for (int i = '0'; i <= input[0]; i++) {
    if (i != input[0]) {
      dp[0][0][i - '0'] = 1;
    } else {
      dp[0][1][i - '0'] = 1;
    }
  };
  for (int i = 0; i < input.size() - 1; i++) {
    for (int j = 0; j <= 9; j++) {
      for (int k = j; k <= 9; k++) {
        dp[i + 1][0][k] += dp[i][0][j];
      }
    }
    for (int j = 0; j <= 9; j++) {
      if (dp[i][1][j] == 0)
        continue;
      for (int k = j; k <= input[i + 1] - '0'; k++) {
        if (k != input[i + 1] - '0') {
          dp[i + 1][0][k] += dp[i][1][j];
        } else {
          dp[i + 1][1][k] += dp[i][1][j];
        }
      }
    }
  }
  lli sum = 0;
  for (int i = 0; i <= 9; i++) {
    sum += dp[input.size() - 1][0][i];
    sum += dp[input.size() - 1][1][i];
  }
  return sum;
}

int main() {
  cin >> tc;
  for (int t = 1; t <= tc; t++) {
    char c[30];
    lli num;
    string s;
    scanf(""%s"", c);
    sscanf(c, ""%lld"", &num);
    s = c;
    lli goal = ctdy(s);
    // cout << num << "" "";
    // cout << goal << endl;
    lli ub = num, lb = 0, m;
    while (ub - lb > 1) {
      m = (ub + lb) / 2;
      num = m;
      sprintf(c, ""%lld"", num);
      s = c;
      if (ctdy(s) != goal) {
        lb = m;
      } else {
        ub = m;
      }
    }
    // cout << ub << "" "" << lb << endl;
    printf(""Case #%d: %lld\n"", t, ub);
  }
}
",56,6,690
"// vudduu - codejam 2017 round 1 A
// Problem A
typedef long long LL;

int N, M;
vector<string> vs;

void solve() {
  cin >> N >> M;
  vs.resize(N);
  for (int i = (0), _i = (N); i < _i; ++i) {
    cin >> vs[i];
    char ch = '.';
    for (int j = (0), _j = (M); j < _j; ++j) {
      if (vs[i][j] != '?') {
        if (ch == '.') {
          for (int k = (0), _k = (j); k < _k; ++k)
            vs[i][k] = vs[i][j];
        }
        ch = vs[i][j];
      } else {
        if (ch != '.')
          vs[i][j] = ch;
      }
    }
  }
  if (vs[0][0] == '?') {
    for (int k = (0), _k = (N); k < _k; ++k) {
      if (vs[k][0] != '?') {
        for (int i = k - 1; i >= 0; i--) {
          for (int j = (0), _j = (M); j < _j; ++j) {
            vs[i][j] = vs[i + 1][j];
          }
        }
        break;
      }
    }
  }
  for (int i = (1), _i = (N); i < _i; ++i) {
    if (vs[i][0] == '?') {
      for (int j = (0), _j = (M); j < _j; ++j) {
        vs[i][j] = vs[i - 1][j];
      }
    }
  }
  for (int i = (0), _i = (N); i < _i; ++i) {
    cout << vs[i] << endl;
  }
}

int main() {
  int T;
  scanf(""%d"", &T);
  for (int cas = 1; cas <= T; cas++) {
    printf(""Case #%d:\n"", cas);
    solve();
  }
}
",59,7,572
"int main() {
  ios_base::sync_with_stdio(false);
  ifstream ifs(""c.in"");
  ofstream ofs(""c.out"");

  int t;
  ifs >> t;
  for (int test = 0; test < t; ++test) {
    long long n, k;
    ifs >> n >> k;
    map<long long, long long> m;
    m[n] = 1;
    long long cnt = 0, mx, mn;
    while (!m.empty()) {
      long long len, c;
      tie(len, c) = *m.rbegin();
      m.erase(len);
      mx = len / 2;
      mn = len - mx - 1;
      cnt += c;
      if (cnt >= k) {
        break;
      }
      if (mx > 0)
        m[mx] += c;
      if (mn > 0)
        m[mn] += c;
    }
    ofs << ""Case #"" << test + 1 << "": "" << mx << ' ' << mn << endl;
  }
  return 0;
}
",85,8,290
"long long n, k;

map<long long, long long> f;

void work() {
  scanf(""%lld%lld"", &n, &k);
  priority_queue<long long> q;
  while (!q.empty())
    q.pop();
  f.clear();
  q.push(n);
  f[n] = 1;
  while (!q.empty()) {
    long long x = q.top();
    // printf(""x=%lld "", x);
    q.pop();
    long long y = f[x];
    // printf(""y = %lld k = %lld\n"", y, k);
    if (y >= k) {
      printf(""%lld %lld\n"", x / 2, (x - 1) / 2);
      return;
    }
    k -= y;
    if (f[x / 2] == 0) {
      q.push(x / 2);
      // printf(""push %lld\n"", x/2);
    }
    f[x / 2] += y;
    if (f[(x - 1) / 2] == 0) {
      q.push((x - 1) / 2);
      // printf(""push %lld\n"", (x-1)/2);
    }
    f[(x - 1) / 2] += y;
  }
}

int main() {
  int TC;
  freopen(""C-small-1-attempt0.in"", ""r"", stdin);
  freopen(""C-small-1-attempt0.out"", ""w"", stdout);
  scanf(""%d"", &TC);
  for (int tc = 1; tc <= TC; ++tc) {
    printf(""Case #%d: "", tc);
    work();
  }
}
",90,9,455
"typedef long long i64d;

int main() {
  freopen(""A-small-attempt0.in"", ""r"", stdin);
  freopen(""A-small-attempt0.out"", ""w"", stdout);
  int cas;
  scanf(""%d"", &cas);
  for (int ca = 1; ca <= cas; ca++) {
    printf(""Case #%d:\n"", ca);
    int r, c;
    scanf(""%d %d"", &r, &c);
    char s[30][30];
    for (int i = 0; i < r; i++)
      scanf(""%s"", s[i]);
    for (int i = 0; i < r; i++) {
      int j = 0;
      int last = 0;
      char x = s[i][0];
      while (j < c) {
        while (s[i][j] == '?' && j < c)
          j++;
        if (j < c) {
          for (int k = last; k < j; k++)
            s[i][k] = s[i][j];
          x = s[i][j];
          j++;
          last = j;
        }
      }
      if (last < c) {
        for (int j = last; j < c; j++)
          s[i][j] = x;
      }
    }
    for (int i = 1; i < r; i++)
      if (s[i][0] == '?') // black line
      {
        for (int j = 0; j < c; j++)
          s[i][j] = s[i - 1][j];
      }
    for (int i = r - 1; i >= 0; i--)
      if (s[i][0] == '?') {
        for (int j = 0; j < c; j++)
          s[i][j] = s[i + 1][j];
      }
    for (int i = 0; i < r; i++)
      printf(""%s\n"", s[i]);
  }
  return 0;
}
",91,10,526
"int main() {
  int T;
  freopen(""C-small-attempt1.in"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  scanf(""%d"", &T);

  for (int testCase = 1; testCase <= T; testCase++) {
    int N, Q;

    scanf(""%d %d"", &N, &Q);

    pair<long long, long long> horses[101];

    for (int i = 0; i < N; i++) {
      scanf(""%lld %lld"", &horses[i].first, &horses[i].second);
    }

    long long adj[101][101];

    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        scanf(""%lld"", &adj[i][j]);
      }
    }

    int S, E;
    scanf(""%d %d"", &S, &E);
    S--;
    E--;

    double dist[101];
    fill(dist, dist + 101, 987654321654897123LL);

    dist[S] = 0;

    for (int s = S; s < E; s++) {
      long long d = 0;
      for (int e = s + 1; e <= E; e++) {
        d += adj[e - 1][e];
        if (d <= horses[s].first) {
          dist[e] = min(dist[e], dist[s] + d / (double)horses[s].second);
        }
      }
    }

    printf(""Case #%d: "", testCase);
    printf(""%.6lf\n"", dist[E]);
  }

  return 0;
}
",94,11,478
"

int main() {

  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  ;
  freopen(""inp.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);
  long long t;
  cin >> t;
  for (long long ccr = 1; ccr <= t; ++ccr) {

    long long n, k, val1, val2;
    cin >> n >> k;
    priority_queue<long long, vector<long long>, less<long long>> pq;
    pq.push(n);
    while (k--) {
      long long val = pq.top();
      pq.pop();
      val1 = val2 = val / 2;
      if (val % 2 == 0) {
        --val2;
      }
      pq.push(val1);
      pq.push(val2);
    }

    cout << ""Case #"" << ccr << "": "" << val1 << "" "" << val2 << ""\n"";
  }
  return 0;
}
",96,12,285
"//    0   1   2
int N, R, O, Y, G, B, V;
int s[2000];
int main(void) {
  int t;
  scanf(""%d"", &t);
  for (int tt = 1; tt <= t; tt++) {
    scanf(""%d%d%d%d%d%d%d"", &N, &R, &O, &Y, &G, &B, &V);

    printf(""Case #%d: "", tt);

    if (O > B || G > R || V > Y) {
      puts(""IMPOSSIBLE"");
      continue;
    }

    if (O == B && O > 0) {
      if (O + B < N) {
        puts(""IMPOSSIBLE"");
      } else {
        for (; O > 0; --O)
          printf(""OB"");
        puts("""");
      }
      continue;
    }
    if (G == R && G > 0) {
      if (G + R < N) {
        puts(""IMPOSSIBLE"");
      } else {
        for (; G > 0; --G)
          printf(""RG"");
        puts("""");
      }
      continue;
    }
    if (Y == V && V > 0) {
      if (Y + V < N) {
        puts(""IMPOSSIBLE"");
      } else {
        for (; V > 0; --V)
          printf(""YV"");
        puts("""");
      }
      continue;
    }

    B -= O;
    R -= G;
    Y -= V;
    int m = B + R + Y;
    if (B > R + Y || R > B + Y || Y > B + R) {
      puts(""IMPOSSIBLE"");
      continue;
    }
    memset(s, -1, sizeof(s));

    int maxc = 0, c = R, c2 = Y, mc2 = 1, mc3 = 2;
    if (B > R && B > Y)
      maxc = 2, c = B, mc3 = 0;
    if (Y > B && Y > R)
      maxc = 1, c = Y, c2 = R, mc2 = 0;
    // printf(""%d %d\n"",c,c2);
    // printf(""%d %d %d\n"",maxc,mc2,mc3);

    for (int i = 0; i < c; i++) {
      s[i * 2] = maxc;
    }
    for (int i = m - 1 - (m % 2), j = 0; j < c2; i -= 2, ++j) {
      s[i] = mc2;
    }
    for (int i = 0; i < m; i++) {
      if (s[i] < 0)
        s[i] = mc3;
    }

    for (int i = 0; i < m; i++) {
      if (s[i] == 0) {
        printf(""R"");
        for (; G > 0; --G)
          printf(""GR"");
        // printf(G>0?""RGR"":""R"");
        // --G;
      } else if (s[i] == 1) {
        printf(""Y"");
        for (; V > 0; --V)
          printf(""VY"");
        // printf(V>0?""YVY"":""Y"");
        // --V;
      } else {
        printf(""B"");
        for (; O > 0; --O)
          printf(""OB"");
        // printf(O>0?""BOB"":""B"");
        // --O;
      }
    }
    puts("""");
    // for(int i=0;i<m;++i)
    //   printf(""%d"",s[i]);
    // puts("""");
  }
  return 0;
}
",99,13,989
"
#pragma comment(linker, ""/STACK:100000000000"")
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;

PLL divideme(ll n) {
  n--;
  ll k1 = n / 2;
  ll k2 = n - k1;
  return PLL(min(k1, k2), max(k1, k2));
}
bool comp(const pair<PLL, ll> &a, const pair<PLL, ll> &b) {
  return (a.first.first < b.first.first ||
          a.first.first == b.first.first && a.first.second > b.first.second);
}

int main() {
  freopen(""a.in"", ""r"", stdin);
  freopen(""a.out"", ""w"", stdout);
  int Tcas;
  cin >> Tcas;
  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {
    printf(""Case #%d: "", cas + 1);
    ll n, k;
    cin >> n >> k;
    ll two = 1;
    map<PLL, ll> mp;
    mp[divideme(n)] = 1;
    vector<pair<PLL, ll>> res;
    ll freeSlot = 1;
    while (freeSlot < k) {
      two <<= 1;
      freeSlot += two;
      map<PLL, ll> temp;
      for (map<PLL, ll>::iterator it = mp.begin(); it != mp.end(); ++it) {
        PLL p1 = divideme(it->first.first);
        PLL p2 = divideme(it->first.second);
        if (temp.find(p1) == temp.end())
          temp[p1] = 0;
        if (temp.find(p2) == temp.end())
          temp[p2] = 0;
        temp[p1] += it->second;
        temp[p2] += it->second;
      }
      mp = temp;
      if (freeSlot >= k) {
        k = k - (freeSlot - two);
        break;
      }
    }
    for (map<PLL, ll>::iterator it = mp.begin(); it != mp.end(); ++it)
      res.push_back(*it);
    sort((res).begin(), (res).end());
    reverse((res).begin(), (res).end());
    for (int(i) = 0; (i) < (res.size()); (i)++) {
      if (k <= res[i].second) {
        cout << res[i].first.second << "" "" << res[i].first.first << endl;
        break;
      } else
        k -= res[i].second;
    }
  }
}
",104,14,775
"int getMin(int RYB[3]) {
  int minValue = INT_MAX;
  int minIndex = -1;
  for (int i = 0; i < 3; i++) {
    if ((RYB[i] < minValue) && (RYB[i] != 0)) {
      minIndex = i;
      minValue = RYB[i];
    }
  }
  return minIndex;
}

int getMax(int RYB[3], int avoid, int preference) {
  int maxIndex = -1;
  int maxValue = 0;
  if ((preference != avoid) && (RYB[preference] != 0)) {
    maxIndex = preference;
    maxValue = RYB[preference];
  }
  for (int i = 0; i < 3; i++) {
    if (i == avoid)
      continue;
    if (RYB[i] > maxValue) {
      maxIndex = i;
      maxValue = RYB[i];
    }
  }
  return maxIndex;
}

int main() {
  int tests;
  cin >> tests;
  for (int t = 0; t < tests; t++) {
    int N, R, O, Y, G, B, V;
    cin >> N >> R >> O >> Y >> G >> B >> V;
    int RYB[3] = {R, Y, B};
    char RYB_char[3] = {'R', 'Y', 'B'};
    vector<char> solution;
    int minIndex = getMin(RYB);
    RYB[minIndex]--;
    solution.push_back(RYB_char[minIndex]);
    int lastSelected = minIndex;
    for (int i = 1; i < N; i++) {
      int maxIndex = getMax(RYB, lastSelected, minIndex);
      if (maxIndex == -1)
        break;
      RYB[maxIndex]--;
      solution.push_back(RYB_char[maxIndex]);
      lastSelected = maxIndex;
    }
    if (solution.size() == N) {
      cout << ""Case #"" << (t + 1) << "": "";
      for (int i = 0; i < solution.size(); i++) {
        cout << solution[i];
      }
      cout << endl;
    } else {
      cout << ""Case #"" << (t + 1) << "": IMPOSSIBLE"" << endl;
    }
  }
}
",119,15,623
"typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

const int MAXN = 1 * 1000 + 10;

int e[MAXN], s[MAXN];
int d[MAXN][MAXN];
int qx[MAXN], qy[MAXN];
double dp[MAXN];

int main() {
  ios::sync_with_stdio(false);

  int tt;
  cin >> tt;
  for (int tc = 1; tc <= tt; tc++) {
    cout << ""Case #"" << tc << "": "";

    int n, q;
    cin >> n >> q;
    for (int i = 0; i < n; i++)
      cin >> e[i] >> s[i];
    for (int i = 0; i < n; i++)
      for (int j = 0; j < n; j++)
        cin >> d[i][j];
    for (int i = 0; i < q; i++)
      cin >> qx[i] >> qy[i];

    dp[0] = 0;
    for (int i = 1; i < n; i++)
      dp[i] = 1e15;

    for (int i = 0; i < n; i++) {
      int cur = 0;
      for (int j = i + 1; j < n; j++) {
        cur += d[j - 1][j];
        if (cur > e[i])
          break;

        dp[j] = min(dp[j], dp[i] + (double)cur / (double)s[i]);
      }
    }
    cout << fixed << setprecision(6) << dp[n - 1] << endl;
  }
  return 0;
}
",157,16,470
"typedef long long ll;
typedef long long LL;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
typedef pair<ii, int> iii;
void open() {
  freopen(""D:/OneDrive/Code/GCJ/C-small-attempt1 (1).in"", ""r"", stdin);
  freopen(""D:/OneDrive/Code/GCJ/out22.txt"", ""w"", stdout);
}
int n, q, fr, to;
int energy[120];
int spd[120];
int dist[120][120];
map<iii, double> memo;

double dp(int idx, int pony, int left) {
  iii z = make_pair(ii(idx, pony), left);
  if (idx == to)
    return 0;
  if (memo.find(z) != memo.end() && memo[z] < 1e12)
    return memo[z];

  double ans = 1e12;

  if (dist[idx][idx + 1] <= left) {
    ans = min(dp(idx + 1, pony, left - dist[idx][idx + 1]) +
                  1.0 * dist[idx][idx + 1] / spd[pony],
              ans);
  }

  if (dist[idx][idx + 1] <= energy[idx]) {
    ans = min(ans, dp(idx + 1, idx, energy[idx] - dist[idx][idx + 1]) +
                       1.0 * dist[idx][idx + 1] / spd[idx]);
  }
  return memo[z] = ans;
}

int main(void) {
  open();
  int tc;
  scanf(""%d"", &tc);

  for (int ct = 1; ct <= tc; ct++) {
    scanf(""%d"", &n);
    scanf(""%d"", &q);

    for (int i = 0; i < n; i++) {
      scanf(""%d"", &energy[i]);
      scanf(""%d"", &spd[i]);
    }

    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        scanf(""%d"", &dist[i][j]);
      }
    }

    scanf(""%d"", &fr);
    scanf(""%d"", &to);
    fr--;
    to--;
    memo.clear();

    printf(""Case #%d: %.10lf\n"", ct, dp(0, 0, energy[0]));

    cerr << ""Test "" << ct << "" done \n"";
  }
  return 0;
}
",178,17,716
"// Problem B

long long get() {
  char c;
  while (c = getchar(), c != '-' && (c < '0' || c > '9'))
    ;
  bool flag = (c == '-');
  if (flag)
    c = getchar();
  long long x = 0;
  while (c >= '0' && c <= '9') {
    x = x * 10 + c - '0';
    c = getchar();
  }
  return flag ? -x : x;
}

int a[20];

int main() {
  int totalTest = get();
  for (int test = 1; test <= totalTest; test++) {
    long long n = get(), tmp = n;
    int m = 0;
    while (n) {
      a[m++] = n % 10;
      n /= 10;
    }
    printf(""Case #%d: "", test);
    while (true) {
      int p = m - 1;
      while (p && a[p] <= a[p - 1])
        p--;
      if (!p)
        break;
      a[p]--;
      for (int i = 0; i < p; i++)
        a[i] = 9;
    }
    long long ans = 0;
    for (int i = m - 1; i >= 0; i--)
      ans = ans * 10 + a[i];
    cout << ans << endl;
  }
  return 0;
}
",185,18,384
"// Hi
long long ans;
long long pows[20];
void solve(long long n, int digLeft, int prevDig, long long cur) {
  if (cur * pows[digLeft] > n)
    return;
  if (ans != 0)
    return;
  if (digLeft == 0) {
    ans = cur;
    return;
  }
  for (int i = 9; i >= prevDig; i--) {
    solve(n, digLeft - 1, i, cur * 10 + i);
  }
}
int main() {
  ios::sync_with_stdio(false);
  freopen(""test.txt"", ""r"", stdin);
  freopen(""test1.txt"", ""w"", stdout);
  // freopen("".out"",""w"",stdout);
  int t;
  cin >> t;
  pows[0] = 1;
  for (int i = 0; i < 19; i++) {
    pows[i + 1] = pows[i] * 10;
  }
  for (int i = 1; i <= t; i++) {
    ans = 0;
    long long n;
    cin >> n;
    int digs = log10(n) + 1;
    solve(n, digs, 0, 0);
    cout << ""Case #"" << i << "": "" << ans << endl;
  }
}
",199,19,354
"using LL = long long;
using pii = pair<int, int>;

int T, cas;

int main() {
  freopen(""123.in"", ""r"", stdin);
  freopen(""123.out"", ""w"", stdout);
  cin >> T;
  while (T--) {
    vector<vector<pii>> v;
    vector<int> R;
    int n, p;
    cin >> n >> p;
    for (int i = 0, x; i < n; i++)
      cin >> x, R.push_back(x);
    int mx = p;
    for (int i = 0; i < n; i++) {
      v.push_back(vector<pii>());
      for (int j = 0, x; j < p; j++) {
        cin >> x;
        int a = ceil(1 / 1.1 * x / R[i]), b = floor(1 / 0.9 * x / R[i]);
        // while (1.0 * a * R[i] < 0.9 * x) a ++;
        // while (1.0 * b * R[i] > 1.1 * x) b --;
        // cout << a << "" "" << b << endl;
        if (a <= b)
          v.back().emplace_back(a, b);
      }
      sort(v[i].begin(), v[i].end());
    }
    int ans = 0;
    while (true) {
      int mnv = 0, mxv = 1e9, mnid, mxid, flag = 0;
      for (int i = 0; i < n; i++)
        if (v[i].size()) {
          auto x = v[i].back();
          if (x.first > mnv)
            mnv = x.first, mnid = i;
          if (x.second < mxv)
            mxv = x.second, mxid = i;
        } else
          flag = 1;
      if (flag)
        break;
      // cout << mnv << "" "" << mxv << endl;
      if (mnv <= mxv) {
        ans++;
        for (int i = 0; i < n; i++)
          v[i].pop_back();
      } else {
        v[mnid].pop_back();
      }
    }
    printf(""Case #%d: %d\n"", ++cas, ans);
  }
  return 0;
}
",200,20,625
"map<long long, long long> M;

pair<long long, long long> trivial(long long n, long long k) {
  vector<bool> a(n + 2, false);
  a[0] = a[n + 1] = true;

  pair<long long, long long> res;
  for (int i = 0; i < k; ++i) {
    pair<long long, long long> best = make_pair(-1, -1);
    int index = -1;

    for (int j = 1; j <= n; ++j) {
      if (a[j] == true) {
        continue;
      }

      long long l = 0, r = 0;
      for (int k = j - 1; k >= 0; --k) {
        if (!a[k]) {
          ++l;
        } else {
          break;
        }
      }

      for (int k = j + 1; k <= n + 1; ++k) {
        if (!a[k]) {
          ++r;
        } else {
          break;
        }
      }

      if (min(l, r) > best.first) {
        best = make_pair(min(l, r), max(l, r));
        index = j;
      } else if (min(l, r) == best.first && max(l, r) > best.second) {
        best = make_pair(min(l, r), max(l, r));
        index = j;
      }
    }

    // cout << best.first << "" "" << best.second << "" "" << index << endl;

    a[index] = true;
    res = best;
  }

  return res;
}

void solve(int test) {
  M.clear();
  long long n, k;

  cin >> n >> k;
  long long oldk = k;
  M[n] = 1;

  long long len = 0;
  while (k > 0) {
    pair<long long, long long> p = *M.rbegin();

    long long d = min(k, p.second);

    len = p.first;

    M[p.first] -= d;
    k -= d;

    M[(p.first - 1) / 2] += d;
    M[p.first / 2] += d;

    if (M[p.first] == 0) {
      M.erase(p.first);
    }
  }

  /*if (make_pair((len - 1) / 2, len / 2) != trivial(n, oldk)) {
      cout << ""BAD "" << trivial(n, oldk).first << "" "" << trivial(n, oldk).second
  << endl;
  }*/
  printf(""Case #%d: %lld %lld\n"", test, len / 2, (len - 1) / 2);
}

int main() {
  freopen(""input.txt"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  int t;
  scanf(""%d"", &t);
  for (int i = 0; i < t; ++i) {
    solve(i + 1);
    cerr << i + 1 << "": "" << clock() << endl;
  }

  return 0;
}
",9,21,848
"#pragma comment(linker, ""/STACK:256000000"")

void readData() {}

const int maxN = 110;
const long long inf = 1000000000000000000LL;

int n, q;
long long d[maxN][maxN];
long long e[maxN], s[maxN];

long long a[maxN], b[maxN];

double c[maxN];

double solve(int u, int v) {
  --u;
  --v;

  for (int i = 0; i < n; ++i) {
    c[i] = 1e50;
  }
  c[u] = 0.0;

  for (int steps = 0; steps < 200; ++steps) {
    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < n; ++j) {
        if (i == j || d[i][j] == inf || e[i] < d[i][j]) {
          continue;
        }
        c[j] = min(c[j], c[i] + (double)(d[i][j]) / (double)(s[i]));
      }
    }
  }
  return c[v];
}

void solve(int test) {
  cin >> n >> q;
  for (int i = 0; i < n; ++i) {
    cin >> e[i] >> s[i];
  }

  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      cin >> d[i][j];
      if (d[i][j] == -1) {
        d[i][j] = inf;
      }
    }
  }

  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      for (int k = 0; k < n; ++k) {
        d[j][k] = min(d[j][k], d[j][i] + d[i][k]);
      }
    }
  }

  vector<double> res;
  for (int i = 0; i < q; ++i) {
    int u, v;
    cin >> u >> v;
    res.push_back(solve(u, v));
  }

  printf(""Case #%d:"", test);
  for (int i = 0; i < q; ++i) {
    printf("" %.10lf"", res[i]);
  }
  printf(""\n"");
}

int main(int argc, char *argv[]) {
  freopen(""input.txt"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  int left_bound, right_bound;

  /*freopen(argv[3], ""w"", stdout);
  sscanf(argv[1], ""%d"", &left_bound);
  sscanf(argv[2], ""%d"", &right_bound);*/

  int t;
  cin >> t;
  left_bound = 1, right_bound = t;
  for (int i = 1; i <= t; ++i) {
    if (i >= left_bound && i <= right_bound) {
      solve(i);
    } else {
      readData();
    }
    cerr << i << "": "" << clock() << endl;
  }

  return 0;
}
",9,22,898
"#pragma comment(linker, ""/STACK:256000000"")

void readData() {}

const int maxN = 50;
string s[maxN];
int n, m;

void solve(int test) {
  cin >> n >> m;
  for (int i = 0; i < n; ++i) {
    cin >> s[i];
  }

  for (int i = 0; i < n; ++i) {
    for (int j = 1; j < m; ++j) {
      if (s[i][j] == '?') {
        s[i][j] = s[i][j - 1];
      }
    }
    for (int j = m - 2; j >= 0; --j) {
      if (s[i][j] == '?') {
        s[i][j] = s[i][j + 1];
      }
    }
  }

  for (int j = 0; j < m; ++j) {
    for (int i = 1; i < n; ++i) {
      if (s[i][j] == '?') {
        s[i][j] = s[i - 1][j];
      }
    }
    for (int i = n - 2; i >= 0; --i) {
      if (s[i][j] == '?') {
        s[i][j] = s[i + 1][j];
      }
    }
  }

  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) {
      if (s[i][j] == '?') {
        cerr << ""BAD"" << endl;
      }
    }
  }

  printf(""Case #%d:\n"", test);
  for (int i = 0; i < n; ++i) {
    printf(""%s\n"", s[i].c_str());
  }
}

int main(int argc, char *argv[]) {
  freopen(""input.txt"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  int left_bound, right_bound;

  /*freopen(argv[3], ""w"", stdout);
  sscanf(argv[1], ""%d"", &left_bound);
  sscanf(argv[2], ""%d"", &right_bound);*/

  int t;
  cin >> t;
  left_bound = 1, right_bound = t;
  for (int i = 1; i <= t; ++i) {
    if (i >= left_bound && i <= right_bound) {
      solve(i);
    } else {
      readData();
    }
    cerr << i << "": "" << clock() << endl;
  }

  return 0;
}
",9,23,719
"const long long inf = 1000000000000000000LL;

vector<long long> res;

void rec(long long value, long long d) {
  if (value >= inf) {
    return;
  }
  res.push_back(value);
  for (long long i = d; i <= 9; ++i) {
    if (value < inf / 10LL) {
      rec(value * 10LL + i, i);
    }
  }
}

void solve(int test) {
  long long n;
  cin >> n;

  int index = upper_bound(res.begin(), res.end(), n) - res.begin() - 1;
  printf(""Case #%d: %lld\n"", test, res[index]);
}

int main() {
  freopen(""input.txt"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  for (int i = 1; i <= 9; ++i) {
    rec(i, i);
  }

  sort(res.begin(), res.end());
  cerr << ""Res size: "" << res.size() << endl;

  int t;
  scanf(""%d"", &t);
  for (int i = 0; i < t; ++i) {
    solve(i + 1);
    cerr << i + 1 << "": "" << clock() << endl;
  }

  return 0;
}
",9,24,376
"void solve(int test) {
  string s;
  cin >> s;
  int k;
  cin >> k;

  int n = s.size();

  int res = 0;
  for (int i = 0; i + k - 1 < n; ++i) {
    if (s[i] == '-') {
      ++res;
      for (int j = i; j < i + k; ++j) {
        s[j] = (s[j] == '+' ? '-' : '+');
      }
    }
  }

  if (count(s.begin(), s.end(), '+') != n) {
    printf(""Case #%d: IMPOSSIBLE\n"", test);
  } else {
    printf(""Case #%d: %d\n"", test, res);
  }
}

int main() {
  freopen(""input.txt"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  int t;
  scanf(""%d"", &t);
  for (int i = 0; i < t; ++i) {
    solve(i + 1);
    cerr << i + 1 << "": "" << clock() << endl;
  }

  return 0;
}
",9,25,317
"#pragma comment(linker, ""/STACK:256000000"")

void readData() {}

const int maxN = 1100;
double d;
long long n;
double s[maxN], k[maxN];

void solve(int test) {
  if (test == 29) {
    int f = 0;
  }
  cin >> d >> n;
  for (int i = 0; i < n; ++i) {
    cin >> k[i] >> s[i];
  }

  double l = 0.0, r = 1e18;
  for (int t = 0; t < 400; ++t) {
    double m = (l + r) / 2.0;
    bool ok = true;

    double p = d / m;
    for (int j = 0; j < n; ++j) {
      if (k[j] + s[j] * p < d) {
        ok = false;
        break;
      }
    }

    if (ok) {
      l = m;
    } else {
      r = m;
    }
  }

  printf(""Case #%d: %.10lf\n"", test, (l + r) / 2.0);
}

int main(int argc, char *argv[]) {
  freopen(""input.txt"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  int left_bound, right_bound;

  /*freopen(argv[3], ""w"", stdout);
  sscanf(argv[1], ""%d"", &left_bound);
  sscanf(argv[2], ""%d"", &right_bound);*/

  int t;
  cin >> t;
  left_bound = 1, right_bound = t;
  for (int i = 1; i <= t; ++i) {
    if (i >= left_bound && i <= right_bound) {
      solve(i);
    } else {
      readData();
    }
    cerr << i << "": "" << clock() << endl;
  }

  return 0;
}
",9,26,542
"#pragma comment(linker, ""/STACK:256000000"")

void readData() {}

const int maxN = 60;
const int maxL = 2000000;
int n, p;
int a[maxN];
int b[maxN][maxN];

int d[maxN][maxN];
int q[maxL];

pair<int, int> c[maxN][maxN];
bool used[maxN][maxN];

pair<int, int> getPackages(int value, int t) {
  int r = (value * 10) / (9 * t);
  int l = (value * 10 + 11 * t - 1) / (11 * t);

  return make_pair(l, r);
}

void solve(int test) {
  cin >> n >> p;
  for (int i = 0; i < n; ++i) {
    cin >> a[i];
  }

  for (int i = 0; i < maxL; ++i) {
    q[i] = 0;
  }

  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < p; ++j) {
      cin >> b[i][j];
      c[i][j] = getPackages(b[i][j], a[i]);
      for (int k = c[i][j].first; k <= c[i][j].second; ++k) {
        q[k] = true;
      }
    }
  }

  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < p; ++j) {
      used[i][j] = false;
    }
  }

  int res = 0;
  for (int k = 0; k < maxL; ++k) {
    if (!q[k]) {
      continue;
    }
    while (true) {
      bool good = true;
      for (int i = 0; i < n; ++i) {
        bool have = false;
        for (int j = 0; j < p; ++j) {
          if (used[i][j]) {
            continue;
          }
          if (k >= c[i][j].first && k <= c[i][j].second) {
            have = true;
            break;
          }
        }
        if (!have) {
          good = false;
          break;
        }
      }
      if (!good) {
        break;
      }
      ++res;
      for (int i = 0; i < n; ++i) {
        for (int j = 0; j < p; ++j) {
          if (used[i][j]) {
            continue;
          }
          if (k >= c[i][j].first && k <= c[i][j].second) {
            used[i][j] = true;
            break;
          }
        }
      }
    }
  }

  printf(""Case #%d: %d\n"", test, res);
}

int main(int argc, char *argv[]) {
  freopen(""input.txt"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  int left_bound, right_bound;

  /*freopen(argv[3], ""w"", stdout);
  sscanf(argv[1], ""%d"", &left_bound);
  sscanf(argv[2], ""%d"", &right_bound);*/

  int t;
  cin >> t;
  left_bound = 1, right_bound = t;
  for (int i = 1; i <= t; ++i) {
    if (i >= left_bound && i <= right_bound) {
      solve(i);
    } else {
      readData();
    }
    cerr << i << "": "" << clock() << endl;
  }

  return 0;
}
",9,27,999
"pair<int, int> a[3];
int z[1010];

int main() {
  freopen(""in"", ""r"", stdin);
  freopen(""out"", ""w"", stdout);
  int tt;
  scanf(""%d"", &tt);
  for (int cc = 1; cc <= tt; ++cc) {
    double begt = clock();
    printf(""Case #%d: "", cc);
    int n, R, O, Y, G, B, V;
    scanf(""%d %d %d %d %d %d %d"", &n, &R, &O, &Y, &G, &B, &V);
    a[0] = {R, 0};
    a[1] = {Y, 1};
    a[2] = {B, 2};
    sort(a, a + 3);
    memset(z, -1, sizeof z);
    for (int i = 2; i >= 0; --i) {
      while (a[i].first > 0) {
        int pos = -1;
        for (int j = 0; j < n; j += 2) {
          if (z[j] == -1) {
            pos = j;
            break;
          }
        }
        if (pos != -1) {
          z[pos] = a[i].second;
          --a[i].first;
          continue;
        }
        for (int j = 1; j < n; j += 2) {
          if (z[j] == -1) {
            pos = j;
            break;
          }
        }
        z[pos] = a[i].second;
        --a[i].first;
      }
    }
    bool can = true;
    for (int i = 0; i < n; ++i) {
      if (z[i] == z[(i + 1) % n]) {
        can = false;
      }
    }
    if (!can) {
      puts(""IMPOSSIBLE"");
    } else {
      for (int i = 0; i < n; ++i) {
        if (z[i] == 0) {
          putchar('R');
        } else if (z[i] == 1) {
          putchar('Y');
        } else {
          putchar('B');
        }
      }
      putchar('\n');
    }
    fprintf(stderr, ""case %d solved in %.3f\n"", cc,
            (clock() - begt) / CLOCKS_PER_SEC);
  }
}
",29,28,646
"const int N = 1010;

int a[N];
long long b[N];

int main() {
  freopen(""in"", ""r"", stdin);
  freopen(""out"", ""w"", stdout);
  int tt;
  scanf(""%d"", &tt);
  for (int cc = 1; cc <= tt; ++cc) {
    double begt = clock();
    printf(""Case #%d: "", cc);
    int d, n;
    scanf(""%d %d"", &d, &n);
    for (int i = 0; i < n; ++i) {
      int foo, bar;
      scanf(""%d %d"", &foo, &bar);
      a[i] = d - foo;
      b[i] = 1LL * d * bar;
    }
    long double l = 0, r = 1e16;
    for (int it = 0; it < 1000; ++it) {
      long double s = (l + r) * 0.5;
      bool can = true;
      for (int i = 0; i < n; ++i) {
        if (b[i] < a[i] * s) {
          can = false;
        }
      }
      if (can) {
        l = s;
      } else {
        r = s;
      }
    }
    printf(""%.15f\n"", (double)((l + r) * 0.5));
    fprintf(stderr, ""case %d solved in %.3f\n"", cc,
            (clock() - begt) / CLOCKS_PER_SEC);
  }
}
",29,29,413
"struct E {
  int l, r;
  E(int nl, int nr) : l(nl), r(nr) {}
  bool operator<(const E &o) const {
    int v = r - l;
    int ov = o.r - o.l;
    if (v / 2 != ov / 2) {
      return v / 2 > ov / 2;
    }
    if ((v + 1) / 2 != (ov + 1) / 2) {
      return (v + 1) / 2 > (ov + 1) / 2;
    }
    return l < o.l;
  }
};

int main() {
  freopen(""in"", ""r"", stdin);
  freopen(""out"", ""w"", stdout);
  int tt;
  scanf(""%d"", &tt);
  for (int cc = 1; cc <= tt; ++cc) {
    printf(""Case #%d: "", cc);
    int n, k;
    scanf(""%d %d"", &n, &k);
    set<E> ss = {{0, n + 1}};
    while (k-- > 1) {
      int l = ss.begin()->l;
      int r = ss.begin()->r;
      ss.erase(ss.begin());
      int s = (l + r) / 2;
      if (s - l - 1 >= 1) {
        ss.emplace(l, s);
      }
      if (r - s - 1 >= 1) {
        ss.emplace(s, r);
      }
    }
    int ans = ss.begin()->r - ss.begin()->l;
    printf(""%d %d\n"", (ans + 1) / 2 - 1, ans / 2 - 1);
  }
}
",29,30,451
"char a[77][77];

int main() {
  freopen(""in"", ""r"", stdin);
  freopen(""out"", ""w"", stdout);
  int tt;
  scanf(""%d"", &tt);
  for (int cc = 1; cc <= tt; ++cc) {
    double begt = clock();
    printf(""Case #%d:\n"", cc);
    int n, m;
    scanf(""%d %d"", &n, &m);
    for (int i = 0; i < n; ++i) {
      scanf(""%s"", a[i]);
    }
    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < m - 1; ++j) {
        if (a[i][j] != '?' && a[i][j + 1] == '?') {
          a[i][j + 1] = a[i][j];
        }
      }
      for (int j = m - 1; j > 0; --j) {
        if (a[i][j] != '?' && a[i][j - 1] == '?') {
          a[i][j - 1] = a[i][j];
        }
      }
    }
    for (int i = 0; i < n - 1; ++i) {
      for (int j = 0; j < m; ++j) {
        if (a[i][j] != '?' && a[i + 1][j] == '?') {
          a[i + 1][j] = a[i][j];
        }
      }
    }
    for (int i = n - 1; i > 0; --i) {
      for (int j = 0; j < m; ++j) {
        if (a[i][j] != '?' && a[i - 1][j] == '?') {
          a[i - 1][j] = a[i][j];
        }
      }
    }
    for (int i = 0; i < n; ++i) {
      printf(""%s\n"", a[i]);
    }
    fprintf(stderr, ""case %d solved in %.3f\n"", cc,
            (clock() - begt) / CLOCKS_PER_SEC);
  }
}
",29,31,585
"char s[77];
int q[7777];
int d[7777];

int main() {
  freopen(""in"", ""r"", stdin);
  freopen(""out"", ""w"", stdout);
  int tt;
  scanf(""%d"", &tt);
  for (int cc = 1; cc <= tt; ++cc) {
    printf(""Case #%d: "", cc);
    int k;
    scanf(""%s %d"", s, &k);
    int n = strlen(s);
    q[0] = 1 << n;
    for (int i = 0; i < n; ++i) {
      if (s[i] == '-') {
        q[0] |= 1 << (n - 1 - i);
      }
    }
    memset(d, -1, sizeof d);
    d[q[0]] = 0;
    for (int qh = 0, qt = 1; qh < qt; ++qh) {
      int x = q[qh];
      for (int i = 0; i <= n - k; ++i) {
        int nx = x ^ (((1 << k) - 1) << i);
        if (d[nx] == -1) {
          d[nx] = d[x] + 1;
          q[qt++] = nx;
        }
      }
    }
    if (d[1 << n] == -1) {
      puts(""IMPOSSIBLE"");
    } else {
      printf(""%d\n"", d[1 << n]);
    }
  }
}
",29,32,404
"bool check(int n) {
  while (n > 0) {
    if (n % 10 < n / 10 % 10) {
      return false;
    }
    n /= 10;
  }
  return true;
}

int main() {
  freopen(""in"", ""r"", stdin);
  freopen(""out"", ""w"", stdout);
  int tt;
  scanf(""%d"", &tt);
  for (int cc = 1; cc <= tt; ++cc) {
    printf(""Case #%d: "", cc);
    int n;
    scanf(""%d"", &n);
    int ans = n;
    while (!check(ans)) {
      --ans;
    }
    printf(""%d\n"", ans);
  }
}
",29,33,198
"const long long inf = 4e18;
const int N = 123;

int a[N];
int b[N];
long long d[N][N];
long double f[N];
bool was[N];

int main() {
  freopen(""in"", ""r"", stdin);
  freopen(""out"", ""w"", stdout);
  int tt;
  scanf(""%d"", &tt);
  for (int cc = 1; cc <= tt; ++cc) {
    double begt = clock();
    printf(""Case #%d: "", cc);
    int n, qq;
    scanf(""%d %d"", &n, &qq);
    for (int i = 0; i < n; ++i) {
      scanf(""%d %d"", a + i, b + i);
    }
    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < n; ++j) {
        int foo;
        scanf(""%d"", &foo);
        d[i][j] = (foo == -1 ? inf : foo);
      }
    }
    for (int k = 0; k < n; ++k) {
      for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
          d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
        }
      }
    }
    for (int q = 0; q < qq; ++q) {
      if (q > 0)
        putchar(' ');
      int from, to;
      scanf(""%d %d"", &from, &to);
      --from;
      --to;
      for (int i = 0; i < n; ++i) {
        f[i] = inf;
      }
      memset(was, false, sizeof was);
      was[from] = true;
      f[from] = 0;
      int x = from;
      for (int it = 0; it < n - 1; ++it) {
        for (int y = 0; y < n; ++y) {
          if (d[x][y] > a[x]) {
            continue;
          }
          long double cur = f[x] + (long double)d[x][y] / b[x];
          if (cur < f[y]) {
            f[y] = cur;
          }
        }
        x = -1;
        for (int y = 0; y < n; ++y) {
          if (was[y]) {
            continue;
          }
          if (x == -1 || f[y] < f[x]) {
            x = y;
          }
        }
        was[x] = true;
      }
      printf(""%.15f"", (double)f[to]);
    }
    putchar('\n');
    fprintf(stderr, ""case %d solved in %.3f\n"", cc,
            (clock() - begt) / CLOCKS_PER_SEC);
  }
}
",29,34,778
"typedef pair<int, int> par;
typedef long long int tint;
map<char, char> inv;

int main() {
  freopen(""test.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);

  inv['-'] = '+';
  inv['+'] = '-';
  int t, k;
  string s;

  cin >> t;

  for (int caso = (1); caso < (t + 1); caso++) {
    cin >> s >> k;
    int l = s.size();

    int ans = 0;
    for (int i = 0; i < (l + 1 - k); i++) {
      if (s[i] == '-') {
        for (int j = (i); j < (i + k); j++)
          s[j] = inv[s[j]];
        ans++;
      }
    }
    bool check = true;
    for (int i = 0; i < (l); i++) {
      check = check and s[i] == '+';
    }
    cout << ""Case #"" << caso << "": "";
    if (check)
      cout << ans << endl;
    else
      cout << ""IMPOSSIBLE"" << endl;
  }

  return 0;
}
",37,35,327
"typedef pair<int, int> par;
typedef long long int tint;

string cake[50];

int main() {
  freopen(""test.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);

  int t;
  cin >> t;
  int r, c;

  for (int caso = (1); caso < (t + 1); caso++) {
    cin >> r >> c;

    bool in[50];
    int mh[50], mah[50], ml[50], mal[50];

    for (int i = 0; i < (50); i++) {
      mh[i] = 100;
      ml[i] = 100;
      in[i] = false;
      mah[i] = 0;
      mal[i] = 0;
    }
    // cout << ""init"" << endl;

    for (int i = 0; i < (r); i++)
      cin >> cake[i];

    int co = 0;

    for (char l = 'A'; l <= 'Z'; l++) {
      for (int i = 0; i < (r); i++) {
        for (int j = 0; j < (c); j++) {
          if (cake[i][j] == l) {
            in[co] = true;
            mh[co] = min(mh[co], i);
            mah[co] = max(mh[co], i);
            ml[co] = min(ml[co], j);
            mal[co] = max(mal[co], j);
          }
        }
      }
      co++;
    }

    for (int i = 0; i < (40); i++) {
      if (in[i]) {
        char l = (char)('A' + i);
        for (int a = mh[i]; a <= mah[i]; a++) {
          for (int b = ml[i]; b <= mal[i]; b++) {
            cake[a][b] = l;
          }
        }
      }
    }
    // horizontal
    for (int i = 0; i < (40); i++) {
      if (in[i]) {
        char l = (char)('A' + i);
        // cout << l << endl;
        int mml = ml[i];
        int mmal = mal[i];

        for (int k = (mal[i] + 1); k < (c); k++) {
          bool ext = true;
          for (int j = (mh[i]); j < (mah[i] + 1); j++) {
            if (cake[j][k] != '?') {
              ext = false;
              break;
            }
          }
          if (ext) {
            mmal++;
            for (int j = (mh[i]); j < (mah[i] + 1); j++) {
              cake[j][k] = l;
            }
          } else
            break;
        }
        for (int k = ml[i] - 1; k >= 0; k--) {
          bool ext = true;
          for (int j = (mh[i]); j < (mah[i] + 1); j++) {
            if (cake[j][k] != '?') {
              ext = false;
              break;
            }
          }
          if (ext) {
            mml--;
            for (int j = (mh[i]); j < (mah[i] + 1); j++) {
              cake[j][k] = l;
            }
          } else
            break;
        }
        ml[i] = mml;
        mal[i] = mmal;
        // cout << ml[i] << "" "" << mal[i] << "" "" << mh[i] << "" "" << mah[i] <<
        // endl;
      }
    }

    // vertical
    for (int i = 0; i < (40); i++) {
      if (in[i]) {
        char l = (char)('A' + i);
        int mmh = mh[i];
        int mmah = mah[i];
        for (int k = (mah[i] + 1); k < (r); k++) {
          bool ext = true;
          for (int j = (ml[i]); j < (mal[i] + 1); j++) {
            if (cake[k][j] != '?') {
              ext = false;
              break;
            }
          }
          if (ext) {
            mmah++;
            for (int j = (ml[i]); j < (mal[i] + 1); j++) {
              cake[k][j] = l;
            }
          } else
            break;
        }
        for (int k = mh[i] - 1; k >= 0; k--) {
          bool ext = true;
          for (int j = (ml[i]); j < (mal[i] + 1); j++) {
            if (cake[k][j] != '?') {
              ext = false;
              break;
            }
          }
          if (ext) {
            mmh--;
            for (int j = (ml[i]); j < (mal[i] + 1); j++) {
              cake[k][j] = l;
            }
          } else
            break;
        }
        mh[i] = mmh;
        mah[i] = mmah;
      }
    }

    cout << ""Case #"" << caso << "": "" << endl;
    for (int i = 0; i < (r); i++)
      cout << cake[i] << endl;
  }

  return 0;
}
",37,36,1473
"typedef long long int tint;
typedef pair<tint, tint> par;

par h[1100];

int main() {
  freopen(""test.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);

  int t, n, d;
  cin >> t;

  for (int caso = (1); caso < (t + 1); caso++) {
    cin >> d >> n;
    for (int i = 0; i < (n); i++)
      cin >> h[i].first >> h[i].second;
    sort(h, h + n);

    int next = n - 1;

    for (int i = (n - 2); i >= 0; i--) {
      // cout << h[i].x << "" "" << h[i].y << endl;
      if (h[i].second > h[next].second) {
        par q =
            make_pair(h[next].first - h[i].first, h[i].second - h[next].second);
        par arr = make_pair(d - h[next].first, h[next].second);
        // cout << i << "" "" << next << endl;
        // cout << q.x << "" "" << q.y << endl;
        // cout << arr.x << "" "" << arr.y << endl;
        if (q.first * arr.second >= q.second * arr.first) {
          next = i;
        }
      } else
        next = i;
    }
    // cout << next << endl;

    par arr = make_pair(d - h[next].first, h[next].second);
    double ans = d * arr.second / (arr.first + 0.0);
    cout.setf(ios::showpoint | ios::fixed);
    cout.precision(10);

    cout << ""Case #"" << caso << "": "" << ans << endl;
  }

  return 0;
}
",37,37,491
"typedef pair<int, int> par;
typedef long long int tint;

string solve(int R, int Y, int B) {
  int aux[3];
  aux[0] = R;
  aux[1] = Y;
  aux[2] = B;
  for (int i = 0; i < (3); i++) {
    if (aux[i] < 0)
      return ""IMPOSSIBLE"";
  }
  string l;

  if (R >= Y) {
    if (Y >= B)
      l = ""RYB"";
    else {
      if (B > R) {
        l = ""BRY"";
        aux[0] = B;
        aux[1] = R;
        aux[2] = Y;
      } else {
        l = ""RBY"";
        aux[0] = R;
        aux[1] = B;
        aux[2] = Y;
      }
    }
  } else {
    if (R >= B) {
      l = ""YRB"";
      aux[0] = Y;
      aux[1] = R;
      aux[2] = B;
    } else {
      if (B >= Y) {
        l = ""BYR"";
        aux[0] = B;
        aux[1] = Y;
        aux[2] = R;
      } else {
        l = ""YBR"";
        aux[0] = Y;
        aux[1] = B;
        aux[2] = R;
      }
    }
  }

  if (aux[0] > (aux[1] + aux[2]))
    return ""IMPOSSIBLE"";

  string ans = """";
  for (int i = 0; i < (aux[1] - aux[2]); i++) {
    ans += l[0];
    ans += l[1];
  }
  aux[0] -= (aux[1] - aux[2]);
  aux[1] = aux[2];
  for (int i = 0; i < (aux[0]); i++) {
    if (i & 1) {
      ans += l[0];
      ans += l[1];
      aux[1]--;
    } else {
      ans += l[0];
      ans += l[2];
      aux[2]--;
    }
  }
  if (aux[0] & 1) {
    ans += l[1];
    aux[1]--;
  }
  for (int i = 0; i < (aux[2]); i++) {
    ans += l[2];
    ans += l[1];
  }

  return (ans);
}

int main() {
  freopen(""test.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);
  int t, N;
  cin >> t;
  int R, O, Y, G, B, V;
  for (int caso = (1); caso < (t + 1); caso++) {
    cin >> N;
    cin >> R >> O >> Y >> G >> B >> V;
    R -= G;
    Y -= V;
    B -= O;
    if (R == 0 and G) {
      if (N == 2 * G) {
        string ans = """";
        for (int i = 0; i < (N / 2); i++) {
          ans += ""RG"";
        }
        cout << ""Case #"" << caso << "": "" << ans << endl;
      } else {
        cout << ""Case #"" << caso << "": ""
             << ""IMPOSSIBLE"" << endl;
      }
      continue;
    }
    if (Y == 0 and V) {
      if (N == 2 * V) {
        string ans = """";
        for (int i = 0; i < (N / 2); i++) {
          ans += ""YV"";
        }
        cout << ""Case #"" << caso << "": "" << ans << endl;
      } else {
        cout << ""Case #"" << caso << "": ""
             << ""IMPOSSIBLE"" << endl;
      }
      continue;
    }
    if (B == 0 and O) {
      if (N == 2 * O) {
        string ans = """";
        for (int i = 0; i < (N / 2); i++) {
          ans += ""BO"";
        }
        cout << ""Case #"" << caso << "": "" << ans << endl;
      } else {
        cout << ""Case #"" << caso << "": ""
             << ""IMPOSSIBLE"" << endl;
      }
      continue;
    }

    // cout << R << "" "" << Y << "" "" << B << endl;
    string ans = solve(R, Y, B);
    string a = """";
    int l = ans.size();
    if (ans == ""IMPOSSIBLE"")
      a = ans;
    else {
      int o = 0;
      int g = 0;
      int v = 0;
      for (int i = 0; i < (l); i++) {
        a += ans[i];
        if (ans[i] == 'R' and g < G) {
          a += ""GR"";
          g++;
        }
        if (ans[i] == 'Y' and v < V) {
          a += ""VY"";
          v++;
        }
        if (ans[i] == 'B' and o < O) {
          a += ""OB"";
          o++;
        }
      }
    }

    cout << ""Case #"" << caso << "": "" << a << endl;
  }

  return 0;
}
",37,38,1410
"typedef pair<int, int> par;
typedef long long int tint;

int r[55];
int q[55][55];
par cand[55][55];

int main() {
  freopen(""test.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);

  int t;
  cin >> t;
  int n, p;

  for (int caso = (1); caso < (t + 1); caso++) {
    cin >> n >> p;
    vector<int> l;
    for (int i = 0; i < (n); i++)
      cin >> r[i];
    bool used[55][55];
    for (int i = 0; i < (n); i++)
      for (int j = 0; j < (n); j++)
        used[i][j] = false;
    for (int i = 0; i < (n); i++) {
      for (int j = 0; j < (p); j++)
        cin >> q[i][j];
    }
    for (int i = 0; i < (n); i++) {
      for (int j = 0; j < (p); j++) {
        int a = (100 * q[i][j] + 110 * r[i] - 1) / (110 * r[i]);
        a = max(a, 1);
        int b = (100 * q[i][j]) / (90 * r[i]);
        if (a <= b)
          l.push_back(a);
        par p;
        p.first = b - a;
        p.second = b;
        cand[i][j] = p;
      }
      sort(cand[i], cand[i] + p);
    }
    sort(l.begin(), l.end());
    int ans = 0;

    for (int m = 0; m < (l.size()); m++) {
      bool ok = true;
      int k = l[m];
      int ac[55];
      for (int i = 0; i < (n); i++) {
        bool oki = false;
        for (int j = 0; j < (p); j++) {
          if (!used[i][j]) {
            int a = cand[i][j].second - cand[i][j].first;
            int b = cand[i][j].second;
            if (a <= k and k <= b) {
              // used[i][j] = true;
              ac[i] = j;
              oki = true;
              break;
            }
          }
        }
        if (!oki) {
          ok = false;
          break;
        }
      }

      if (ok) {
        // cout << k << endl;
        for (int i = 0; i < (n); i++)
          used[i][ac[i]] = true;
        ans++;
      }
    }

    cout << ""Case #"" << caso << "": "" << ans << endl;
  }

  return 0;
}
",37,39,774
"typedef pair<int, int> par;
typedef long long int tint;

int main() {
  freopen(""test.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);

  int t;
  tint n, k;

  cin >> t;

  for (int caso = (1); caso < (t + 1); caso++) {
    cin >> n >> k;
    tint b = 62;
    while (k < (1ll << b))
      b--;
    // cout << k << "" ""  << b << "" "" << (1ll << b) << endl;
    tint nn = n + 1 - (1ll << b);
    tint q = nn / (1ll << b);
    tint r = nn % (1ll << b);
    // cout << nn << "" ""  << q << "" "" << r << endl;

    tint kk = k + 1 - (1ll << b);
    tint ma, mi;
    if (kk <= r)
      q++;
    q--;
    ma = (q + 1ll) / 2ll;
    mi = q / 2ll;

    cout << ""Case #"" << caso << "": "" << ma << "" "" << mi << endl;
  }

  return 0;
}
",37,40,333
"typedef long long int tint;
typedef pair<int, int> par;

tint d[110][110];
int e[110];
int s[110];
par qu[110];

double dp[110][110];

int main() {
  freopen(""test.txt"", ""r"", stdin);
  freopen(""out2.txt"", ""w"", stdout);

  int t, n, q;
  cin >> t;

  for (int caso = (1); caso < (t + 1); caso++) {
    cin >> n >> q;
    // cout << n << "" "" << q << endl;
    for (int i = 0; i < (n); i++)
      cin >> e[i + 1] >> s[i + 1];
    for (int i = 0; i < (n); i++) {
      for (int j = 0; j < (n); j++)
        cin >> d[i + 1][j + 1];
    }
    for (int i = 0; i < (q); i++) {
      cin >> qu[i].first >> qu[i].second;
    }
    tint acum[110];
    acum[1] = 0;
    for (int i = 0; i < (110); i++)
      for (int j = 0; j < (110); j++)
        dp[i][j] = -1;
    dp[2][1] = d[1][2] / (s[1] + 0.0);
    for (int i = (2); i < (n + 1); i++)
      acum[i] = acum[i - 1] + d[i - 1][i];
    // forn(i,n+1) cout << acum[i] << "" "";
    // cout << endl;

    for (int i = (3); i < (n + 1); i++) {
      for (int j = (1); j < (i); j++) {
        tint dis = (acum[i] - acum[j]);
        if (dis <= e[j] and dis >= 0) {
          double t = dis / (s[j] + 0.0);
          double m = -1;
          for (int k = (1); k < (j); k++) {
            if (dp[j][k] >= 0.0) {
              if (m > -1)
                m = min(m, dp[j][k]);
              else
                m = dp[j][k];
            }
          }
          if (m >= 0)
            dp[i][j] = t + m;
        }
      }
    }
    double ans = -1;
    for (int i = (1); i < (n); i++) {
      if (dp[n][i] >= 0.0) {
        if (ans >= 0.0)
          ans = min(ans, dp[n][i]);
        else
          ans = dp[n][i];
      }
    }

    cout.setf(ios::showpoint | ios::fixed);
    cout.precision(10);

    cout << ""Case #"" << caso << "": "" << ans << endl;
  }

  return 0;
}
",37,41,830
"//
//  main.cpp
//  ProblemB
//
//  Created by Tung Nguyen on 4/8/17.
//
//

int int_char(char ch) { return ch - '0'; }

int main(int argc, const char *argv[]) {
  ifstream fin(""B-small-attempt2.in.txt"");
  ofstream fout(""B-small-attempt2.out.txt"");

  int T;
  fin >> T;
  for (int Case = 1; Case <= T; Case++) {
    string N;
    fin >> N;

    char n1 = N[0];
    for (int i = 1; i < N.length(); i++) {
      char n2 = N[i];
      if (n2 < n1) {
        for (int j = i - 1; j >= 0; j--) {
          if (j == 0 || N[j - 1] < N[j]) {
            N[j]--;
            for (int k = j + 1; k < N.length(); k++) {
              N[k] = '9';
            }
            break;
          }
        }
        break;
      }
      n1 = n2;
    }
    if (N[0] == '0') {
      N.erase(0, 1);
    }
    fout << ""Case #"" << Case << "": "" << N << endl;
  }

  fout.close();
  fin.close();

  return 0;
}
",39,42,386
"//
//  main.cpp
//  ProblemC
//
//  Created by Tung Nguyen on 4/8/17.
//
//

long long N, K;
long long maxLR, minLR;

long long n_c[1000];
long long n[1000];

int i, c;

void append(long long ni, long long ci) {
  bool match = false;
  for (int j = i + 1; j < c; j++) {
    if (n[j] == ni) {
      n_c[j] += ci;
      match = true;
      break;
    }
  }
  if (!match) {
    n[c] = ni;
    n_c[c] = ci;
    c++;
  }
}

void solve() {
  i = 0;
  c = 1;
  n_c[0] = 1;
  n[0] = N;
  long long k = 0;
  while (i < c) {
    long long ni = n[i];
    k += n_c[i];
    if (k >= K) {
      maxLR = ni / 2;
      minLR = ni / 2;
      if (ni % 2 == 0) {
        minLR--;
      }
      break;
    } else {
      long long ni1 = ni / 2;
      long long ni2 = ni / 2;
      if (ni % 2 == 0) {
        ni2--;
      }
      append(ni1, n_c[i]);
      append(ni2, n_c[i]);
    }
    i++;
  }
}

int main(int argc, const char *argv[]) {
  ifstream fin(""C-small-1-attempt0.in.txt"");
  ofstream fout(""C-small-1-attempt0.out.txt"");

  int T;
  fin >> T;
  for (int Case = 1; Case <= T; Case++) {
    fin >> N >> K;
    solve();
    fout << ""Case #"" << Case << "": "" << maxLR << "" "" << minLR << endl;
  }

  fout.close();
  fin.close();

  return 0;
}
",39,43,573
"//
//  main.cpp
//  ProblemC
//
//  Created by Tung Nguyen on 4/22/17.
//
//

int N, Q;
long long E[100], S[100];
long long D[100][100];
int U[100], V[100];

double result[100];

double bestsofar[100];

void solve() {
  for (int i = 0; i < 100; i++) {
    bestsofar[i] = -1;
  }

  bestsofar[0] = 0;
  for (int i = 0; i < N; i++) {
    long long e = E[i], s = S[i];
    double time = bestsofar[i];
    for (int j = i + 1; j < N; j++) {
      long long distance = D[j - 1][j];
      if (distance > e) {
        break;
      }
      time += distance * 1.0 / s;
      if (bestsofar[j] == -1 || time < bestsofar[j]) {
        bestsofar[j] = time;
      }
      e -= distance;
    }
  }
  result[0] = bestsofar[N - 1];
}

int main(int argc, const char *argv[]) {
  ifstream fin(""C-small-attempt0.in.txt"");
  ofstream fout(""C-small-attempt0.out.txt"");

  int T;
  fin >> T;
  for (int Case = 1; Case <= T; Case++) {
    fin >> N >> Q;
    for (int i = 0; i < N; i++) {
      fin >> E[i] >> S[i];
    }

    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        fin >> D[i][j];
      }
    }

    for (int i = 0; i < Q; i++) {
      fin >> U[i] >> V[i];
    }

    solve();

    fout << ""Case #"" << Case << "":"";
    for (int i = 0; i < Q; i++) {
      char buff[100];
      snprintf(buff, sizeof(buff), ""%.8f"", result[i]);
      fout << "" "" << buff;
    }
    fout << endl;
  }

  fin.close();
  fout.close();
  return 0;
}
",39,44,655
"//
//  main.cpp
//  ProblemA
//
//  Created by Tung Nguyen on 4/22/17.
//
//

long long D;
int N;

long long K[1000];
long long S[1000];

int main(int argc, const char *argv[]) {
  ifstream fin(""A-small-attempt1.in.txt"");
  ofstream fout(""A-small-attempt1.out.txt"");

  int T;
  fin >> T;
  for (int Case = 1; Case <= T; Case++) {
    fin >> D >> N;

    double minTime = 0;

    for (int i = 0; i < N; i++) {
      fin >> K[i] >> S[i];
      double time = (D - K[i]) * 1.0 / S[i];
      minTime = time > minTime ? time : minTime;
    }
    char buff[100];
    snprintf(buff, sizeof(buff), ""%.6f"", D / minTime);

    fout << ""Case #"" << Case << "": "" << buff << endl;
  }

  fin.close();
  fout.close();
  return 0;
}
",39,45,316
"//
//  main.cpp
//  ProblemB
//
//  Created by Tung Nguyen on 4/15/17.
//
//

int N, P;
int R[50];
int Q[50][50];
int nmin[50][50];
int nmax[50][50];

int result;

void find(int n, int p, int *nmax, int *nmin) {
  int q = Q[n][p];
  double rmax = q / 0.9;
  double rmin = q / 1.1;

  *nmin = ceil(rmin / R[n]);
  *nmax = floor(rmax / R[n]);
  if (*nmax == 0 || (*nmin > *nmax)) {
    *nmax = -1;
  }
}

void solve1() {
  int count = 0;
  for (int p = 0; p < P; p++) {
    if (nmax[0][p] > 0) {
      count++;
    }
  }
  result = count;
}

int Pair[50];
bool Paired[50];
int Pair_p;

void solve2() {
  if (Pair_p == P) {
    int count = 0;
    for (int p = 0; p < P; p++) {
      if (nmax[0][p] > 0 && nmax[1][Pair[p]] > 0 &&
          max(nmin[0][p], nmin[1][Pair[p]]) <=
              min(nmax[0][p], nmax[1][Pair[p]])) {
        count++;
      }
    }
    result = max(result, count);
    return;
  }
  for (int i = 0; i < P; i++) {
    if (!Paired[i]) {
      Paired[i] = true;
      Pair[Pair_p] = i;
      Pair_p++;

      solve2();

      Paired[i] = false;
      Pair_p--;
    }
  }
}

void solve() {
  for (int n = 0; n < N; n++) {
    for (int p = 0; p < P; p++) {
      find(n, p, &nmax[n][p], &nmin[n][p]);
    }
  }
  if (N == 1) {
    solve1();
  } else {
    for (int i = 0; i < P; i++) {
      Paired[i] = false;
      Pair[i] = 0;
    }
    Pair_p = 0;
    result = 0;
    solve2();
  }
}

int main(int argc, const char *argv[]) {
  ifstream fin(""B-small-attempt0.in.txt"");
  ofstream fout(""B-small-attempt0.out.txt"");

  int T;
  fin >> T;
  for (int Case = 1; Case <= T; Case++) {
    fin >> N >> P;
    for (int i = 0; i < N; i++) {
      fin >> R[i];
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < P; j++) {
        fin >> Q[i][j];
      }
    }

    solve();

    fout << ""Case #"" << Case << "": "" << result << endl;
  }

  fin.close();
  fout.close();

  return 0;
}
",39,46,911
"//
//  main.cpp
//  ProblemA
//
//  Created by Tung Nguyen on 4/8/17.
//
//

int main(int argc, const char *argv[]) {
  ifstream fin(""A-small-attempt0.in.txt"");
  int T, K;
  fin >> T;

  ofstream fout(""A-small-attempt0.out.txt"");

  for (int i = 0; i < T; i++) {
    string S;
    fin >> S;
    fin >> K;

    int count = 0;
    for (int j = 0; j <= S.length() - K; j++) {
      if (S[j] == '-') {
        count++;
        for (int k = j; k < j + K; k++) {
          if (S[k] == '-') {
            S[k] = '+';
          } else {
            S[k] = '-';
          }
        }
      }
    }

    bool possible = true;
    for (int j = 0; j < S.length(); j++) {
      if (S[j] == '-') {
        possible = false;
        break;
      }
    }
    fout << ""Case #"" << i + 1 << "": "";
    if (possible) {
      fout << count << endl;
    } else {
      fout << ""IMPOSSIBLE"" << endl;
    }
  }
  fout.close();
  fin.close();
  return 0;
}
",39,47,389
"//
//  main.cpp
//  ProblemA
//
//  Created by Tung Nguyen on 4/15/17.
//
//

char cake[25][25];
int R, C;

void fill(int r) {
  for (int c = 0; c < C; c++) {
    if (cake[r][c] != '?') {
      char fillch = cake[r][c];
      for (int c1 = 0; c1 < c; c1++) {
        cake[r][c1] = fillch;
      }
      for (int c2 = c + 1; c2 < C; c2++) {
        if (cake[r][c2] == '?') {
          cake[r][c2] = fillch;
        } else {
          fillch = cake[r][c2];
        }
      }
      break;
    }
  }
}

bool is_row_empty(int r) {
  for (int c = 0; c < C; c++) {
    if (cake[r][c] != '?') {
      return false;
    }
  }
  return true;
}

void solve() {
  for (int r = 0; r < R; r++) {
    if (!is_row_empty(r)) {
      fill(r);
      for (int r1 = r + 1; r1 < R; r1++) {
        if (!is_row_empty(r1)) {
          fill(r1);
        } else {
          for (int c = 0; c < C; c++) {
            cake[r1][c] = cake[r1 - 1][c];
          }
        }
      }
      for (int r2 = r - 1; r2 >= 0; r2--) {
        for (int c = 0; c < C; c++) {
          cake[r2][c] = cake[r2 + 1][c];
        }
      }
      break;
    }
  }
}

int main(int argc, const char *argv[]) {
  ifstream fin(""A-small-attempt0.in.txt"");
  ofstream fout(""A-small-attempt0.out.txt"");

  int T;
  fin >> T;
  for (int Case = 1; Case <= T; Case++) {
    fin >> R >> C;
    for (int i = 0; i < R; i++) {
      for (int j = 0; j < C; j++) {
        fin >> cake[i][j];
      }
    }

    solve();

    fout << ""Case #"" << Case << "": "" << endl;
    for (int i = 0; i < R; i++) {
      for (int j = 0; j < C; j++) {
        fout << cake[i][j];
      }
      fout << endl;
    }
  }

  fin.close();
  fout.close();

  return 0;
}
",39,48,770
"typedef long long LL;
typedef long double LD;

int cond = 1;

LL getSize(int p, LL d, LL n) {
  if (p == 0) {
    return n;
  }
  LL x = getSize(p - 1, d >> 1, n);
  return (x - (d % 2)) / 2;
}

void solve() {
  LL n, k;
  cin >> n >> k;
  int p = 0;
  LL x = 1;
  if (k == 1) {
    cout << n / 2 << "" "" << (n - 1) / 2;
    return;
  }
  while (x * 2 <= k) {
    x *= 2;
    p++;
  }
  x--;
  LL diff = k - x;
  LL w = getSize(p, diff - 1, n);
  cout << w / 2 << "" "" << (w - 1) / 2;
}

void solve2() {
  LL n, k;
  cin >> n >> k;
  vector<int> dn(1000005, 0);
  dn[n] = 1;
  LL i = n + 1;
  while (k-- > 1) {
    while (dn[i] == 0) {
      --i;
    };
    dn[i]--;
    dn[i / 2]++;
    dn[(i - 1) / 2]++;
  }
  while (dn[i] == 0) {
    --i;
  }
  cout << i / 2 << "" "" << (i - 1) / 2;
}

int main() {
  int t;
  cin >> t;
  for (int x = 1; x <= t; ++x) {
    cout << ""Case #"" << x << "": "";
    solve2();
    cout << endl; // result
  }
  return 0;
}
",41,49,503
"typedef long long LL;
typedef long double LD;

int cond = 1;

int solve() {
  string s;
  cin >> s;
  int k;
  cin >> k;
  int l = -1, i = 0, n = s.length();
  char c = '-';
  int res = 0;
  for (int i = 0; i < n; ++i) {
    if (s[i] == '-') {
      res++;
      for (int j = i; j < i + k; ++j) {
        if (j >= n) {
          return -1;
        }
        s[j] = s[j] == '+' ? '-' : '+';
      }
    }
  }
  return res;
}

int main() {
  int t;
  cin >> t;
  for (int x = 1; x <= t; ++x) {
    int res = solve();
    cout << ""Case #"" << x << "": "";
    if (res >= 0) {
      cout << res;
    } else {
      cout << ""IMPOSSIBLE"";
    }
    cout << endl;
  }
  return 0;
}
",41,50,301
"typedef long long LL;
typedef long double LD;

int cond = 1;

double solve() {
  int n, q;
  vector<long long> e, s, d;
  cin >> n >> q;
  for (int i = 0; i < n; ++i) {
    int a, b;
    cin >> a >> b;
    e.push_back(a);
    s.push_back(b);
  }
  d.push_back(0);
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      int di;
      cin >> di;
      if (di != -1) {
        d.push_back(d.back() + di);
      }
    }
  }

  int a, b;
  cin >> a >> b;
  vector<double> dd;
  dd.push_back(0.);
  for (int i = 1; i < n; ++i) {
    double dm = 1000LL * 1000 * 1000 * 1000 + 5;
    for (int j = 0; j < i; ++j) {
      if (d[i] - d[j] <= e[j]) {
        double tmp = dd[j] + ((double)(d[i] - d[j])) / s[j];
        dm = dm > tmp ? tmp : dm;
      }
    }
    dd.push_back(dm);
  }
  return dd[n - 1];
}

int main() {
  int t;
  cin >> t;
  for (int x = 1; x <= t; ++x) {
    cout.precision(9);
    cout << ""Case #"" << x << "": "" << fixed << solve() << endl; // result
  }
  return 0;
}
",41,51,479
"typedef long long LL;
typedef long double LD;

int cond = 1;

void test(string s) {
  int n = s.length();
  for (int i = 0; i < n; ++i) {
    if (s[i] == s[i + 1 % n]) {
      cout << ""WRONG!"";
      return;
    }
  }
}

string solve() {
  int n;
  cin >> n;
  int r, o, y, g, b, v;
  cin >> r >> o >> y >> g >> b >> v;

  vector<char> m = {'R', 'Y', 'B'};
  vector<int> x = {r, y, b};
  for (int i = 0; i < 3; ++i) {
    char tmp = m[i];
    int t = x[i];
    int j = i + 1;
    while (j < 3 && x[j] < x[i]) {
      x[j - 1] = x[j];
      m[j - 1] = m[j];
      j++;
    }
    m[j - 1] = tmp;
    x[j - 1] = t;
  }

  ostringstream is("""");
  int a1 = x[0] + x[1] - x[2];
  int a2 = x[2] - x[1];
  int a3 = x[2] - x[0];
  if (a1 < 0 || a2 < 0 || a3 < 0) {
    return ""IMPOSSIBLE"";
  }

  while (a1-- > 0) {
    is << m[0] << m[2] << m[1];
  }
  while (a2-- > 0) {
    is << m[2] << m[0];
  }
  while (a3-- > 0) {
    is << m[2] << m[1];
  }

  test(is.str());
  return is.str();
}

int main() {
  int t;
  cin >> t;
  for (int x = 1; x <= t; ++x) {
    cout << ""Case #"" << x << "": "" << solve() << endl; // result
  }
  return 0;
}
",41,52,580
"typedef long long LL;
typedef long double LD;

int cond = 1;

LL solve() {
  LL n, tmp;
  cin >> tmp;
  vector<int> d;
  n = tmp;
  if (n < 10) {
    return n;
  }
  while (n > 0) {
    d.push_back(n % 10);
    n /= 10;
  }
  int l = d.size();
  int prev = 0;
  int i = l - 1;
  for (; i >= 0; --i) {
    if (d[i] >= prev) {
      prev = d[i];
    } else {
      break;
    }
  }
  if (i < 0) {
    return tmp;
  }
  for (int j = i + 1; j < l; ++j) {
    if (d[j] > 0) {
      d[j]--;
    }
    if (j < l - 1 && d[j + 1] <= d[j]) {
      break;
    }
    if (j < l - 1) {
      i++;
    }
  }
  for (int j = 0; j <= i; ++j) {
    d[j] = 9;
  }
  long long r = 0;
  for (int i = l - 1; i >= 0; --i) {
    r *= 10;
    r += d[i];
  }
  return r;
}

int main() {
  int t;
  cin >> t;
  for (int x = 1; x <= t; ++x) {
    cout << ""Case #"" << x << "": "" << solve() << endl; // result
  }
  return 0;
}
",41,53,457
"typedef long long LL;
typedef long double LD;

int cond = 1;

double solve() {
  double d;
  int n;
  cin >> d >> n;
  double tmax = 0.;
  for (int i = 0; i < n; ++i) {
    double k, s;
    cin >> k >> s;
    if (k < d) {
      double t = (double)(d - k) / s;
      tmax = t > tmax ? t : tmax;
    }
  }
  return d / tmax;
}

int main() {
  int t;
  cin >> t;
  for (int x = 1; x <= t; ++x) {

    cout.precision(9);
    cout << ""Case #"" << x << "": "" << fixed << solve() << endl; // result
  }
  return 0;
}
",41,54,223
"typedef long long LL;
typedef long double LD;

int cond = 1;

int solve() {
  int n, p;
  cin >> n >> p;
  vector<int> r;
  for (int i = 0; i < n; ++i) {
    int a;
    cin >> a;
    r.push_back(a);
  }
  vector<int> q[10];
  for (int j = 0; j < n; ++j) {
    for (int i = 0; i < p; ++i) {
      int qi;
      cin >> qi;
      q[j].push_back(qi);
    }
  }
  int res = 0;
  if (n == 1) {
    for (int i = 0; i < p; ++i) {
      int a = ceil(q[0][i] / 1.1 / r[0]);
      int b = floor(q[0][i] / 0.9 / r[0]);
      if (a <= b) {
        res++;
      }
    }
    return res;
  }
  sort(q[1].begin(), q[1].end());
  do {
    int tmp = 0;
    for (int i = 0; i < p; ++i) {
      int a = ceil(q[0][i] / 1.1 / r[0]);
      int b = floor(q[0][i] / 0.9 / r[0]);
      int c = ceil(q[1][i] / 1.1 / r[1]);
      int d = floor(q[1][i] / 0.9 / r[1]);
      if (a <= b && c <= d && ((a <= c && b >= c) || (a >= c && a <= d))) {
        tmp++;
      }
      res = tmp > res ? tmp : res;
    }
  } while (next_permutation(q[1].begin(), q[1].end()));
  return res;
}

int main() {
  int t;
  cin >> t;
  for (int x = 1; x <= t; ++x) {
    cout << ""Case #"" << x << "": "" << solve() << endl; // result
  }
  return 0;
}
",41,55,573
"typedef long long int lli;
typedef pair<lli, lli> pii;

int tc;

int main() {
  cin >> tc;
  for (int t = 1; t <= tc; t++) {
    int n, k;
    cin >> n >> k;
    priority_queue<int> pq;
    pq.push(n);
    int y, z;
    for (int i = 0; i < k; i++) {
      int t = pq.top() - 1;
      pq.pop();
      y = t / 2 + (t % 2);
      z = t / 2;
      pq.push(y);
      pq.push(z);
    }
    printf(""Case #%d: %d %d\n"", t, y, z);
  }
}
",56,56,212
"typedef long long int lli;
typedef pair<lli, lli> pii;
typedef double dbl;

int tc;

lli d, n, a, b;
vector<pii> ks;

int main() {
  cin >> tc;
  for (int t = 1; t <= tc; t++) {
    ks.clear();
    cin >> d >> n;
    dbl lb, ub, ex;
    lb = 0;
    ub = 0;
    for (int i = 0; i < n; i++) {
      cin >> a >> b;
      ks.push_back(pii(a, b));
      if (ub == 0) {
        if (a != d) {
          ub = d * b / (d - a + 0.0);
        }
      } else if (a != d) {
        ub = min(ub, d * b / (d - a + 0.0));
      }
    }
    while (abs(ub - lb) > 0.0000005f) {
      ex = (ub + lb) / 2;
      bool f = true;
      // cout << ""Testing "" << ex << endl;
      for (int i = 0; i < n; i++) {
        // cout << ""Horse "" << i << "" speed "" << ks[i].second << endl;
        if (ks[i].second >= ex)
          continue;
        // cout << ""Comparative speed: "" << ex - ks[i].second << endl;
        // cout << ""Intersects at "" << ks[i].first / (ex - ks[i].second) * ex <<
        // endl;
        if (ks[i].first / (ex - ks[i].second) * ex < d) {
          f = false;
        }
      }
      if (f) {
        lb = ex;
      } else {
        ub = ex;
      }
    }
    cout << fixed << setprecision(7) << ""Case #"" << t << "": "" << ub << endl;
  }
}
",56,57,525
"typedef long long int lli;

int tc;
int n, p;
lli r[1009];

lli eleven(lli x) { return x * 11 / 10; }

lli ninety(lli x) {
  lli y = x * 9 / 10;
  if (x % 10 != 0) {
    y += 1;
  }
  return y;
}

bool inrange(int ingredient, lli number, lli servings) {
  lli x = r[ingredient] * servings;
  return (ninety(x) <= number) && (number <= eleven(x));
}

int main() {
  cin >> tc;
  for (int t = 1; t <= tc; t++) {
    lli tmp;
    priority_queue<lli, vector<lli>, greater<lli>> q[1009];
    memset(r, -1, sizeof(r));
    cin >> n >> p;
    for (int i = 0; i < n; i++) {
      cin >> r[i];
    }
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < p; j++) {
        cin >> tmp;
        q[i].push(tmp);
      }
    }
    lli ans = 0;
    lli cansendserving = 1;
    lli curservingsize = 1;
    lli nextservingsize = 1;
    while (1) {
      // if can send serving
      bool okay = 1;
      cansendserving = 1;
      for (int i = 0; i < n; i++) {
        if (q[i].empty()) {
          okay = 0;
          break;
        }
        if (!inrange(i, q[i].top(), curservingsize)) {
          cansendserving = 0;
        }
      }

      if (!okay) {
        break;
      }

      if (cansendserving) {
        // cout << ""Send\n"";
        ans++;
        for (int i = 0; i < n; i++) {
          q[i].pop();
        }
      } else {
        // find next serving size to make
        nextservingsize = 9999999999;
        for (int i = 0; i < n; i++) {
          if (q[i].empty())
            break;
          nextservingsize = min(nextservingsize, q[i].top() / eleven(r[i]));
        }
        if (nextservingsize <= curservingsize) {
          nextservingsize = curservingsize + 1;
        }
        curservingsize = nextservingsize;
        // flush
        for (int i = 0; i < n; i++) {
          while (!q[i].empty() && q[i].top() < ninety(r[i] * curservingsize)) {
            q[i].pop();
          }
          if (q[i].empty()) {
            okay = 0;
            break;
          }
        }
        if (!okay) {
          break;
        }
      }
    }
    cout << ""Case #"" << t << "": "" << ans << endl;
  }
}
",56,58,842
"struct AugPath {
  int A, B;              // size of left, right groups
  vector<vector<int>> G; // size A
  vector<bool> visited;  // size A
  vector<int> P;         // size B

  AugPath(int _A, int _B) : A(_A), B(_B), G(_A), P(_B, -1) {}

  void AddEdge(int a, int b) { // a from left, b from right
    G[a].push_back(b);
  }
  bool Aug(int x) {
    if (visited[x])
      return 0;
    visited[x] = 1;
    /* Greedy heuristic */
    for (auto it : G[x]) {
      if (P[it] == -1) {
        P[it] = x;
        return 1;
      }
    }
    for (auto it : G[x]) {
      if (Aug(P[it])) {
        P[it] = x;
        return 1;
      }
    }
    return 0;
  }
  int MCBM() {
    int matchings = 0;
    for (int i = 0; i < A; ++i) {
      visited.resize(A, 0);
      matchings += Aug(i);
      visited.clear();
    }
    return matchings;
  }
  vector<pair<int, int>> GetMatchings() {
    vector<pair<int, int>> matchings;
    for (int i = 0; i < B; ++i) {
      if (P[i] != -1)
        matchings.emplace_back(P[i], i);
    }
    return matchings;
  }
};

int tc;

int d[7][7] = {
    //     R O Y G B V
    {0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 1, 1, 0}, // R
    {0, 0, 0, 0, 0, 1, 0},                        // O
    {0, 1, 0, 0, 0, 1, 1},                        // Y
    {0, 1, 0, 0, 0, 0, 0},                        // G
    {0, 1, 1, 1, 0, 0, 0},                        // B
    {0, 0, 0, 1, 0, 0, 0},                        // V
};

char color_dict[7] = {
    '-', 'R', 'O', 'Y', 'G', 'B', 'V',
};

int next_node[1009], visited[1009];
int c[7];
int color[1009], adj[1009][1009];
vector<string> stables;

string dfs(int node, string cur_string) {
  if (visited[node] == 1) {
    return cur_string;
  }
  visited[node] = 1;
  cur_string = cur_string + color_dict[color[node]];
  return dfs(next_node[node], cur_string);
}

string merge(string a, string b) {
  bool found = false;
  int x = 0, y = 0;
  for (int i = 0; i < a.size(); i++) {
    for (int j = 0; j < b.size(); j++) {
      if (a[i] == b[j]) {
        x = i;
        y = j;
        found = true;
        break;
      }
    }
    if (found) {
      break;
    }
  }
  if (!found) {
    return """";
  }
  // a[x] == b[y];
  string c = """";
  for (int i = 0; i < b.size(); i++) {
    c += b[(y + i) % b.size()];
  }
  string rt = """";
  for (int i = 0; i < x; i++) {
    rt += a[i];
  }
  rt += c;
  for (int i = x; i < a.size(); i++) {
    rt += a[i];
  }
  return rt;
}
int main() {
  cin >> tc;
  for (int t = 1; t <= tc; t++) {
    int n;
    cin >> n;
    int counter = 0;
    c[0] = 0;
    for (int i = 1; i < 7; i++) {
      cin >> c[i];
      c[i] += c[i - 1];
      for (int j = c[i - 1]; j < c[i]; j++) {
        color[j] = i;
      }
    }
    AugPath mcbm(n, n);
    memset(adj, 0, sizeof(adj));
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        adj[i][j] = d[color[i]][color[j]];
        if (adj[i][j] == 1) {
          mcbm.AddEdge(i, j);
        }
      }
    }
    auto matches = mcbm.MCBM();
    // cout << matches << "" matches out of "" << n << endl;
    if (matches != n) {
      cout << ""Case #"" << t << "": ""
           << ""IMPOSSIBLE"" << endl;
      continue;
    }

    auto match = mcbm.GetMatchings();

    memset(next_node, -1, sizeof(next_node));
    memset(visited, -1, sizeof(visited));

    for (auto i : match) {
      next_node[i.first] = i.second;
      // cout << i.first << "" "" << i.second << endl;
    }
    stables.clear();
    for (int i = 0; i < n; i++) {
      if (next_node[i] != -1 && visited[i] == -1) {
        stables.push_back(dfs(i, """"));
      }
    }

    for (int i = 0; i < stables.size(); i++) {
      for (int j = 1; j < stables.size(); j++) {
        string test = merge(stables[0], stables[j]);
        if (test != """") {
          stables[0] = test;
          stables[j] = """";
        }
      }
    }
    cout << ""Case #"" << t << "": "" << stables[0] << endl;
  }
}
",56,59,1709
"int tc;

int main() {
  cin >> tc;
  for (int t = 1; t <= tc; t++) {
    string s;
    int k, fl = 0;
    cin >> s >> k;
    for (int i = 0; i < s.size() - k + 1; i++) {
      if (s[i] == '-') {
        // cout << ""Flip at "" << i << endl;
        fl++;
        for (int j = i; j < i + k; j++) {
          if (s[j] == '-')
            s[j] = '+';
          else
            s[j] = '-';
        }
      }
    }
    int f = 1;
    for (int i = s.size() - k + 1; i < s.size(); i++) {
      if (s[i] == '-')
        f = 0;
    }
    if (f == 1) {
      printf(""Case #%d: %d\n"", t, fl);
    } else {
      printf(""Case #%d: IMPOSSIBLE\n"", t, fl);
    }
  }
}
",56,60,293
"int tc;

int main() {
  cin >> tc;
  for (int t = 1; t <= tc; t++) {
    int r, c;
    cin >> r >> c;
    char cake[30][30];
    for (int i = 0; i < r; i++) {
      for (int j = 0; j < c; j++) {
        cin >> cake[i][j];
      }
    }
    for (int i = 0; i < r; i++) {
      // sweep left to right
      for (int j = 1; j < c; j++) {
        if (cake[i][j - 1] != '?' && cake[i][j] == '?') {
          cake[i][j] = cake[i][j - 1];
        }
      }
      // sweep right to left
      for (int j = c - 2; j >= 0; j--) {
        if (cake[i][j + 1] != '?' && cake[i][j] == '?') {
          cake[i][j] = cake[i][j + 1];
        }
      }
    }
    for (int i = 1; i < r; i++) {
      // sweep up to down
      if (cake[i - 1][0] != '?' && cake[i][0] == '?') {
        for (int j = 0; j < c; j++) {
          cake[i][j] = cake[i - 1][j];
        }
      }
    }
    for (int i = r - 1; i >= 0; i--) {
      // sweep down to up
      if (cake[i + 1][0] != '?' && cake[i][0] == '?') {
        for (int j = 0; j < c; j++) {
          cake[i][j] = cake[i + 1][j];
        }
      }
    }
    cout << ""Case #"" << t << "":\n"";
    for (int i = 0; i < r; i++) {
      for (int j = 0; j < c; j++) {
        cout << cake[i][j];
      }
      cout << endl;
    }
  }
}
",56,61,583
"typedef long long int lli;

int tc;

int main() {
  cin >> tc;
  for (int t = 1; t <= tc; t++) {
    int n, q;
    cin >> n >> q;
    int e[109], s[109];
    for (int i = 1; i <= n; i++) {
      cin >> e[i] >> s[i];
    }
    int adj[109][109];
    for (int i = 1; i <= n; i++) {
      for (int j = 1; j <= n; j++) {
        cin >> adj[i][j];
      }
    }
    int dist[109];
    // distance to next city for small testcases
    for (int i = 1; i < n; i++) {
      dist[i] = adj[i][i + 1];
    }
    cout << ""Case #"" << t << "": "";
    for (int nq = 0; nq < q; nq++) {
      int u, v;
      cin >> u >> v;
      double time_taken[109];
      for (int i = 1; i <= n; i++) {
        time_taken[i] = -1;
      }
      time_taken[1] = 0;
      for (int i = 1; i < n; i++) {
        // simulate going to the next possible city with the horse at city i
        // cout << ""Using horse from "" << i << endl;
        int dist_left = e[i];
        int speed = s[i];
        double cur_time = time_taken[i];
        for (int j = i + 1; j <= n; j++) {
          // move dist[j-1]
          dist_left -= dist[j - 1];
          if (dist_left < 0)
            break;
          cur_time += (dist[j - 1] + 0.0) / s[i];
          // cout << ""reach city "" << j << "" at "" << cur_time << endl;
          if (time_taken[j] < 0) {
            time_taken[j] = cur_time;
          } else {
            time_taken[j] = min(time_taken[j], cur_time);
          }
        }
      }
      cout << fixed << setprecision(7) << time_taken[v] << endl;
    }
  }
}
",56,62,618
"// vudduu - codejam 2017 round 1 B
// Problem C
typedef long long LL;

int N, Q;
vector<pair<double, double>> horses; // distance, speed
vector<vector<double>> G;
vector<vector<double>> Gtime;

double getBestTime(int u, int v) {
  Gtime.resize(N);
  for (int i = (0), _i = (N); i < _i; ++i) {
    Gtime[i].resize(N);
    for (int j = (0), _j = (N); j < _j; ++j)
      Gtime[i][j] = 200000000000000.0;
  }
  priority_queue<pair<pair<double, int>, pair<int, double>>>
      q; // time, horse, position, distance
  q.push(make_pair(make_pair(0, 0), make_pair(0, horses[0].first)));
  vector<bool> vis(N, false);
  while (q.size()) {
    double time = -q.top().first.first;
    int ho = q.top().first.second;
    int node = q.top().second.first;
    double rd = q.top().second.second;
    q.pop();
    if (rd < 0)
      continue;
    if (time >= Gtime[0][node])
      continue;
    if (!vis[node] && node != 0) {
      vis[node] = true;
      q.push(make_pair(make_pair(-time, node),
                       make_pair(node, horses[node].first)));
    }
    if (node == ho) {
      Gtime[0][node] = time;
    }
    for (int j = (0), _j = (N); j < _j; ++j) {
      if (G[node][j] != -1) {
        double newTime = time + (G[node][j] / horses[ho].second);
        q.push(
            make_pair(make_pair(-newTime, ho), make_pair(j, rd - G[node][j])));
      }
    }
  }
  return Gtime[0][N - 1];
}

void solve() {
  int u, v;
  cin >> N >> Q;
  horses.resize(N);
  for (int i = (0), _i = (N); i < _i; ++i)
    cin >> horses[i].first >> horses[i].second;
  G.resize(N);
  for (int i = (0), _i = (N); i < _i; ++i) {
    G[i].resize(N);
    for (int j = (0), _j = (N); j < _j; ++j) {
      cin >> G[i][j];
    }
  }
  for (int i = (0), _i = (Q); i < _i; ++i) {
    cin >> u >> v;
    if (i)
      printf("" "");
    printf(""%.9lf"", getBestTime(u - 1, v - 1));
  }
  printf(""\n"");
}

int main() {
  int T;
  scanf(""%d"", &T);
  for (int cas = 1; cas <= T; cas++) {
    printf(""Case #%d: "", cas);
    solve();
  }
}
",59,63,859
"// vudduu - codejam 2017 qualification round
// Problem C
typedef long long LL;

LL N, K;
map<LL, int> mapa;

void addNum(LL x, int y) {
  map<LL, int>::iterator it = mapa.find(x);
  if (it == mapa.end()) {
    mapa[x] = y;
  } else {
    mapa[x] = it->second + y;
  }
}

void solve() {
  cin >> N >> K;
  map<LL, int>::iterator it;
  mapa.clear();
  mapa[N] = 1;
  while (true) {
    it = mapa.end();
    it--;
    if (K <= it->second)
      break;
    LL div1 = it->first / 2LL;
    LL div2 = it->first - div1;
    addNum(div1, it->second);
    addNum(div2 - 1LL, it->second);
    K -= it->second;
    mapa.erase(it);
  }
  LL res1 = it->first / 2LL;
  LL res2 = it->first - res1 - 1LL;
  if (res2 < res1)
    swap(res1, res2);
  cout << res2 << "" "" << res1 << endl;
}

int main() {
  int T;
  scanf(""%d"", &T);
  for (int cas = 1; cas <= T; cas++) {
    printf(""Case #%d: "", cas);
    solve();
  }
}
",59,64,405
"// vudduu - codejam 2017 round 1 B
// Problem A
typedef long long LL;

double D, N;
vector<pair<int, int>> hs;

double getTime(double K, double V) { return (D - K) / V; }

void solve() {
  cin >> D >> N;
  hs.resize(N);
  for (int i = (0), _i = (N); i < _i; ++i)
    cin >> hs[i].first >> hs[i].second;
  sort(hs.rbegin(), hs.rend());
  double maxiK = hs[0].first;
  double maxiV = hs[0].second;
  double maxiT = getTime(hs[0].first, hs[0].second);
  for (int i = (0), _i = (N); i < _i; ++i) {
    double t = getTime(hs[i].first, hs[i].second);
    if (t > maxiT) {
      maxiT = t;
      maxiK = hs[i].first;
      maxiV = hs[i].second;
    } else {
      maxiK = hs[i].first;
      maxiV = (D - maxiK) / maxiT;
    }
  }
  maxiV = D / maxiT;
  printf(""%.8lf\n"", maxiV);
}

int main() {
  int T;
  scanf(""%d"", &T);
  for (int cas = 1; cas <= T; cas++) {
    printf(""Case #%d: "", cas);
    solve();
  }
}
",59,65,424
"// vudduu - codejam 2017 round 1 B
// Problem B
typedef long long LL;

int N;
int R, O, Y, G, B, V;

void solve() {
  cin >> N >> R >> O >> Y >> G >> B >> V;
  vector<pair<int, char>> v;
  v.push_back(make_pair(R, 'R'));
  v.push_back(make_pair(Y, 'Y'));
  v.push_back(make_pair(B, 'B'));
  sort(v.begin(), v.end());
  string solu(N, 'X');
  if (v[2].first <= v[0].first + v[1].first) {
    int it = 0;
    for (int i = (0), _i = (3); i < _i; ++i) {
      for (int j = (0), _j = (v[i].first); j < _j; ++j) {
        solu[it] = v[i].second;
        it += 2;
        if (it >= N)
          it = 1;
      }
    }
  } else {
    solu = ""IMPOSSIBLE"";
  }
  cout << solu << endl;
}

int main() {
  int T;
  scanf(""%d"", &T);
  for (int cas = 1; cas <= T; cas++) {
    printf(""Case #%d: "", cas);
    solve();
  }
}
",59,66,378
"// vudduu - codejam 2017 qualification round
// Problem B
typedef long long LL;

string num;

void solve() {
  cin >> num;
  int it = -1;
  for (int i = (0), _i = (num.size() - 1); i < _i; ++i) {
    if (int(num[i]) > int(num[i + 1])) {
      it = i;
      while (it > 0 && num[it] == num[it - 1])
        it--;
      break;
    }
  }
  if (it != -1) {
    num[it]--;
    for (int i = (it + 1), _i = (num.size()); i < _i; ++i)
      num[i] = '9';
    if (num[it] == '0')
      num.erase(0, 1);
  }
  cout << num << endl;
}

int main() {
  int T;
  scanf(""%d"", &T);
  for (int cas = 1; cas <= T; cas++) {
    printf(""Case #%d: "", cas);
    solve();
  }
}
",59,67,302
"// vudduu - codejam 2017 qualification round
// Problem A
typedef long long LL;

string str;
int k;

void solve() {
  cin >> str >> k;
  int n = str.size();
  int res = 0;
  for (int i = 0; i <= n - k; i++) {
    if (str[i] != '+') {
      for (int j = (0), _j = (k); j < _j; ++j)
        str[i + j] = (str[i + j] == '+') ? '-' : '+';
      res++;
    }
  }
  bool flag = true;
  for (int i = (0), _i = (n); i < _i; ++i) {
    if (str[i] != '+')
      flag = false;
  }
  if (flag)
    printf(""%d\n"", res);
  else
    printf(""IMPOSSIBLE\n"");
}

int main() {
  int T;
  scanf(""%d"", &T);
  for (int cas = 1; cas <= T; cas++) {
    printf(""Case #%d: "", cas);
    solve();
  }
}
",59,68,309
"// vudduu - codejam 2017 round 1 A
// Problem B
typedef long long LL;

vector<vector<pair<int, int>>> vInc;

void getMinMax(int inc, const vector<int> &w, int vi) {
  LL mini = ceil(double(inc) * 0.9);
  LL maxi = double(inc) * 1.1;
  vInc[vi].resize(w.size());
  for (int i = (0), _i = (w.size()); i < _i; ++i)
    vInc[vi][i] = make_pair(-1, -1);
  for (int i = (1), _i = (1000001); i < _i; ++i) {
    LL A = LL(mini) * LL(i);
    LL B = LL(maxi) * LL(i);
    if (A > 1200000LL)
      break;
    for (int j = (0), _j = (w.size()); j < _j; ++j) {
      if (A <= w[j] && LL(w[j]) <= B) {
        if (vInc[vi][j].first == -1)
          vInc[vi][j].first = i;
        vInc[vi][j].second = i;
      }
    }
  }
}

void solve() {
  int N, P;
  cin >> N >> P;
  vector<int> ing(N);
  vInc.resize(N);
  vector<vector<int>> v(N, vector<int>(P));
  for (int i = (0), _i = (N); i < _i; ++i)
    cin >> ing[i];
  for (int i = (0), _i = (N); i < _i; ++i) {
    for (int j = (0), _j = (P); j < _j; ++j)
      cin >> v[i][j];
    sort(v[i].begin(), v[i].end());
    getMinMax(ing[i], v[i], i);
  }
  int res = 0;
  sort(vInc[0].begin(), vInc[0].end());
  do {
    int c = 0;
    for (int i = (0), _i = (P); i < _i; ++i) {
      if (vInc[0][i].first == -1)
        continue;
      if (vInc[1][i].first == -1)
        continue;
      if (vInc[0][i].first <= vInc[1][i].first &&
          vInc[1][i].first <= vInc[0][i].second) {
        c++;
      } else if (vInc[1][i].first <= vInc[0][i].first &&
                 vInc[0][i].first <= vInc[1][i].second) {
        c++;
      }
    }
    res = max(res, c);
  } while (next_permutation(vInc[0].begin(), vInc[0].end()));
  cout << res << endl;
}

int main() {
  int T;
  scanf(""%d"", &T);
  for (int cas = 1; cas <= T; cas++) {
    printf(""Case #%d: "", cas);
    solve();
  }
}
",59,69,857
"struct Int {
  int l, r;
  bool isEmpty() { return l > r; }
};

Int getInt(int count, int need) {
  int minx = (count * 100 + (need * 90 - 1)) / (need * 90) - 1;
  int maxx = (count * 100) / (need * 110) + 1;

  int mn = -1, mx = -1;
  for (int i = 1; i <= 2000000; ++i) {
    if (need * (long long)i * 90 <= count * 100 &&
        count * 100 <= need * (long long)i * 110) {
      if (mn == -1)
        mn = i;
      mx = i;
    }
  }
  if (mn == -1)
    return Int{0, -1};
  return Int{mn, mx};
}

Int cross(const Int &l, const Int &r) {
  return Int{max(l.l, r.l), min(l.r, r.r)};
}

int main() {
  ios_base::sync_with_stdio(false);
  ifstream ifs(""b.in"");
  ofstream ofs(""b.out"");

  int t;
  ifs >> t;
  for (int test = 0; test < t; ++test) {
    int res = 0;
    int n, p;
    ifs >> n >> p;
    vector<int> c(n);
    for (int i = 0; i < n; ++i)
      ifs >> c[i];

    vector<vector<int>> v(n);
    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < p; ++j) {
        int k;
        ifs >> k;
        v[i].push_back(k);
      }
      sort(v[i].begin(), v[i].end());
    }

    vector<vector<Int>> vi(n);
    for (int i = 0; i < n; ++i) {
      for (int j = 0; j < p; ++j) {
        vi[i].push_back(getInt(v[i][j], c[i]));
      }
    }

    vector<vector<int>> was(n, vector<int>(p, 0));
    for (int i = 0; i < p; ++i) {
      Int cur = vi[0][i];
      vector<int> way;
      way.push_back(i);
      bool found = !cur.isEmpty();
      for (int j = 1; j < n; ++j) {
        found = false;
        for (int k = 0; k < p; ++k) {
          if (was[j][k] == 0 && !cross(cur, vi[j][k]).isEmpty()) {
            way.push_back(k);
            cur = cross(cur, vi[j][k]);
            found = true;
            break;
          }
        }
        if (!found) {
          break;
        }
      }
      if (found) {
        for (int i = 0; i < n; ++i) {
          was[i][way[i]] = 1;
        }
        ++res;
      }
    }
    ofs << ""Case #"" << test + 1 << "": "" << res << endl;
  }
  return 0;
}
",85,70,890
"int main() {
  ios_base::sync_with_stdio(false);
  ifstream ifs(""a.in"");
  ofstream ofs(""a.out"");

  int t;
  ifs >> t;
  for (int test = 0; test < t; ++test) {
    string s;
    int k;
    ifs >> s >> k;

    int res = 0;
    for (int i = 0; i < s.length() - k + 1; ++i) {
      if (s[i] == '-') {
        for (int j = 0; j < k; ++j) {
          if (s[i + j] == '-')
            s[i + j] = '+';
          else
            s[i + j] = '-';
        }
        ++res;
      }
    }

    bool ok = s.find('-') == -1;
    ofs << ""Case #"" << test + 1 << "": "" << (ok ? to_string(res) : ""IMPOSSIBLE"")
        << endl;
  }
  return 0;
}
",85,71,277
"int main() {
  ios_base::sync_with_stdio(false);
  ifstream ifs(""a.in"");
  ofstream ofs(""a.out"");

  int t;
  ifs >> t;
  for (int test = 0; test < t; ++test) {
    double res = 0;
    int d, n;
    ifs >> d >> n;
    double maxt = 0;
    for (int i = 0; i < n; ++i) {
      int k, s;
      ifs >> k >> s;

      maxt = max(maxt, (d - k) / (double)s);
    }
    ofs << ""Case #"" << test + 1 << "": "" << setprecision(10) << fixed << d / maxt
        << endl;
  }
  return 0;
}
",85,72,212
"int main() {
  ios_base::sync_with_stdio(false);
  ifstream ifs(""b.in"");
  ofstream ofs(""b.out"");

  int t;
  ifs >> t;
  for (int test = 0; test < t; ++test) {
    string s;
    ifs >> s;
    int pos = -1;
    for (int i = 1; i < s.size(); ++i) {
      if (s[i] < s[i - 1]) {
        pos = i - 1;
        while (pos > 0 && s[pos] == s[pos - 1])
          --pos;
        break;
      }
    }
    if (pos != -1) {
      s[pos]--;
      for (int i = pos + 1; i < s.size(); ++i) {
        s[i] = '9';
      }
    }
    stringstream str(s);
    long long l;
    str >> l;

    ofs << ""Case #"" << test + 1 << "": "" << l << endl;
  }
  return 0;
}
",85,73,284
"int main() {
  ios_base::sync_with_stdio(false);
  ifstream ifs(""a.in"");
  ofstream ofs(""a.out"");

  int t;
  ifs >> t;
  for (int test = 0; test < t; ++test) {
    int res = 0;
    int n, m;
    ifs >> n >> m;
    vector<string> v(n);

    for (int i = 0; i < n; ++i)
      ifs >> v[i];

    bool found = false;
    int sx;
    for (int i = 0; i < n && !found; ++i)
      for (int j = 0; j < m; ++j)
        if (v[i][j] != '?') {
          sx = i;
          found = true;
          break;
        }

    for (int i = sx; i < n; ++i) {
      char f = '?';
      for (int j = 0; j < m; ++j)
        if (v[i][j] != '?') {
          f = v[i][j];
          break;
        }
      if (f != '?') {
        for (int j = 0; j < m; ++j) {
          if (v[i][j] == '?' || v[i][j] == f) {
            v[i][j] = f;
          } else {
            f = v[i][j];
          }
        }
      } else {
        v[i] = v[i - 1];
      }
    }

    for (int i = 0; i < sx; ++i)
      v[i] = v[sx];
    ofs << ""Case #"" << test + 1 << "":"" << endl;
    for (auto s : v) {
      ofs << s << endl;
    }
  }
  return 0;
}
",85,74,488
"const int C[6] = {1, 3, 2, 6, 4, 5};
const string colors = ""ROYGBV"";

bool crossed(int c1, int c2) { return (C[c1] & C[c2]) != 0; }

bool check(const vector<int> &v) {
  for (int i = 0; i + 1 < v.size(); ++i)
    if (crossed(v[i], v[i + 1]))
      return false;
  if (crossed(v[0], v.back()))
    return false;
  return true;
}

string vtos(const vector<int> &v) {
  string res;
  for (int i : v) {
    res += colors[i];
  }
  return res;
}

int main() {
  ios_base::sync_with_stdio(false);
  ifstream ifs(""b.in"");
  ofstream ofs(""b.out"");

  int t;
  ifs >> t;
  for (int test = 0; test < t; ++test) {
    int n;
    ifs >> n;
    vector<int> v(6);
    for (int i = 0; i < 6; ++i) {
      ifs >> v[i];
    }
    vector<int> res(n);
    int prev = -1;
    for (int i = 0; i < n; ++i) {
      int bestj = -1;
      for (int j = 0; j < 6; ++j) {
        if ((bestj == -1 || v[j] > v[bestj]) && v[j] > 0 &&
            (prev == -1 || !crossed(prev, j)))
          bestj = j;
      }
      if (bestj == -1) {
        for (int j = 0; j < 6; ++j) {
          if ((bestj == -1 || v[j] > v[bestj]) && v[j] > 0)
            bestj = j;
        }
      }
      --v[bestj];
      res[i] = bestj;
      prev = bestj;
    }

    if (!check(res)) {
      sort(res.size() < 10 ? res.begin() : res.end() - 10, res.end());
      do {
        if (check(res))
          break;
      } while (next_permutation(res.size() < 10 ? res.begin() : res.end() - 10,
                                res.end()));
    }
    ofs << ""Case #"" << test + 1 << "": ""
        << (!check(res) ? ""IMPOSSIBLE"" : vtos(res)) << endl;
  }
  return 0;
}
",85,75,705
"long long a[105][105];

int main() {
  ios_base::sync_with_stdio(false);
  ifstream ifs(""b.in"");
  ofstream ofs(""b.out"");

  int t;
  ifs >> t;
  for (int test = 0; test < t; ++test) {
    int res = 0;
    int n, q;
    ifs >> n >> q;

    vector<int> d(n), s(n);
    for (int i = 0; i < n; ++i)
      ifs >> d[i] >> s[i];

    for (int i = 0; i < n; ++i)
      for (int j = 0; j < n; ++j) {
        ifs >> a[i][j];
        if (i == j)
          a[i][j] = 0;
      }

    for (int k = 0; k < n; ++k)
      for (int i = 0; i < n; ++i)
        for (int j = 0; j < n; ++j)
          if (a[i][k] != -1 && a[k][j] != -1 &&
              (a[i][j] == -1 || a[i][j] > a[i][k] + a[k][j])) {
            a[i][j] = a[i][k] + a[k][j];
          }

    ofs << ""Case #"" << test + 1 << "":"";
    for (int z = 0; z < q; ++z) {
      int start, fin;
      vector<double> dist(n, 1e+100);
      vector<int> was(n, 0);
      ifs >> start >> fin;
      --start;
      --fin;
      priority_queue<pair<double, int>, vector<pair<double, int>>,
                     greater<pair<double, int>>>
          q;
      q.push({0.0, start});
      dist[start] = 0;
      while (!q.empty()) {
        int cur = q.top().second;
        q.pop();
        if (cur == fin)
          break;
        if (was[cur] == 0) {
          was[cur] = 1;
          for (int next = 0; next < n; ++next) {
            if (was[next] == 0) {
              if (a[cur][next] != -1 && a[cur][next] <= d[cur]) {
                double time = a[cur][next] / (double)s[cur];
                if (dist[cur] + time < dist[next]) {
                  dist[next] = dist[cur] + time;
                  q.push({dist[next], next});
                }
              }
            }
          }
        }
      }
      ofs << ' ' << setprecision(10) << fixed << dist[fin];
    }
    ofs << endl;
  }
  return 0;
}
",85,76,755
"char ch[] = {'R', 'O', 'Y', 'G', 'B', 'V'};
int b[1111], a[10];
int n;

bool check(int x, int y) {
  if (x > y)
    swap(x, y);
  return (x == y) || (x + 1 == y) || ((x & 1) && (x + 2 == y));
}

bool solve() {
  memset(b, -1, sizeof(b));
  for (int i = 0; i < n; ++i) {
    if (a[1]) {
      if (a[4]) {
        if (i > 0 && check(b[i - 1], 4)) {
          int x = (b[i - 1] + 3) % 6;
          if (a[x]) {
            b[i] = x;
            i++;
            a[x]--;
          } else
            return false;
        }
        b[i] = 4, b[i + 1] = 1;
        a[1]--, a[4]--;
        // printf(""%d %d\n"", a[1], a[4]);
        ++i;
      } else {
        return false;
      }
    } else if (a[3]) {
      if (a[0]) {
        if (i > 0 && check(b[i - 1], 0)) {
          int x = (b[i - 1] + 3) % 6;
          if (a[x]) {
            b[i] = x;
            i++;
            a[x]--;
          } else
            return false;
        }
        b[i] = 0, b[i + 1] = 3;
        ++i;
        a[3]--, a[0]--;
      } else
        return false;
    } else if (a[5]) {
      if (a[2]) {
        if (i > 0 && check(b[i - 1], 2)) {
          int x = (b[i - 1] + 3) % 6;
          if (a[x]) {
            b[i] = a[x];
            i++;
            a[x]--;
          } else
            return false;
        }
        b[i] = 2, b[i + 1] = 5;
        ++i;
        a[2]--, a[5]--;
      } else
        return false;
    } else {
      // printf(""i=%d\n"", i);
      if (i == 0) {
        if (a[0])
          b[0] = 0, a[0]--;
        else if (a[2])
          b[0] = 2, a[2]--;
        else if (a[4])
          b[0] = 4, a[4]--;
      } else {
        int x = -1, mx = 0;
        for (int j = 0; j < 6; j += 2) {
          if (a[j] && !check(b[i - 1], j)) {
            if (a[j] > mx) {
              mx = a[j], x = j;
            }
          }
        }
        if (x == -1)
          return false;
        a[x]--, b[i] = x;
      }
      // printf(""bi=%d\n"", b[i]);
      if (b[i] == -1)
        return false;
    }
  }
  return !check(b[0], b[n - 1]);
  return true;
}

void work() {

  scanf(""%d"", &n);
  for (int i = 0; i < 6; ++i) {
    scanf(""%d"", &a[i]);
  }
  if (!solve())
    printf(""IMPOSSIBLE\n"");
  else {
    for (int i = 0; i < n; ++i) {
      printf(""%c"", ch[b[i]]);
    }
    printf(""\n"");
  }
}

int main() {
  freopen(""B-small-attempt1.in"", ""r"", stdin);
  freopen(""B-small-attempt1.out"", ""w"", stdout);
  int TC;
  scanf(""%d"", &TC);
  for (int tc = 1; tc <= TC; ++tc) {
    printf(""Case #%d: "", tc);
    work();
  }
}
",90,77,1147
"long long ans;
int n;
char ch[20];
int a[20];

void solve(int x) {
  for (int i = 1; i < x; ++i) {
    if (a[i] < a[i - 1]) {
      a[i - 1] -= 1;
      for (int j = i; j < x; ++j) {
        a[j] = 9;
      }
      solve(i);
      return;
    }
  }
}

void work() {
  scanf(""%s"", ch);
  n = strlen(ch);
  for (int i = 0; i < n; ++i) {
    a[i] = ch[i] - '0';
  }
  solve(n);
  ans = 0;
  for (int i = 0; i < n; ++i) {
    ans *= 10;
    ans += a[i];
  }
  printf(""%lld\n"", ans);
}

int main() {
  int TC;
  freopen(""B-small-attempt0.in"", ""r"", stdin);
  freopen(""B-small-attempt0.out"", ""w"", stdout);
  scanf(""%d"", &TC);
  for (int tc = 1; tc <= TC; ++tc) {
    printf(""Case #%d: "", tc);
    work();
  }
}
",90,78,358
"int n, p, b[10], a[10][20], c[20];
int ans;

void calc() {
  int ret = 0;
  double xl = b[0] * 0.9, xr = b[0] * 1.1;
  double yl = b[1] * 0.9, yr = b[1] * 1.1;
  // printf(""%lf %lf\n"", xl, xr);
  for (int i = 0; i < p; ++i) {
    double x = a[0][i], y = a[1][c[i]];
    int xll = (int)(x / xl);
    int xrr = (int)round(x / xr);
    int yll = (int)(y / yl);
    int yrr = (int)ceil(y / yr);
    // printf(""%lf %lf\n"", y/yl, y/yr);
    // printf(""%d %d\n"", yll, yrr);
    if (xrr <= xll && yrr <= yll)
      ret++;
  }
  ans = max(ans, ret);
}

void work() {
  scanf(""%d%d"", &n, &p);
  for (int i = 0; i < n; ++i) {
    scanf(""%d"", &b[i]);
  }
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < p; ++j) {
      scanf(""%d"", &a[i][j]);
    }
  }
  for (int i = 0; i < p; ++i) {
    c[i] = i;
  }
  ans = 0;
  calc();
  while (next_permutation(c, c + p)) {
    calc();
  }
  printf(""%d\n"", ans);
}

int main() {
  freopen(""B-small-attempt0.in"", ""r"", stdin);
  freopen(""B-small-attempt0s.out"", ""w"", stdout);
  int TC;
  scanf(""%d"", &TC);
  for (int tc = 1; tc <= TC; ++tc) {
    printf(""Case #%d: "", tc);
    work();
  }
}
",90,79,585
"int TC, ans, n, k;
char a[1111];

void work() {
  ans = 0;
  scanf(""%s%d"", a, &k);
  n = strlen(a);
  for (int i = 0; i < n; ++i) {
    if (a[i] == '-') {
      if (i + k > n) {
        printf(""IMPOSSIBLE\n"");
        return;
      }
      for (int j = i; j < i + k; ++j) {
        a[j] = a[j] == '-' ? '+' : '-';
      }
      ans++;
    }
  }
  printf(""%d\n"", ans);
}

int main() {
  freopen(""A-small-attempt0.in"", ""r"", stdin);
  freopen(""A.out"", ""w"", stdout);
  scanf(""%d"", &TC);
  for (int tc = 1; tc <= TC; ++tc) {
    printf(""Case #%d: "", tc);
    work();
  }
}
",90,80,275
"double f[111], sum[111], e[111], s[111], edge[111][111];
int n, q;

void solve(int u, int t) {
  memset(f, 0, sizeof(f));
  memset(sum, 0, sizeof(sum));
  for (int i = 1; i <= n; ++i) {
    sum[i] = sum[i - 1] + edge[i - 1][i];
    // printf(""%lf\n"", sum[i]);
  }
  f[1] = 0;
  for (int i = 2; i <= n; ++i) {
    f[i] = 1e20;
    for (int j = 1; j < i; ++j) {
      if (e[j] >= (sum[i] - sum[j])) {
        // printf(""i = %d j=%d\n"", i, j);
        // printf(""%lf\n"", (sum[i]-sum[j-1])/s[j]);
        f[i] = min(f[i], f[j] + (sum[i] - sum[j]) / s[j]);
      }
    }
  }
  printf(""%lf"", f[n]);
}

void work() {
  scanf(""%d%d"", &n, &q);
  for (int i = 1; i <= n; ++i) {
    scanf(""%lf%lf"", &e[i], &s[i]);
  }
  for (int i = 1; i <= n; ++i) {
    for (int j = 1; j <= n; ++j) {
      scanf(""%lf"", &edge[i][j]);
    }
  }
  while (q--) {
    int u, t;
    scanf(""%d%d"", &u, &t);
    solve(u, t);
    if (q == 0)
      printf(""\n"");
    else
      printf("" "");
  }
}

int main() {
  freopen(""C-small-attempt0.in"", ""r"", stdin);
  freopen(""C-small-attempt0.out"", ""w"", stdout);
  int TC;
  scanf(""%d"", &TC);
  for (int tc = 1; tc <= TC; ++tc) {
    printf(""Case #%d: "", tc);
    work();
  }
}
",90,81,613
"void work() {
  double D;
  int n;
  scanf(""%lf%d"", &D, &n);
  double ans = 1e20;
  for (int i = 0; i < n; ++i) {
    double x, y;
    scanf(""%lf%lf"", &x, &y);
    ans = min(ans, D / ((D - x) / y));
  }
  printf(""%lf\n"", ans);
}

int main() {
  freopen(""A-small-attempt0.in"", ""r"", stdin);
  freopen(""A-small-attempt0.out"", ""w"", stdout);
  int TC;
  scanf(""%d"", &TC);
  for (int tc = 1; tc <= TC; ++tc) {
    printf(""Case #%d: "", tc);
    work();
  }
}
",90,82,224
"int n, m;
char a[30][30];

void work() {
  scanf(""%d%d"", &n, &m);
  memset(a, 0, sizeof(a));
  for (int i = 0; i < n; ++i) {
    scanf(""%s"", a[i]);
  }
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < m; ++j) {
      if (a[i][j] == '?') {
        if (j > 0 && a[i][j - 1] != '?') {
          a[i][j] = a[i][j - 1];
          continue;
        }
        int k = j;
        for (; j < m && a[i][j] == '?'; ++j)
          ;
        if (j < m) {
          for (; k < j; ++k)
            a[i][k] = a[i][j];
        }
      }
    }
  }

  for (int i = 0; i < n; ++i) {
    if (a[i][0] == '?') {
      if (i > 0) {
        memcpy(a[i], a[i - 1], sizeof(a[i]));
      } else {
        int k = i;
        for (; i < n && a[i][0] == '?'; ++i)
          ;
        if (i < n) {
          for (; k < i; ++k)
            memcpy(a[k], a[i], sizeof(a[i]));
        }
      }
    }
  }
  for (int i = 0; i < n; ++i) {
    printf(""%s\n"", a[i]);
  }
}

int main() {
  freopen(""A-small-attempt0.in"", ""r"", stdin);
  freopen(""A-small-attempt0.out"", ""w"", stdout);
  int TC;
  scanf(""%d"", &TC);
  for (int tc = 1; tc <= TC; ++tc) {
    printf(""Case #%d:\n"", tc);
    work();
  }
}
",90,83,561
"typedef long long i64d;

int f[1005][1005] = {0}, c[1005][1005] = {0};
int L[1005] = {0}, p[1005] = {0};
int n, s, t, minv;

int ford() {
  int i, j, m, x;

  for (i = 1; i <= n; i++) {
    L[i] = 0;
    p[i] = 0;
  }
  L[s] = 1;
  while (1) {
    i = 1;
    while ((i <= n) && !((L[i] != 0) && (p[i] == 0)))
      i++;
    if (i > n)
      return 1;
    for (j = 1; j <= n; j++)
      if ((L[j] == 0) && ((c[i][j] > 0) || (c[j][i] > 0))) {
        if (f[i][j] < c[i][j])
          L[j] = i;
        if (f[j][i] > 0)
          L[j] = -i;
      }
    p[i] = 1;
    if (L[t] != 0)
      break;
  }
  m = t;
  minv = 32767;
  while (m != s) {
    j = m;
    m = (int)abs(L[j]);
    if (L[j] < 0)
      x = f[j][m];
    if (L[j] > 0)
      x = c[m][j] - f[m][j];
    if (x < minv)
      minv = x;
  }
  return 0;
}

void change() {
  int m, j;

  m = t;
  while (m != s) {
    j = m;
    m = (int)abs(L[j]);
    if (L[j] < 0)
      f[j][m] = f[j][m] - minv;
    if (L[j] > 0)
      f[m][j] = f[m][j] + minv;
  }
}

int maxvflow() {
  int del, success;

  // s = 1; t = n;
  success = 0;
  while (1) {
    success = ford();
    if (success == 1) {
      int maxv = 0;
      for (int i = 1; i <= n; i++) {
        if (f[i][t] != 0)
          maxv += f[i][t];
      }
      return maxv;
    } else
      change();
  }
}

int a[55][55], b[55][55];
int nn, pp;

int main() {
  freopen(""B-small-attempt0.in"", ""r"", stdin);
  freopen(""B-small-attempt0.out"", ""w"", stdout);
  int cas;
  scanf(""%d"", &cas);
  for (int ca = 1; ca <= cas; ca++) {
    printf(""Case #%d: "", ca);

    scanf(""%d %d"", &nn, &pp);
    int se[55];

    for (int i = 0; i < nn; i++)
      scanf(""%d"", &se[i]);
    for (int i = 0; i < nn; i++) {
      for (int j = 0; j < pp; j++) {
        int x;
        scanf(""%d"", &x);
        a[i][j] = ceil(x / 1.1 / se[i]);
        b[i][j] = floor(x / 0.9 / se[i]);
      }
    }

    memset(f, 0, sizeof(f));
    memset(c, 0, sizeof(c));
    memset(L, 0, sizeof(L));
    memset(p, 0, sizeof(p));
    n = nn * pp + 2;
    s = n - 1;
    t = n;
    for (int i = 0; i < pp; i++)
      if (a[0][i] <= b[0][i]) {
        c[s][i + 1] = 1;
      }
    for (int i = 0; i < pp; i++)
      if (a[nn - 1][i] <= b[nn - 1][i]) {
        c[(nn - 1) * pp + i + 1][t] = 1;
      }
    for (int i = 1; i < nn; i++) {
      for (int k = 0; k < pp; k++)
        for (int y = 0; y < pp; y++) {
          int aa = max(a[i - 1][k], a[i][y]);
          int bb = min(b[i - 1][k], b[i][y]);
          if (aa <= bb)
            c[(i - 1) * pp + k + 1][i * pp + y + 1] = 1;
        }
    }
    int maxv = maxvflow();
    printf(""%d\n"", maxv);
  }
  return 0;
}
",91,84,1358
"typedef long long i64d;

int main() {
  freopen(""A-small-attempt0.in"", ""r"", stdin);
  freopen(""A-small-attempt0.out"", ""w"", stdout);
  int cas;
  scanf(""%d"", &cas);
  for (int ca = 1; ca <= cas; ca++) {
    printf(""Case #%d: "", ca);
    int d, n;
    scanf(""%d %d"", &d, &n);
    double t = 0;
    for (int i = 0; i < n; i++) {
      int k, s;
      scanf(""%d %d"", &k, &s);
      t = max(t, (double)(d - k) / s);
    }
    printf(""%lf\n"", d / t);
  }
  return 0;
}
",91,85,214
"typedef long long i64d;

int main() {
  freopen(""B-small-attempt1.in"", ""r"", stdin);
  freopen(""B-small-attempt1.out"", ""w"", stdout);
  // freopen(""input.txt"" , ""r"" , stdin);
  // freopen(""output.txt"" , ""w"" , stdout);
  int cas;
  scanf(""%d"", &cas);
  for (int ca = 1; ca <= cas; ca++) {
    printf(""Case #%d: "", ca);
    int n;
    int r, o, y, g, b, v;
    scanf(""%d %d %d %d %d %d %d"", &n, &r, &o, &y, &g, &b, &v);
    char s[1010] = {0};
    if (r > n / 2 || y > n / 2 || b > n / 2) {
      printf(""IMPOSSIBLE\n"");
    } else {
      int num[3] = {r, y, b};
      char c[4] = ""RYB"";

      if (y > r && y > b) {
        num[0] = y;
        num[1] = r;
        c[0] = 'Y';
        c[1] = 'R';
      }
      if (b > r && b > y) {
        num[0] = b;
        num[2] = r;
        c[0] = 'B';
        c[2] = 'R';
      }

      int i = 0;
      if (num[0] > 0) {
        while (i < n) {
          s[i] = c[0];
          i += 2;
          num[0]--;
          if (num[0] == 0)
            break;
        }
      }
      if (num[1] > 0) {
        while (i < n) {
          s[i] = c[1];
          i += 2;
          num[1]--;
          if (num[1] == 0)
            break;
        }
        if (num[1] > 0) {
          i = 1;
          while (i < n) {
            s[i] = c[1];
            i += 2;
            num[1]--;
            if (num[1] == 0)
              break;
          }
        }
      }
      if (num[2] > 0) {
        for (i = 0; i < n; i++)
          if (s[i] == 0)
            s[i] = c[2];
      }
      printf(""%s\n"", s);
    }
  }
  return 0;
}
",91,86,693
"typedef long long i64d;

int main() {
  freopen(""B-small-attempt0.in"", ""r"", stdin);
  freopen(""B-small-attempt0.out"", ""w"", stdout);
  int cas;
  scanf(""%d"", &cas);
  for (int ca = 1; ca <= cas; ca++) {
    printf(""Case #%d: "", ca);
    char s[30];
    scanf(""%s"", s);
    int L = strlen(s);
    for (int i = L - 2; i >= 0; i--)
      if (s[i + 1] < s[i]) {
        s[i]--;
        for (int j = i; j > 0; j--)
          if (s[i] < '0') {
            s[i - 1]--;
            s[i] += 10;
          }
        for (int j = i + 1; j < L; j++)
          s[j] = '9';
      }
    char res[30];
    int k = 0;
    while (s[k] == '0')
      k++;
    for (int i = k; i < L; i++)
      res[i - k] = s[i];
    res[L - k] = 0;
    printf(""%s\n"", res);
  }
  return 0;
}
",91,87,351
"typedef long long i64d;

double s[110][110];
int d[110][110];
int n;
void dij(int x, int he, int hs) {
  int mark[110] = {0};
  int dis[110] = {0};
  for (int i = 0; i < n; i++)
    if (d[x][i] == -1 || d[x][i] > he)
      s[x][i] = -1;
    else {
      s[x][i] = (double)d[x][i] / hs;
      dis[i] = d[x][i];
    }
  mark[x] = 1;
  for (int i = 0; i < n; i++) {
    int k = -1;
    double mint = 1e20;
    for (int j = 0; j < n; j++)
      if (mark[j] == 0 && (s[x][j] > 0 && s[x][j] < mint)) {
        k = j;
        mint = s[x][j];
      }
    if (k == -1)
      break;
    mark[k] = 1;
    for (int j = 0; j < n; j++)
      if (mark[j] == 0 && (d[k][j] != -1 && dis[k] + d[k][j] <= he) &&
          (s[x][j] < 0 || s[x][k] + (double)d[k][j] / hs < s[x][j])) {
        s[x][j] = s[x][k] + (double)d[k][j] / hs;
        dis[j] = dis[k] + d[k][j];
      }
  }
}

int main() {
  freopen(""C-small-attempt0.in"", ""r"", stdin);
  freopen(""C-small-attempt0.out"", ""w"", stdout);
  // freopen(""B-large.in"" , ""r"" , stdin);
  // freopen(""B-large.out"" , ""w"" , stdout);
  int cas;
  scanf(""%d"", &cas);
  for (int ca = 1; ca <= cas; ca++) {
    printf(""Case #%d:"", ca);
    int q;
    int he[110], hs[110];

    scanf(""%d %d"", &n, &q);
    for (int i = 0; i < n; i++)
      scanf(""%d %d"", &he[i], &hs[i]);

    for (int i = 0; i < n; i++)
      for (int j = 0; j < n; j++) {
        scanf(""%d"", &d[i][j]);
        s[i][j] = -1;
      }

    for (int i = 0; i < n; i++) {
      dij(i, he[i], hs[i]);
    }

    for (int k = 0; k < n; k++)
      for (int i = 0; i < n; i++)
        if (i != k)
          for (int j = 0; j < n; j++)
            if (j != i && j != k && s[i][k] > 0 && s[k][j] > 0 &&
                (s[i][j] < 0 || s[i][k] + s[k][j] < s[i][j])) {
              s[i][j] = s[i][k] + s[k][j];
            }
    for (int i = 0; i < q; i++) {
      int x, y;
      scanf(""%d %d"", &x, &y);
      printf("" %lf"", s[x - 1][y - 1]);
    }
    printf(""\n"");
  }
  return 0;
}
",91,88,988
"typedef long long i64d;

int main() {
  freopen(""A-small-attempt0.in"", ""r"", stdin);
  freopen(""A-small-attempt0.out"", ""w"", stdout);
  int cas;
  scanf(""%d"", &cas);
  for (int ca = 1; ca <= cas; ca++) {
    printf(""Case #%d: "", ca);
    char s[2000] = {0};
    int k;
    scanf(""%s %d"", s, &k);
    int L = strlen(s);
    int num = 0;
    for (int i = 0; i <= L - k; i++)
      if (s[i] == '-') {
        for (int j = 0; j < k; j++)
          if (s[i + j] == '-')
            s[i + j] = '+';
          else
            s[i + j] = '-';
        num++;
      }
    for (int i = L - k; i < L; i++)
      if (s[i] == '-')
        num = -1;
    if (num == -1)
      printf(""IMPOSSIBLE\n"");
    else
      printf(""%d\n"", num);
  }
  return 0;
}
",91,89,324
"typedef long long i64d;

void ins(i64d x, i64d num, vector<pair<i64d, i64d>> &b) {
  int id = -1;
  for (int i = 0; i < b.size(); i++)
    if (b[i].first == x)
      id = i;
  if (id == -1)
    b.push_back(make_pair(x, num));
  else
    b[id].second += num;
}
int main() {
  freopen(""C-small-1-attempt2.in"", ""r"", stdin);
  freopen(""C-small-1-attempt2.out"", ""w"", stdout);
  int cas;
  scanf(""%d"", &cas);
  for (int ca = 1; ca <= cas; ca++) {
    printf(""Case #%d: "", ca);
    i64d n, k;
    scanf(""%lld %lld"", &n, &k);
    i64d num = 1;
    vector<pair<i64d, i64d>> a;
    a.push_back(make_pair(n, 1));
    while (k > num) {
      k -= num;
      num <<= 1;

      vector<pair<i64d, i64d>> b;
      for (int i = 0; i < a.size(); i++) {
        i64d x = (a[i].first - 1) / 2;
        ins(x, a[i].second, b);
        ins(a[i].first - 1 - x, a[i].second, b);
      }
      a = b;
    }
    if (a.size() == 2 && a[0].first < a[1].first)
      swap(a[0], a[1]);
    i64d res = (k <= a[0].second) ? a[0].first : a[1].first;
    if (res % 2 == 1)
      printf(""%lld %lld\n"", (res - 1) / 2, (res - 1) / 2);
    else
      printf(""%lld %lld\n"", (res - 1) / 2 + 1, (res - 1) / 2);
  }
  return 0;
}
",91,90,586
"struct State {
  int Hd, Ad, Hk, Ak, Depth;
};

string toS(State s) {
  char buf[5000];

  sprintf(buf, ""%d,%d,%d,%d,%d,%d"", s.Hd, s.Ad, s.Hk, s.Ak, s.Depth);

  return string(buf);
}
int main() {
  int T;
  freopen(""A-small-attempt2.in"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  scanf(""%d"", &T);

  for (int testCase = 1; testCase <= T; testCase++) {
    long long D;
    int N;
    scanf(""%lld %d"", &D, &N);

    long long K[1001], S[1001];

    double res;

    for (int i = 0; i < N; i++) {
      scanf(""%lld %lld"", &K[i], &S[i]);
    }

    pair<long long, long long> maxTime = {0, 1};

    for (int i = 0; i < N; i++) {
      if (maxTime.first * S[i] < maxTime.second * (D - K[i])) {
        maxTime = make_pair(D - K[i], S[i]);
      }
    }

    res = (double)maxTime.second * D / (double)maxTime.first;

    printf(""Case #%d: %.6lf\n"", testCase, res);
  }

  return 0;
}
",94,91,415
"pair<int, int> getRange(int need, int available) {
  available *= 10;

  int maximum = available / (9 * need);
  int minimum = available / (11 * need);

  if (available % (11 * need) != 0) {
    minimum++;
  }

  if (maximum < minimum) {
    return make_pair(-1, -1);
  }

  return make_pair(minimum, maximum);
}

int main() {
  int T;
  freopen(""B-small-attempt0.in"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  scanf(""%d"", &T);

  for (int testCase = 1; testCase <= T; testCase++) {
    int N, P;
    scanf(""%d %d"", &N, &P);

    int pack[100][100];
    int needs[100];

    int idx[100] = {
        0,
    };

    pair<int, int> rng[100][100];

    for (int i = 0; i < N; i++) {
      scanf(""%d"", &needs[i]);
    }

    for (int i = 0; i < N; i++) {
      for (int j = 0; j < P; j++) {
        scanf(""%d"", &pack[i][j]);
      }
    }

    for (int i = 0; i < N; i++) {
      sort(pack[i], pack[i] + P);
    }

    for (int i = 0; i < N; i++) {
      for (int j = 0; j < P; j++) {
        rng[i][j] = getRange(needs[i], pack[i][j]);
      }
    }

    int res = 0;

    for (; idx[0] < P; idx[0]++) {
      int minimum = rng[0][idx[0]].first;
      bool ck = true;

      if (minimum == -1)
        continue;

      do {
        for (int j = 1; j < N; j++) {
          for (; idx[j] < P; idx[j]++) {
            if (minimum <= rng[j][idx[j]].second) {
              minimum = max(minimum, rng[j][idx[j]].first);
              break;
            }
          }

          if (idx[j] >= P) {
            goto EXIT;
          }
        }

        for (int j = 0; j < N; j++) {
          if (rng[j][idx[j]].first <= minimum &&
              minimum <= rng[j][idx[j]].second) {
            continue;
          } else {
            ck = false;
            break;
          }
        }
      } while (minimum <= rng[0][idx[0]].second && !ck);

      if (ck) {
        res++;
        for (int j = 1; j < N; j++) {
          idx[j]++;

          if (idx[j] >= P) {
            break;
          }
        }
      }
    }
  EXIT:

    printf(""Case #%d: %d\n"", testCase, res);
  }

  return 0;
}
",94,92,859
"int main() {
  int T;
  freopen(""B-small-attempt0.in"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  scanf(""%d"", &T);

  for (int testCase = 1; testCase <= T; testCase++) {
    long long N;
    vector<int> v;
    cin >> N;

    int prev = N % 10;
    N /= 10;
    v.push_back(prev);
    while (N != 0) {
      int now = N % 10;
      if (prev < now) {
        N--;
        now = N % 10;
        for (int i = 0; i < v.size(); i++) {
          v[i] = 9;
        }
      }
      N /= 10;
      v.push_back(now);
      prev = now;
    }

    while (v.back() == 0)
      v.pop_back();

    printf(""Case #%d: "", testCase);
    for (int i = v.size() - 1; i >= 0; i--) {
      printf(""%d"", v[i]);
    }
    printf(""\n"");
  }

  return 0;
}
",94,93,326
"int main() {
  int T;
  freopen(""C-small-1-attempt2.in"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  scanf(""%d"", &T);

  for (int testCase = 1; testCase <= T; testCase++) {
    long long N, K, cnt, step;
    cin >> N >> K;

    cnt = 1;
    step = 1;

    while (K > step) {
      K -= step;
      if (N % 2 == 1) {
        long long tmp = step - cnt;
        cnt *= 2;
        cnt += tmp;
      }
      step <<= 1;
      N /= 2;
    }

    printf(""Case #%d: "", testCase);

    if (K <= cnt) {
      printf(""%lld %lld"", N / 2, (N - 1) / 2);
    } else {
      printf(""%lld %lld"", (N - 1) / 2, (N - 2) / 2);
    }
    printf(""\n"");
  }

  return 0;
}
",94,94,300
"int main() {
  int T;
  freopen(""A-small-attempt1.in"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  scanf(""%d"", &T);

  for (int testCase = 1; testCase <= T; testCase++) {
    int R, C;
    scanf(""%d %d"", &R, &C);

    char board[30][30] = {
        0,
    };

    queue<pair<pair<int, int>, char>> q;

    for (int i = 0; i < R; i++) {
      for (int j = 0; j < C; j++) {
        scanf("" %c"", &board[i][j]);

        if (board[i][j] != '?') {
          q.push(make_pair(make_pair(i, j), board[i][j]));
        }
      }
    }

    while (!q.empty()) {
      int y = q.front().first.first;
      int x = q.front().first.second;
      char c = q.front().second;

      q.pop();

      if (y - 1 >= 0 && board[y - 1][x] == '?') {
        board[y - 1][x] = c;
        q.push(make_pair(make_pair(y - 1, x), c));
      }

      if (y + 1 < R && board[y + 1][x] == '?') {
        board[y + 1][x] = c;
        q.push(make_pair(make_pair(y + 1, x), c));
      }
    }

    for (int i = 0; i < R; i++) {
      for (int j = 0; j < C; j++) {
        if (board[i][j] == '?') {
          char c = 'A';

          int tmpJ = j;
          while (tmpJ >= 0 && board[i][tmpJ] == '?') {
            tmpJ--;
          }

          if (tmpJ == -1) {
            tmpJ = 0;
            while (tmpJ < C && board[i][tmpJ] == '?') {
              tmpJ++;
            }
          }

          c = (tmpJ < C ? board[i][tmpJ] : c);

          board[i][j] = c;
        }
      }
    }

    printf(""Case #%d:\n"", testCase);
    for (int i = 0; i < R; i++) {
      for (int j = 0; j < C; j++) {
        printf(""%c"", board[i][j]);
      }
      printf(""\n"");
    }
  }

  return 0;
}
",94,95,704
"int dim[6][6] = {{0, 0, 1, 1, 1, 0}, {0, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 1, 1},
                 {1, 0, 0, 0, 0, 0}, {1, 1, 1, 0, 0, 0}, {0, 0, 1, 0, 0, 0}};
int main() {
  int T;
  freopen(""B-small-attempt2.in"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  scanf(""%d"", &T);

  for (int testCase = 1; testCase <= T; testCase++) {
    int N;
    int R, O, Y, G, B, V;

    scanf(""%d %d %d %d %d %d %d"", &N, &R, &O, &Y, &G, &B, &V);

    int total = R + O + Y + G + B + V;

    string strBO;
    string strYV;
    string strRG;

    printf(""Case #%d: "", testCase);

    while (O > 0 && B > 0) {
      strBO += ""BO"";
      O--;
      B--;
    }

    if (total == strBO.size()) {
      cout << strBO << endl;
      continue;
    }

    if (strBO.size() > 0) {
      if (B == 0) {
        printf(""IMPOSSIBLE\n"");
        continue;
      } else {
        B--;
        strBO += ""B"";
      }
    }

    while (V > 0 && Y > 0) {
      strYV += ""YV"";
      Y--;
      V--;
    }

    if (total == strYV.size()) {
      cout << strYV << endl;
      continue;
    }

    if (strYV.size() > 0) {
      if (Y == 0) {
        printf(""IMPOSSIBLE\n"");
        continue;
      } else {
        Y--;
        strYV += ""Y"";
      }
    }

    while (R > 0 && G > 0) {
      strRG += ""RG"";
      R--;
      G--;
    }

    if (total == strRG.size()) {
      cout << strRG << endl;
      continue;
    }

    if (strRG.size() > 0) {
      if (R == 0) {
        printf(""IMPOSSIBLE\n"");
        continue;
      } else {
        R--;
        strRG += ""R"";
      }
    }

    pair<int, string> RBY[3] = {{R + (strRG.size() > 0), ""R""},
                                {B + (strBO.size() > 0), ""B""},
                                {Y + (strYV.size() > 0), ""Y""}};

    sort(RBY, RBY + 3);

    if (RBY[0].first + RBY[1].first < RBY[2].first) {
      printf(""IMPOSSIBLE\n"");
      continue;
    }

    string str2;

    while (RBY[0].first + RBY[1].first > RBY[2].first) {
      str2 += RBY[2].second + RBY[1].second + RBY[0].second;
      RBY[0].first--;
      RBY[1].first--;
      RBY[2].first--;
    }
    while (RBY[1].first > 0) {
      str2 += RBY[2].second + RBY[1].second;
      RBY[1].first--;
      RBY[2].first--;
    }
    while (RBY[0].first > 0) {
      str2 += RBY[2].second + RBY[0].second;
      RBY[0].first--;
      RBY[2].first--;
    }

    string res;

    bool ckR = strRG.size() == 0, ckB = strBO.size() == 0,
         ckY = strYV.size() == 0;

    for (int i = 0; i < str2.size(); i++) {
      if (str2[i] == 'R' && !ckR) {
        ckR = true;
        res += strRG;
      } else if (str2[i] == 'B' && !ckB) {
        ckB = true;
        res += strBO;
      } else if (str2[i] == 'Y' && !ckY) {
        ckY = true;
        res += strYV;
      } else {
        res.push_back(str2[i]);
      }
    }

    assert(res.size() == total);

    cout << res << endl;
  }

  return 0;
}
",94,96,1299
"int main() {
  int T;
  freopen(""A-small-attempt1.in"", ""r"", stdin);
  freopen(""output.txt"", ""w"", stdout);

  scanf(""%d"", &T);

  for (int testCase = 1; testCase <= T; testCase++) {
    string str;
    int K;

    cin >> str >> K;

    int res = 0;
    for (int i = 0; i <= str.size() - K; i++) {
      if (str[i] == '-') {
        res++;
        for (int j = i; j < i + K; j++) {
          str[j] = str[j] == '-' ? '+' : '-';
        }
      }
    }

    bool isOK = true;
    for (int i = str.size() - 1; i >= 0; i--) {
      if (str[i] == '-') {
        isOK = false;
        break;
      }
    }
    printf(""Case #%d: "", testCase);

    if (isOK) {
      printf(""%d"", res);
    } else {
      printf(""IMPOSSIBLE"");
    }

    printf(""\n"");
  }

  return 0;
}
",94,97,320
"

int main() {

  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  ;
  freopen(""inp.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);
  long long t;
  cin >> t;
  for (long long ccr = 1; ccr <= t; ++ccr) {

    long long rows, cols;
    cin >> rows >> cols;
    cin.ignore(256, '\n');
    vector<string> vec(rows, """");
    for (long long i = 0; i < rows; ++i)
      cin >> vec[i];
    for (long long i = 0; i < rows; ++i) {
      for (long long j = 1; j < cols; ++j) {
        if (vec[i][j] == '?' && vec[i][j - 1] != '?')
          vec[i][j] = vec[i][j - 1];
      }
    }
    for (long long i = 0; i < rows; ++i) {
      for (long long j = cols - 2; j >= 0; --j) {
        if (vec[i][j] == '?' && vec[i][j + 1] != '?')
          vec[i][j] = vec[i][j + 1];
      }
    }
    for (long long j = 0; j < cols; ++j) {
      for (long long i = 1; i < rows; ++i) {
        if (vec[i][j] == '?' && vec[i - 1][j] != '?')
          vec[i][j] = vec[i - 1][j];
      }
    }
    for (long long j = 0; j < cols; ++j) {
      for (long long i = rows - 2; i >= 0; --i) {
        if (vec[i][j] == '?' && vec[i + 1][j] != '?')
          vec[i][j] = vec[i + 1][j];
      }
    }

    cout << ""Case #"" << ccr << "":\n"";
    for (long long i = 0; i < rows; ++i) {
      cout << vec[i] << ""\n"";
    }
  }

  return 0;
}
",96,98,601
"

int main() {

  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  ;
  freopen(""inp.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);
  long long t;
  cin >> t;
  for (long long ccr = 1; ccr <= t; ++ccr) {
    long long flip1 = 0, flip2 = 0;
    bool poss1 = true, poss2 = true;
    string inp;
    cin.ignore(256, '\n');
    cin >> inp;
    long long k;
    cin >> k;
    long long n = inp.length();

    queue<long long> over;
    char problem = '-';
    for (long long i = 0; i < n; ++i) {
      if (!over.empty() && over.front() == i) {
        over.pop();
        if (problem == '+')
          problem = '-';
        else
          problem = '+';
      }
      if (inp[i] != problem)
        continue;

      over.push(i + k);
      if ((i + k) > n) {
        poss1 = false;
        break;
      }
      ++flip1;
      if (problem == '+')
        problem = '-';
      else
        problem = '+';
    }

    while (!over.empty())
      over.pop();

    problem = '-';
    for (long long i = n - 1; i >= 0; --i) {
      if (!over.empty() && over.front() == i) {
        over.pop();
        if (problem == '+')
          problem = '-';
        else
          problem = '+';
      }
      if (inp[i] != problem)
        continue;

      over.push(i - k);
      if ((i - k) < -1) {
        poss2 = false;
        break;
      }
      ++flip2;
      if (problem == '+')
        problem = '-';
      else
        problem = '+';
    }

    if (!poss1 && !poss2) {
      cout << ""Case #"" << ccr << "": IMPOSSIBLE\n"";
    } else if (poss1 && poss2) {
      cout << ""Case #"" << ccr << "": "" << min(flip1, flip2) << ""\n"";
    } else if (poss1) {
      cout << ""Case #"" << ccr << "": "" << flip1 << ""\n"";
    } else {
      cout << ""Case #"" << ccr << "": "" << flip2 << ""\n"";
    }
  }

  return 0;
}
",96,99,698
"

int main() {

  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  ;
  freopen(""inp2.txt"", ""r"", stdin);
  freopen(""out2.txt"", ""w"", stdout);
  long long t;
  cin >> t;
  for (long long ccr = 1; ccr <= t; ++ccr) {
    long long n, r, o, y, g, b, v;
    cin >> n >> r >> o >> y >> g >> b >> v;
    string ans(n, 'a');
    if (r >= b && r >= y) {
      ans[0] = 'R';
      --r;
    } else if (b >= r && b >= y) {
      ans[0] = 'B';
      --b;
    } else {
      ans[0] = 'Y';
      --y;
    }

    for (int i = 1; i < n; ++i) {
      if (ans[i - 1] == 'R') {
        if (b > y || (b == y && ans[0] == 'B' && b > 0)) {
          ans[i] = 'B';
          --b;
        } else {
          if (y <= 0) {
            ans = ""IMPOSSIBLE"";
            break;
          }
          ans[i] = 'Y';
          --y;
        }
      } else if (ans[i - 1] == 'B') {
        if (r > y || (r == y && ans[0] == 'R' && r > 0)) {
          ans[i] = 'R';
          --r;
        } else {
          if (y <= 0) {
            ans = ""IMPOSSIBLE"";
            break;
          }
          ans[i] = 'Y';
          --y;
        }
      } else {
        if (r > b || (b == r && ans[0] == 'R' && r > 0)) {
          ans[i] = 'R';
          --r;
        } else {
          if (b <= 0) {
            ans = ""IMPOSSIBLE"";
            break;
          }
          ans[i] = 'B';
          --b;
        }
      }
    }
    if (ans != ""IMPOSSIBLE"" && ans[n - 1] == ans[0]) {
      ans = ""IMPOSSIBLE"";
    }
    cout << ""Case #"" << ccr << "": "" << ans << ""\n"";
  }

  return 0;
}
",96,100,661
"

bool func(string &cur, string &orig, long long index) {
  long long n = orig.length();
  if (index >= n)
    return true;
  for (char i = '9'; i >= cur[index - 1]; --i) {
    cur[index] = i;
    if (cur.substr(0, index + 1) > orig.substr(0, index + 1))
      continue;
    bool tmp = func(cur, orig, index + 1);
    if (tmp)
      return true;
  }
  cur[index] = orig[index];
  return false;
}

int main() {

  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  ;
  freopen(""inp.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);
  long long t;
  cin >> t;
  cin.ignore(256, '\n');
  for (long long ccr = 1; ccr <= t; ++ccr) {
    string inp, orig;
    cin >> inp;
    inp = ""0"" + inp;
    orig = inp;

    bool poss = func(inp, orig, 1);
    long long n = inp.length();
    if (poss) {
      long long i = 0;
      while (i < n - 1 && inp[i] == '0')
        ++i;
      inp = inp.substr(i);
      cout << ""Case #"" << ccr << "": "" << inp << ""\n"";
    }
  }

  return 0;
}
",96,101,423
"

bool func(string &cur, string &orig, double index) {
  double n = orig.length();
  if (index >= n)
    return true;
  for (char i = '9'; i >= cur[index - 1]; --i) {
    cur[index] = i;
    if (cur.substr(0, index + 1) > orig.substr(0, index + 1))
      continue;
    bool tmp = func(cur, orig, index + 1);
    if (tmp)
      return true;
  }
  cur[index] = orig[index];
  return false;
}

int main() {

  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  ;
  freopen(""inp.txt"", ""r"", stdin);
  freopen(""out.txt"", ""w"", stdout);
  double t;
  cin >> t;
  cin.ignore(256, '\n');
  for (double ccr = 1; ccr <= t; ++ccr) {
    double numIng, numPack;
    cin >> numIng >> numPack;
    vector<double> reqQ(numIng, 0);
    for (double i = 0; i < numIng; ++i) {
      cin >> reqQ[i];
    }
    double val, ans = 0;
    multiset<double> in;
    vector<multiset<double>> pack(numIng, in);
    for (double i = 0; i < numIng; ++i) {
      for (double j = 0; j < numPack; ++j) {
        cin >> val;
        pack[i].insert(val);
      }
    }
    double lim = 1000000;

    for (double i = 0; i < numIng; ++i) {
      multiset<double>::iterator it = pack[i].end();
      --it;
      val = *it;
      val /= reqQ[i];
      lim = min(lim, 4 * val);
    }

    for (double dish = 1; dish <= lim; ++dish) {
      vector<double> less(numIng, 0), more(numIng, 0);
      for (double i = 0; i < numIng; ++i) {
        less[i] = 0.9 * reqQ[i] * dish;
        more[i] = 1.1 * reqQ[i] * dish;
      }
      bool poss = true;
      vector<multiset<double>::iterator> deleteIts(numIng);
      for (double i = 0; i < numIng; ++i) {
        auto it = pack[i].lower_bound(less[i]);
        if (it == pack[i].end() || *it > more[i]) {
          poss = false;
          break;
        }
        deleteIts[i] = it;
      }
      if (poss) {
        ++ans;
        for (double i = 0; i < numIng; ++i) {
          pack[i].erase(deleteIts[i]);
        }
        --dish;
      }
    }
    cout << ""Case #"" << ccr << "": "" << ans << ""\n"";
  }

  return 0;
}
",96,102,844
"

int main() {

  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  ;
  freopen(""inp1.txt"", ""r"", stdin);
  freopen(""out1.txt"", ""w"", stdout);
  double t;
  cin >> t;
  cout << std::fixed;
  for (long long ccr = 1; ccr <= t; ++ccr) {
    double d, n, ans = INT_MIN;
    cin >> d >> n;
    for (double i = 0; i < n; ++i) {
      double k, s;
      cin >> k >> s;
      k = d - k;
      double tme = k / s;
      ans = max(ans, tme);
    }
    ans = d / ans;
    cout << ""Case #"" << ccr << "": "" << setprecision(7) << ans << ""\n"";
  }

  return 0;
}
",96,103,250
"

int main() {

  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  ;
  freopen(""inp3.txt"", ""r"", stdin);
  freopen(""out3.txt"", ""w"", stdout);
  long long t;
  cin >> t;
  cout << std::fixed;
  for (long long ccr = 1; ccr <= t; ++ccr) {
    double n, q;
    cin >> n >> q;
    pair<double, double> in;
    vector<pair<double, double>> hinfo(n, in);
    for (double i = 0; i < n; ++i)
      cin >> hinfo[i].first >> hinfo[i].second;
    vector<vector<double>> graph(n, vector<double>(n, 0));
    for (double i = 0; i < n; ++i) {
      for (double j = 0; j < n; ++j) {
        cin >> graph[i][j];
      }
    }
    vector<double> ans(n, 0.0);
    for (double i = n - 2; i >= 0; --i) {
      double opt = DBL_MAX;
      double dist = 0.0;
      for (double j = i + 1; j < n; ++j) {
        dist += graph[j - 1][j];
        if (dist <= hinfo[i].first) {
          opt = min(opt, dist / hinfo[i].second + ans[j]);
        } else {
          break;
        }
      }
      ans[i] = opt;
    }
    for (double i = 0; i < q; ++i) {
      double aa;
      cin >> aa >> aa;
    }
    cout << ""Case #"" << ccr << "": "" << setprecision(7) << ans[0] << ""\n"";
  }
  return 0;
}
",96,104,494
"bool f(int n) {
  if (n < 10)
    return true;
  int a = n % 10;
  int b = n % 100 / 10;
  return f(n / 10) && (a >= b);
}

char s[100];
int main(void) {
  int t;
  scanf(""%d"", &t);
  for (int tt = 1; tt <= t; tt++) {

    // int g;
    // scanf(""%d"",&g);
    // for(;!f(g);--g);
    // printf(""Case #%d: %d\n"", tt, g);
    // continue;

    scanf(""%s"", s);
    int k;
    for (k = 1; s[k] != 0; ++k) {
      if (s[k] < s[k - 1])
        break;
    }
    if (s[k] == 0) {
      printf(""Case #%d: %s\n"", tt, s);
      continue;
    }

    int i = max(0, k - 1);
    for (int j = strlen(s) - 1; j > i; --j)
      s[j] = '9';

    for (; i >= 0; --i) {
      if (i == 0 || s[i] > s[i - 1]) {
        --s[i];
        break;
      }
      s[i] = '9';
    }

    printf(""Case #%d: %s\n"", tt, s[0] == '0' ? s + 1 : s);
  }
  return 0;
}
",99,105,432
"int main(void) {
  int t;
  scanf(""%d"", &t);
  for (int tt = 1; tt <= t; tt++) {

    int n, k;
    priority_queue<int> q;
    scanf(""%d%d"", &n, &k);
    q.push(n);
    while (--k) {
      int x = q.top();
      q.pop();
      q.push(x / 2);
      q.push((x - 1) / 2);
    }

    int v = q.top();
    printf(""Case #%d: %d %d\n"", tt, v / 2, (v - 1) / 2);
  }
  return 0;
}

/*
12
0 xoooooooooooox
1 xoooooxoooooox 6 5
2 xoooooxooxooox 3 2
3 xooxooxooxooox 2 2
4 xooxooxooxoxox 1 1
5 xxoxooxooxoxox 1 0
6 xxoxxoxooxoxox 1 0
7 xxoxxoxxoxoxox 1 0
                 0 0

x------------x 12
x-----1------x 6
x-----1--2---x 5
x--3--1--2---x 3
x--3--1--2-4-x 2
x5-3--1--2-4-x 2
*/
",99,106,381
"int N, Q, U, V;
int e[200];
double s[200];
int d[200][200];
int go[200];

double ans[200];
int main(void) {
  int t;
  scanf(""%d"", &t);
  for (int tt = 1; tt <= t; tt++) {
    scanf(""%d%d"", &N, &Q);
    for (int i = 0; i < N; ++i)
      scanf(""%d%lf"", &e[i], &s[i]);
    for (int i = 0; i < N; ++i)
      for (int j = 0; j < N; ++j)
        scanf(""%d"", &d[i][j]);

    for (int k = 0; k < N; ++k)
      for (int i = 0; i < N; ++i)
        for (int j = 0; j < N; ++j) {
          if (i == j || d[i][k] < 0 || d[k][j] < 0)
            continue;
          if (d[i][j] < 0 || d[i][j] >= d[i][k] + d[k][j]) {
            d[i][j] = d[i][k] + d[k][j];
          }
        }

    printf(""Case #%d:"", tt);

    for (; Q--;) {
      scanf(""%d%d"", &U, &V);
      --U, --V;
      for (int i = 0; i < N; ++i) {
        ans[i] = -1;
        go[i] = false;
      }
      ans[U] = 0;
      // go[U]=true;

      int cur = U;
      while (1) {
        go[cur] = true;
        for (int i = 0; i < N; ++i) {
          if (d[cur][i] > e[cur] || d[cur][i] < 0)
            continue;
          if (ans[i] < 0 || ans[i] > ans[cur] + d[cur][i] / s[cur])
            ans[i] = ans[cur] + d[cur][i] / s[cur];
        }

        double mind = -1;
        for (int i = 0; i < N; ++i) {
          if (go[i] || ans[i] < 0)
            continue;
          if (mind < 0 || mind > ans[i]) {
            cur = i;
            mind = ans[i];
          }
        }

        if (mind < 0)
          break;
      }

      printf("" %lf"", ans[V]);
    }

    puts("""");
  }
  return 0;
}
",99,107,717
"int n;
double m, s[2000], d[2000];
int main(void) {
  int t;
  scanf(""%d"", &t);
  for (int tt = 1; tt <= t; tt++) {
    scanf(""%lf%d"", &m, &n);
    double lo = 0;
    for (int i = 0; i < n; ++i) {
      scanf(""%lf%lf"", &d[i], &s[i]);
      lo = max(lo, (m - d[i]) / s[i]);
    }

    // printf(""%lf\n"", lo);
    printf(""Case #%d: %.8lf\n"", tt, m / lo);
  }
  return 0;
}
",99,108,197
"int N, P;
int s[200];
int r[200][200];
int b[200];
int tb[200];

int ll[200][200];
int mm[200][200];

bool dfs(int cur, int less, int most) { return 0; }

int main(void) {
  int t;
  scanf(""%d"", &t);
  for (int tt = 1; tt <= t; tt++) {
    scanf(""%d%d"", &N, &P);
    for (int i = 0; i < N; ++i)
      scanf(""%d"", &s[i]);
    for (int i = 0; i < N; ++i) {
      for (int j = 0; j < P; ++j) {
        scanf(""%d"", &r[i][j]);
      }
      sort(r[i], r[i] + P);
      for (int j = 0; j < P; ++j) {
        ll[i][j] = ceil(1.0 * r[i][j] / (1.1 * s[i]));
        mm[i][j] = floor(1.0 * r[i][j] / (0.9 * s[i]));
      }
    }

    /*
    for(int i=0;i<N;++i) {
      for(int j=0;j<P;++j) {
        printf(""[%4d,%4d] "", ll[i][j], mm[i][j]);
      }
      puts("""");
    }
    continue;
    */

    int ans = 0;
    memset(b, 0, sizeof(b));

    /*
    for(int i=0;i<P;++i)
    {
      int low = s[0]-(s[0]/10);
      int high = s[0]+((s[0]+9)/10);

      int most = r[0][i]/low;
      int less = (r[0][i]+high-1)/high;

      for(int k=less;k<=most;++k){
        bool ok=true;
        for(int j=0;j<N && ok;++j){
          if (r[j][i]*10 < k*s[j]*9) ok=false;
          if (r[j][i]*10 > k*s[j]*11) ok=false;
        }
        if (ok) {
          ++ans;
          break;
        }
      }

    }
    */

    while (1) {
      bool stop = false;
      for (int i = 0; i < N; ++i) {
        if (b[i] >= P)
          stop = true;
      }
      if (stop)
        break;

      int cur = 0;
      for (int i = 0; i < N; ++i) {
        cur = max(cur, ll[i][b[i]]);
      }

      bool ok = true;
      for (int i = 0; i < N; ++i) {
        for (int j = b[i]; j <= P; ++j) {
          if (j == P || cur < ll[i][j]) {
            b[i] = j;
            ok = false;
            break;
          }
          if (ll[i][j] > mm[i][j]) {
            continue;
          }
          if (cur <= mm[i][j]) {
            tb[i] = j;
            break;
          }
        }
      }

      // printf(""%d: %d %d\n"", cur, ok, b[0]);
      if (!ok)
        continue;

      ++ans;
      for (int i = 0; i < N; ++i) {
        b[i] = tb[i] + 1;
      }
    }

    printf(""Case #%d: %d\n"", tt, ans);
  }
  return 0;
}
",99,109,1018
"char s[2000];
int main(void) {
  int t;
  scanf(""%d"", &t);
  for (int tt = 1; tt <= t; tt++) {
    int n = 0, k;
    scanf(""%s%d"", s, &k);
    for (int i = strlen(s) - 1; i + 1 >= k; --i) {
      if (s[i] == '-') {
        ++n;
        for (int j = 0; j < k; ++j) {
          s[i - j] = (s[i - j] == '-' ? '+' : '-');
        }
      }
      // printf(""%c %s\n"", s[i], s);
    }
    for (int j = 0; j < k; ++j) {
      if (s[j] == '-') {
        n = -1;
      }
    }

    if (n < 0) {
      printf(""Case #%d: IMPOSSIBLE\n"", tt);
      continue;
    }
    printf(""Case #%d: %d\n"", tt, n);
  }
  return 0;
}
",99,110,300
"int n, m;
char s[50][50];
int main(void) {
  int t;
  scanf(""%d"", &t);
  for (int tt = 1; tt <= t; tt++) {
    scanf(""%d%d"", &n, &m);
    for (int i = 0; i < n; ++i)
      scanf(""%s"", s[i]);

    int ufx, ufy = 0;
    for (int i = 0; i < n; ++i) {
      ufx = 0;
      bool fill = false;
      for (int j = 0; j < m; ++j) {
        if (s[i][j] == '?')
          continue;
        fill = true;
        int st = ufx, ed = j + 1;
        for (; ed < m && s[i][ed] == '?'; ++ed)
          ;
        for (int x = st; x < ed; ++x)
          for (int y = ufy; y <= i; ++y)
            s[y][x] = s[i][j];
        ufx = ed;
      }
      if (fill)
        ufy = i + 1;
    }

    for (int i = 0; i < n; ++i)
      for (int j = 0; j < m; ++j)
        if (s[i][j] == '?') {
          s[i][j] = s[i - 1][j];
        }

    printf(""Case #%d:\n"", tt);
    for (int i = 0; i < n; ++i)
      printf(""%s\n"", s[i]);
  }
  return 0;
}
",99,111,435
"
#pragma comment(linker, ""/STACK:100000000000"")
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;

int main() {
  freopen(""a.in"", ""r"", stdin);
  freopen(""a.out"", ""w"", stdout);
  int Tcas;
  cin >> Tcas;
  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {
    printf(""Case #%d: "", cas + 1);
    string s[30];
    int n, m;
    cin >> n >> m;
    for (int(i) = 0; (i) < (n); (i)++)
      cin >> s[i];
    for (int(i) = 0; (i) < (n); (i)++) {
      char lastchar = '?';
      for (int(j) = 0; (j) < (m); (j)++) {
        if (s[i][j] != '?') {
          lastchar = s[i][j];
          continue;
        }
        if (lastchar != '?')
          s[i][j] = lastchar;
      }
      lastchar = '?';
      for (int j = m - 1; j >= 0; j--) {
        if (s[i][j] != '?') {
          lastchar = s[i][j];
          continue;
        }
        if (lastchar != '?')
          s[i][j] = lastchar;
      }
    }
    for (int(j) = 0; (j) < (m); (j)++) {
      char lastchar = '?';
      for (int(i) = 0; (i) < (n); (i)++) {
        if (s[i][j] != '?') {
          lastchar = s[i][j];
          continue;
        }
        if (lastchar != '?')
          s[i][j] = lastchar;
      }
      lastchar = '?';
      for (int i = n - 1; i >= 0; i--) {
        if (s[i][j] != '?') {
          lastchar = s[i][j];
          continue;
        }
        if (lastchar != '?')
          s[i][j] = lastchar;
      }
    }
    cout << endl;
    for (int(i) = 0; (i) < (n); (i)++)
      cout << s[i] << endl;
  }
}
",104,112,708
"
#pragma comment(linker, ""/STACK:100000000000"")
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;

int main() {
  freopen(""a.in"", ""r"", stdin);
  freopen(""a.out"", ""w"", stdout);
  int Tcas;
  cin >> Tcas;
  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {
    printf(""Case #%d: "", cas + 1);
    string s;
    int k;
    cin >> s >> k;
    int res = 0;
    for (int(i) = 0; (i) < (s.size() - k + 1); (i)++) {
      if (s[i] == '+')
        continue;
      for (int(j) = (i); (j) < (i + k); (j)++)
        s[j] = (s[j] == '+' ? '-' : '+');
      res++;
    }
    bool ok = true;
    for (int(i) = 0; (i) < (s.size()); (i)++)
      if (s[i] == '-')
        ok = false;
    if (ok)
      cout << res << endl;
    else
      cout << ""IMPOSSIBLE"" << endl;
  }
}
",104,113,413
"
#pragma comment(linker, ""/STACK:100000000000"")
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;

int main() {
  freopen(""a.in"", ""r"", stdin);
  freopen(""a.out"", ""w"", stdout);
  int Tcas;
  cin >> Tcas;
  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {
    printf(""Case #%d: "", cas + 1);
    string s;
    cin >> s;
    string res = s;
    for (int(i) = 0; (i) < (s.size() - 1); (i)++) {
      string temp(s.size() - i - 1, s[i]);
      if (temp <= s.substr(i + 1))
        continue;
      res[i]--;
      for (int(j) = (i + 1); (j) < (s.size()); (j)++)
        res[j] = '9';
      break;
    }
    while (res[0] == '0')
      res = res.substr(1);
    cout << res << endl;
  }
}
",104,114,373
"
#pragma comment(linker, ""/STACK:100000000000"")
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;

vector<PII> horse;
vector<int> dis;
double memo[110][110];
double f(int ind, int curHorse) {
  ll sum = 0;
  for (int(i) = (curHorse); (i) < (ind); (i)++)
    sum += dis[i];
  if (sum > horse[curHorse].first)
    return 1e100;

  if (ind == dis.size())
    return 0;

  double res = 1e100;
  double &ret = memo[ind][curHorse];
  if (ret < 0)
    return ret;

  res = min(res,
            (double)dis[ind] / horse[curHorse].second + f(ind + 1, curHorse));
  res = min(res, (double)dis[ind] / horse[ind].second + f(ind + 1, ind));

  return ret = res;
}
int main() {
  freopen(""a.in"", ""r"", stdin);
  freopen(""a.out"", ""w"", stdout);
  int Tcas;
  cin >> Tcas;
  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {
    printf(""Case #%d: "", cas + 1);
    int n, q;
    cin >> n >> q;
    horse.clear();
    dis.clear();
    memset((memo), (-1), sizeof(memo));
    for (int(i) = 0; (i) < (n); (i)++) {
      PII p;
      cin >> p.first >> p.second;
      horse.push_back(p);
    }
    for (int(i) = 0; (i) < (n); (i)++)
      for (int(j) = 0; (j) < (n); (j)++) {
        int k;
        cin >> k;
        if (i + 1 == j)
          dis.push_back(k);
      }
    for (int(qq) = 0; (qq) < (q); (qq)++) {
      int st, en;
      cin >> st >> en;
      cout << fixed << setprecision(9) << f(0, 0) << "" "";
    }
    cout << endl;
  }
}
",104,115,699
"
#pragma comment(linker, ""/STACK:100000000000"")
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;

int main() {
  freopen(""a.in"", ""r"", stdin);
  freopen(""a.out"", ""w"", stdout);
  int Tcas;
  cin >> Tcas;
  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {
    printf(""Case #%d: "", cas + 1);
    int D, N;
    cin >> D >> N;
    vector<PII> v;
    for (int(i) = 0; (i) < (N); (i)++) {
      PII p;
      cin >> p.first >> p.second;
      v.push_back(p);
    }
    sort((v).begin(), (v).end());
    reverse((v).begin(), (v).end());
    double res = 0;
    for (int(i) = 0; (i) < (N); (i)++)
      res = max(res, ((double)D - v[i].first) / v[i].second);
    cout << fixed << setprecision(9) << D / res << endl;
  }
}
",104,116,385
"
#pragma comment(linker, ""/STACK:100000000000"")
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;

string imposible = ""IMPOSSIBLE"";

string f2(string s, int N, int R, int B, int Y) {
  char Front = 'A';
  char Back = 'A';
  if (!s.empty()) {
    Front = s[0];
    Back = s.back();
  }
  for (int(i) = 0; (i) < (N); (i)++) {
    if (Back == 'R') {
      if (B > Y) {
        s += ""B"";
        B--;
      } else if (Y > B) {
        s += ""Y"";
        Y--;
      } else {
        if (B == 0 && Y == 0)
          return imposible;
        if (Front == 'B') {
          s += 'B';
          B--;
        } else {
          s += 'Y';
          Y--;
        }
      }
    } else if (Back == 'B') {
      if (R > Y) {
        s += ""R"";
        R--;
      } else if (Y > R) {
        s += ""Y"";
        Y--;
      } else {
        if (R == 0 && Y == 0)
          return imposible;
        if (Front == 'R') {
          s += 'R';
          R--;
        } else {
          s += 'Y';
          Y--;
        }
      }
    } else if (Back == 'Y') {
      if (R > B) {
        s += ""R"";
        R--;
      } else if (B > R) {
        s += ""B"";
        B--;
      } else {
        if (R == 0 && B == 0)
          return imposible;
        if (Front == 'R') {
          s += ""R"";
          R--;
        } else {
          s += ""B"";
          B--;
        }
      }
    } else {
      if (R != 0) {
        s += ""R"";
        R--;
      } else if (B != 0) {
        s += ""B"";
        B--;
      } else if (Y != 0) {
        s += ""Y"";
        Y--;
      } else
        return imposible;
    }
    Back = s.back();
    Front = s.front();
  }
  if (s.size() > 1 && s.back() == s.front())
    return imposible;
  return s;
}

string f(int N, int R, int O, int Y, int G, int B, int V) {
  if (G > R)
    return imposible;
  if (O > B)
    return imposible;
  if (V > Y)
    return imposible;

  if (G == R && G != 0) {
    if (O == 0 && B == 0 && V == 0 && Y == 0) {
      string res;
      for (int(i) = 0; (i) < (N / 2); (i)++)
        res += ""GR"";
      return res;
    } else
      return imposible;
  }
  if (O == B && O != 0) {
    if (R == 0 && G == 0 && V == 0 && Y == 0) {
      string res;
      for (int(i) = 0; (i) < (N / 2); (i)++)
        res += ""OB"";
      return res;
    } else
      return imposible;
  }
  if (V == Y && V != 0) {
    if (O == 0 && B == 0 && G == 0 && R == 0) {
      string res;
      for (int(i) = 0; (i) < (N / 2); (i)++)
        res += ""VY"";
      return res;
    } else
      return imposible;
  }
  string res[3];

  string RG;
  for (int(i) = 0; (i) < (G); (i)++)
    RG += ""RG"";
  if (!RG.empty())
    RG += ""R"";
  string BO;
  for (int(i) = 0; (i) < (O); (i)++)
    BO += ""BO"";
  if (!BO.empty())
    BO += ""B"";
  string YV;
  for (int(i) = 0; (i) < (V); (i)++)
    YV += ""YV"";
  if (!YV.empty())
    YV += ""Y"";
  if (G != 0)
    R -= (G + 1);
  if (O != 0)
    B -= (O + 1);
  if (V != 0)
    Y -= (V + 1);
  res[0] = f2(RG + BO + YV, R + B + Y, R, B, Y);
  res[1] = f2(RG + YV + BO, R + B + Y, R, B, Y);
  res[2] = f2(YV + RG + BO, R + B + Y, R, B, Y);

  for (int(i) = 0; (i) < (3); (i)++)
    if (res[i] != imposible)
      return res[i];
  return imposible;
}
int main() {
  freopen(""a.in"", ""r"", stdin);
  freopen(""a.out"", ""w"", stdout);
  int Tcas;
  cin >> Tcas;
  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {
    printf(""Case #%d: "", cas + 1);
    int N, R, O, Y, G, B, V;
    cin >> N >> R >> O >> Y >> G >> B >> V;
    cout << f(N, R, O, Y, G, B, V) << endl;
  }
}
",104,117,1604
"
#pragma comment(linker, ""/STACK:100000000000"")
typedef long long ll;
typedef unsigned long long ull;
typedef long double lld;
typedef pair<int, int> PII;
typedef pair<ll, ll> PLL;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;

int findmini(int x, int s) {
  int res = (x * 10) / (11 * s);
  if ((x * 10) % (11 * s) == 0)
    return res;
  return res + 1;
}
int findmaxi(int x, int s) {
  int res = (x * 10) / (9 * s);
  return res;
}

bool graph[128][128];
bool seen[128];
int matchL[128], matchR[128];
int n, p;

bool bpm(int u) {
  for (int v = 0; v < p; v++)
    if (graph[u][v]) {
      if (seen[v])
        continue;
      seen[v] = true;

      if (matchR[v] < 0 || bpm(matchR[v])) {
        matchL[u] = v;
        matchR[v] = u;
        return true;
      }
    }
  return false;
}

int main() {
  freopen(""a.in"", ""r"", stdin);
  freopen(""a.out"", ""w"", stdout);
  int Tcas;
  cin >> Tcas;
  for (int(cas) = 0; (cas) < (Tcas); (cas)++) {
    printf(""Case #%d: "", cas + 1);
    cin >> n >> p;
    vector<int> ingredients;
    for (int(i) = 0; (i) < (n); (i)++) {
      int x;
      cin >> x;
      ingredients.push_back(x);
    }
    int mini[100][100] = {0};
    int maxi[100][100] = {0};
    memset((mini), (0), sizeof(mini));
    memset((maxi), (0), sizeof(maxi));
    for (int(i) = 0; (i) < (n); (i)++) {
      vector<int> temp;
      for (int(j) = 0; (j) < (p); (j)++) {
        int x;
        cin >> x;
        temp.push_back(x);
      }
      sort((temp).begin(), (temp).end());
      for (int(j) = 0; (j) < (p); (j)++) {
        mini[i][j] = findmini(temp[j], ingredients[i]);
        maxi[i][j] = findmaxi(temp[j], ingredients[i]);
        if (mini[i][j] > maxi[i][j])
          mini[i][j] = maxi[i][j] = -1;
      }
    }
    memset((graph), (false), sizeof(graph));
    for (int(i) = 0; (i) < (p); (i)++)
      for (int(j) = 0; (j) < (p); (j)++) {
        if (mini[0][i] <= 0 || mini[1][j] <= 0)
          continue;
        if (max(mini[0][i], mini[1][j]) <= min(maxi[0][i], maxi[1][j]))
          graph[i][j] = true;
      }
    if (n == 2) {
      memset(matchL, -1, sizeof(matchL));
      memset(matchR, -1, sizeof(matchR));
      int cnt = 0;
      for (int i = 0; i < p; i++) {
        memset(seen, 0, sizeof(seen));
        if (bpm(i))
          cnt++;
      }
      cout << cnt << endl;
    } else {
      int sum = 0;
      for (int(i) = 0; (i) < (p); (i)++)
        if (mini[0][i] != -1 && mini[0][i] <= maxi[0][i])
          sum++;
      cout << sum << endl;
    }
  }
}
",104,118,1145
"int main() {
  int tests;
  cin >> tests;
  for (int t = 0; t < tests; t++) {
    string status;
    cin >> status;
    int K;
    cin >> K;
    int changed = 0;
    for (int i = 0; i < (int)(status.size()) - K + 1; i++) {
      if (status[i] == '-') {
        changed++;
        for (int j = 0; j < K; j++) {
          status[i + j] = (status[i + j] == '+') ? '-' : '+';
        }
      }
    }
    bool ok = true;
    for (int i = 0; i < status.size(); i++) {
      if (status[i] == '-') {
        ok = false;
        break;
      }
    }
    cout << ""Case #"" << (t + 1) << "": "";
    if (!ok) {
      cout << ""IMPOSSIBLE"" << endl;
    } else {
      cout << changed << endl;
    }
  }
}
",119,119,275
"void convert(string &str) {
  int decreased = -1;
  for (int i = 1; i < str.size(); i++) {
    if (str[i] < str[i - 1]) {
      decreased = i;
      break;
    }
  }
  if (decreased != -1) {
    for (int i = decreased; i < str.size(); i++) {
      str[i] = '9';
    }
    str[decreased - 1]--;
    convert(str);
  }
}

int main() {
  int tests;
  cin >> tests;
  for (int t = 0; t < tests; t++) {
    string str;
    cin >> str;
    convert(str);
    cout << ""Case #"" << (t + 1) << "": "" << atoll(str.c_str()) << endl;
  }
}
",119,120,226
"int main() {
  int tests;
  cin >> tests;
  for (int t = 0; t < tests; t++) {
    double D;
    long long N;
    cin >> D >> N;
    pair<double, double> horses[N];
    for (int i = 0; i < N; i++) {
      cin >> horses[i].first >> horses[i].second;
    }
    sort(horses, horses + N);
    double whenReaches[N + 1];
    whenReaches[N] = 0;
    for (int i = N - 1; i >= 0; i--) {
      whenReaches[i] =
          max(whenReaches[i + 1], (D - (horses[i].first)) / horses[i].second);
    }
    cout << ""Case #"" << (t + 1) << "": "" << fixed << setprecision(10)
         << D / whenReaches[0] << endl;
  }
}
",119,121,248
"int N, P;
int R[100], Q[100][100];

void getServes(int p, int ing, int &minServes, int &maxServes) {
  minServes = (Q[ing][p] * 10) / (R[ing] * 11);
  if ((Q[ing][p] * 10) % (R[ing] * 11) != 0) {
    minServes++;
  }
  maxServes = (Q[ing][p] * 10) / (R[ing] * 9);
}

bool isCompatible(int i, int j) {
  int minFirst, maxFirst, minSecond, maxSecond;
  getServes(i, 0, minFirst, maxFirst);
  getServes(j, 1, minSecond, maxSecond);
  if ((minFirst <= maxFirst) && (minSecond <= maxSecond)) {
    if ((maxFirst < minSecond) || (maxSecond < minFirst)) {
      return false;
    } else {
      return true;
    }
  } else {
    return false;
  }
}

int getScore(vector<int> &assignment) {
  int sc = 0;
  for (int i = 0; i < assignment.size(); i++) {
    if (isCompatible(i, assignment[i])) {
      sc++;
    }
  }
  return sc;
}

int main() {
  int tests;
  cin >> tests;
  for (int t = 0; t < tests; t++) {
    cin >> N >> P;
    for (int i = 0; i < N; i++) {
      cin >> R[i];
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < P; j++) {
        cin >> Q[i][j];
      }
    }
    if (N == 2) {
      vector<int> assignment;
      for (int i = 0; i < P; i++) {
        assignment.push_back(i);
      }
      int score = 0;
      do {
        score = max(score, getScore(assignment));
      } while (next_permutation(assignment.begin(), assignment.end()));
      cout << ""Case #"" << (t + 1) << "": "" << score << endl;
    } else if (N == 1) {
      int score = 0;
      for (int i = 0; i < P; i++) {
        int minS, maxS;
        getServes(i, 0, minS, maxS);
        if (minS <= maxS) {
          score++;
        }
      }
      cout << ""Case #"" << (t + 1) << "": "" << score << endl;
    }
  }
}
",119,122,709
"struct Stall {
  int first;
  int second;
  bool operator<(const Stall &b) const {
    int size1 = (second - first + 1);
    int size2 = (b.second - b.first + 1);
    if (size2 != size1) {
      return size1 < size2;
    } else {
      return first > b.first;
    }
  }
};

int main() {
  int tests;
  cin >> tests;
  for (int t = 0; t < tests; t++) {
    long long N, K;
    cin >> N >> K;
    priority_queue<Stall> pq;
    Stall initial;
    initial.first = 1;
    initial.second = N;
    pq.push(initial);
    for (long long i = 0; i < K - 1; i++) {
      Stall current = pq.top();
      pq.pop();
      long long oc = (current.second + current.first) / 2;
      if (oc != current.first) {
        Stall firstPart;
        firstPart.first = current.first;
        firstPart.second = oc - 1;
        pq.push(firstPart);
      }
      if (oc != current.second) {
        Stall secondPart;
        secondPart.first = oc + 1;
        secondPart.second = current.second;
        pq.push(secondPart);
      }
    }
    Stall current = pq.top();
    long long oc = (current.second + current.first) / 2;
    long long d1 = (oc - current.first);
    long long d2 = (current.second - oc);
    cout << ""Case #"" << (t + 1) << "": "";
    cout << max(d1, d2) << "" "" << min(d1, d2) << endl;
  }
}
",119,123,474
"int N;
double distances[100][100];
long long E[100];
double S[100];

bool dp[100][100];
double solution[100][100];

double solve(int initial, int dest) {
  if (initial == dest) {
    return 0;
  }
  if (dp[initial][dest]) {
    return solution[initial][dest];
  }
  long long life = E[initial];
  double bestCost = DBL_MAX;
  double cost = 0;
  for (int i = initial + 1; i <= dest; i++) {
    life -= distances[i - 1][i];
    if (life < 0) {
      break;
    }
    cost += distances[i - 1][i] / S[initial];
    double total = cost + solve(i, dest);
    bestCost = min(bestCost, total);
  }
  dp[initial][dest] = true;
  solution[initial][dest] = bestCost;
  return solution[initial][dest];
}

int main() {
  int tests;
  cin >> tests;
  for (int t = 0; t < tests; t++) {
    cout << ""Case #"" << (t + 1) << "": "";
    long long Q;
    cin >> N >> Q;
    for (int i = 0; i < N; i++) {
      cin >> E[i] >> S[i];
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        cin >> distances[i][j];
      }
    }
    for (int i = 0; i < N; i++) {
      for (int j = 0; j < N; j++) {
        dp[i][j] = false;
      }
    }
    for (int i = 0; i < Q; i++) {
      int initial, dest;
      cin >> initial >> dest;
      initial--;
      dest--;
      cout << setprecision(10) << fixed << solve(initial, dest) << "" "";
    }
    cout << endl;
  }
}
",119,124,551
"int main() {
  int tests;
  cin >> tests;
  for (int t = 0; t < tests; t++) {
    int R, C;
    cin >> R >> C;
    char board[R][C];
    int firstRow = -1;
    for (int i = 0; i < R; i++) {
      for (int j = 0; j < C; j++) {
        cin >> board[i][j];
        if ((board[i][j] != '?') && (firstRow == -1)) {
          firstRow = i;
        }
      }
    }
    for (int i = firstRow; i < R; i++) {
      for (int j = 1; j < C; j++) {
        if (board[i][j] == '?') {
          board[i][j] = board[i][j - 1];
        }
      }
      for (int j = C - 2; j >= 0; j--) {
        if (board[i][j] == '?') {
          board[i][j] = board[i][j + 1];
        }
      }
      if (board[i][0] == '?') {
        for (int j = 0; j < C; j++) {
          board[i][j] = board[i - 1][j];
        }
      }
    }
    for (int i = firstRow - 1; i >= 0; i--) {
      for (int j = 0; j < C; j++) {
        board[i][j] = board[i + 1][j];
      }
    }
    cout << ""Case #"" << (t + 1) << "": "" << endl;
    for (int i = 0; i < R; i++) {
      for (int j = 0; j < C; j++) {
        cout << board[i][j];
      }
      cout << endl;
    }
  }
}
",119,125,486
"typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

const int MAXN = 1 * 1000 + 10;

bool is_tidy(int n) {
  vector<int> d;
  while (n) {
    int x = n % 10;
    if (((int)(d).size()) && x > d.back())
      return false;
    d.push_back(x);
    n /= 10;
  }
  return true;
}

int main() {
  ios::sync_with_stdio(false);

  int tt;
  cin >> tt;
  for (int tc = 1; tc <= tt; tc++) {
    cout << ""Case #"" << tc << "": "";
    int n;
    cin >> n;
    do {
      if (is_tidy(n)) {
        cout << n << endl;
        break;
      }
    } while (n--);
  }
  return 0;
}
",157,126,270
"typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

const int MAXN = 1 * 1000 + 10;

void flip(string &s, int x, int k) {
  for (int i = x; i < x + k; i++)
    s[i] = (s[i] == '+' ? '-' : '+');
}

int main() {
  ios::sync_with_stdio(false);

  int tt;
  cin >> tt;
  for (int tc = 1; tc <= tt; tc++) {
    cout << ""Case #"" << tc << "": "";

    string s;
    cin >> s;
    int k;
    cin >> k;

    int n = ((int)(s).size());
    int ans = 0;
    for (int i = 0; i < n; i++) {
      if (s[i] == '-') {
        if (n - i >= k) {
          flip(s, i, k);
          ans++;
        } else {
          ans = -1;
          break;
        }
      }
    }
    if (ans == -1)
      cout << ""IMPOSSIBLE"";
    else
      cout << ans;
    cout << endl;
  }
  return 0;
}
",157,127,348
"typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

const int MAXN = 30;

char a[MAXN][MAXN];
int n, m;
int d[MAXN][MAXN];
bool mark[MAXN][MAXN];

void colorize(int x1, int y1, int x2, int y2, char c) {
  for (int i = x1; i <= x2; i++)
    for (int j = y1; j <= y2; j++) {
      mark[i][j] = true;
      a[i][j] = c;
    }
  for (int i = 0; i < n; i++)
    for (int j = 0; j < m; j++) {
      d[i][j] = (a[i][j] != '?');
      if (i > 0)
        d[i][j] += d[i - 1][j];
      if (j > 0)
        d[i][j] += d[i][j - 1];
      if (i > 0 && j > 0)
        d[i][j] -= d[i - 1][j - 1];
    }
}

bool check(int x1, int y1, int x2, int y2) {
  int res = d[x2][y2];
  if (x1 > 0)
    res -= d[x1 - 1][y2];
  if (y1 > 0)
    res -= d[x2][y1 - 1];
  if (x1 > 0 && y1 > 0)
    res += d[x1 - 1][y1 - 1];
  return (res == 1);
}

void go(int x, int y) {
  for (int i1 = 0; i1 <= x; i1++)
    for (int j1 = 0; j1 <= y; j1++)
      for (int i2 = n - 1; i2 >= x; i2--)
        for (int j2 = m - 1; j2 >= y; j2--)
          if (check(i1, j1, i2, j2)) {
            colorize(i1, j1, i2, j2, a[x][y]);
            return;
          }
}

int main() {
  ios::sync_with_stdio(false);

  int tc;
  cin >> tc;
  for (int tt = 1; tt <= tc; tt++) {
    memset(d, 0, sizeof d);
    memset(mark, 0, sizeof mark);
    cout << ""Case #"" << tt << "":"" << endl;

    cin >> n >> m;
    for (int i = 0; i < n; i++)
      for (int j = 0; j < m; j++)
        cin >> a[i][j];

    for (int i = 0; i < n; i++)
      for (int j = 0; j < m; j++) {
        d[i][j] = (a[i][j] != '?');
        if (i > 0)
          d[i][j] += d[i - 1][j];
        if (j > 0)
          d[i][j] += d[i][j - 1];
        if (i > 0 && j > 0)
          d[i][j] -= d[i - 1][j - 1];
      }

    for (int i = 0; i < n; i++)
      for (int j = 0; j < m; j++)
        if (a[i][j] != '?' && !mark[i][j]) {
          go(i, j);
        }

    for (int i = 0; i < n; i++, cout << endl)
      for (int j = 0; j < m; j++)
        cout << a[i][j];
  }
  return 0;
}
",157,128,1005
"typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

const int MAXN = 1 * 1000 + 10;

pair<int, char> p[10];

int main() {
  ios::sync_with_stdio(false);

  int tt;
  cin >> tt;
  for (int tc = 1; tc <= tt; tc++) {
    cout << ""Case #"" << tc << "": "";

    int n, r, o, y, g, b, v;
    cin >> n >> r >> o >> y >> g >> b >> v;

    p[0] = make_pair(r, 'R');
    p[1] = make_pair(y, 'Y');
    p[2] = make_pair(b, 'B');
    sort(p, p + 3);

    if (p[2].first > n / 2) {
      cout << ""IMPOSSIBLE"" << endl;
    } else {
      string ans;
      for (int i = 0; i < n; i++)
        ans.push_back(' ');

      for (int c = 2; c >= 0; c--) {
        if (c % 2 == 0) {
          for (int i = 0; i < n; i++) {
            if (p[c].first == 0)
              break;

            int prev = (i - 1 + n) % n;
            if (ans[prev] != p[c].second && ans[i] == ' ') {
              ans[i] = p[c].second;
              p[c].first--;
            }
          }
        } else {
          for (int i = n - 1; i >= 0; i--) {
            if (p[c].first == 0)
              break;

            int next = (i + 1 + n) % n;
            if (ans[next] != p[c].second && ans[i] == ' ') {
              ans[i] = p[c].second;
              p[c].first--;
            }
          }
        }
      }
      for (int i = 0; i < n; i++)
        if (ans[i] == ' ')
          cerr << ""BUG"" << endl;

      cout << ans << endl;
    }
  }
  return 0;
}
",157,129,609
"typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

const int MAXN = 1 * 1000 + 10;

pii h[MAXN];

int main() {
  ios::sync_with_stdio(false);

  int tt;
  cin >> tt;
  for (int tc = 1; tc <= tt; tc++) {
    cout << ""Case #"" << tc << "": "";
    int d, n;
    cin >> d >> n;
    for (int i = 0; i < n; i++)
      cin >> h[i].second >> h[i].first;
    sort(h, h + n);

    double max_t = 0;
    for (int i = 0; i < n; i++) {
      int vi = h[i].first, ki = h[i].second;
      double nxt = d;
      double t = 0;
      for (int j = 0; j < i; j++) {
        int vj = h[j].first, kj = h[j].second;
        if (kj > ki) {
          double cx = (double)(vj * ki - vi * kj) / (double)(vj - vi);
          if (cx < nxt && cx > kj) {
            t += (double)(nxt - cx) / (double)vj;
            nxt = cx;
          }
        }
      }
      if (ki < nxt)
        t += (double)(nxt - ki) / (double)vi;

      max_t = max(max_t, t);
    }

    cout << fixed << setprecision(6) << (double)d / max_t << endl;
  }
  return 0;
}
",157,130,454
"typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

const int MAXN = 1 * 1000 + 10;

int main() {
  ios::sync_with_stdio(false);
  int tt;
  cin >> tt;
  for (int tc = 1; tc <= tt; tc++) {
    cout << ""Case #"" << tc << "": "";

    int n, k;
    cin >> n >> k;
    queue<int> q;
    q.push(1);
    q.push(n + 1);

    int x, y, mid;
    for (int i = 0; i < k; i++) {
      x = q.front();
      q.pop();
      y = q.front();
      q.pop();
      mid = (x + y) / 2;

      // cerr << VAL(x) << VAL(y) << VAL(mid) << endl;

      if ((y - x) % 2 == 0) {
        if (mid - x > 0) {
          q.push(x);
          q.push(mid);
        }
        if (y - mid - 1 > 0) {
          q.push(mid + 1);
          q.push(y);
        }
      } else {
        if (y - mid - 1 > 0) {
          q.push(mid + 1);
          q.push(y);
        }
        if (mid - x > 0) {
          q.push(x);
          q.push(mid);
        }
      }
    }
    cout << mid - x << ' ' << y - mid - 1 << endl;
  }
  return 0;
}
",157,131,448
"typedef long long ll;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

const int MAXN = 1 * 100 + 10;

int r[MAXN];
int q[MAXN][MAXN];
set<pair<pii, int>> s[MAXN];

int main() {
  ios::sync_with_stdio(false);

  int tc;
  cin >> tc;
  for (int tt = 1; tt <= tc; tt++) {
    for (int i = 0; i < (MAXN); i++)
      s[i].clear();
    cout << ""Case #"" << tt << "": "";

    int n, p;
    cin >> n >> p;
    for (int i = 0; i < n; i++)
      cin >> r[i];
    for (int i = 0; i < n; i++)
      for (int j = 0; j < p; j++)
        cin >> q[i][j];

    for (int i = 0; i < n; i++)
      for (int j = 0; j < p; j++) {
        int k1 = ceil((double)q[i][j] / ((double)r[i] * 1.1));
        int k2 = floor((double)q[i][j] / ((double)r[i] * 0.9));

        if (k1 <= k2)
          s[i].insert(make_pair(make_pair(k1, k2), j));
      }

    int ans = 0;
    while (((int)(s[0]).size())) {
      pair<pii, int> tmp = *s[0].begin();
      s[0].erase(s[0].begin());
      int k1 = tmp.first.first, k2 = tmp.first.second;

      bool check = true;
      for (int i = 1; i < n; i++) {
        if (s[i].empty())
          check = false;

        while (((int)(s[i]).size())) {
          pair<pii, int> tmp = *s[i].begin();
          int t1 = tmp.first.first, t2 = tmp.first.second;
          if (t2 < k1) {
            s[i].erase(s[i].begin());
            if (s[i].empty())
              check = false;
            continue;
          }
          k1 = max(k1, t1);
          k2 = min(k2, t2);
          break;
        }
      }
      if (k1 <= k2 && check) {
        for (int i = 1; i < n; i++)
          s[i].erase(s[i].begin());
        ans++;
      }
    }
    cout << ans << endl;
  }
  return 0;
}
",157,132,722
"typedef long long ll;
typedef long long LL;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
int unit[52];
int wt[52][52];
int mn[52][52], mx[52][52];
int f;
vii adjList[1010];
int par[1010];
int n, p;

void open() {
  freopen(""D:/OneDrive/Code/GCJ/B-small-attempt0 (1).in"", ""r"", stdin);
  freopen(""D:/OneDrive/Code/GCJ/out.txt"", ""w"", stdout);
}

void augment(int x) {
  if (par[x] != x) {
    for (int i = 0; i < adjList[par[x]].size(); i++) {
      if (adjList[par[x]][i].first == x) {
        f = min(f, adjList[par[x]][i].second);
        break;
      }
    }
    augment(par[x]);
    for (int i = 0; i < adjList[par[x]].size(); i++) {
      if (adjList[par[x]][i].first == x) {
        adjList[par[x]][i].second -= f;
        break;
      }
    }

    for (int i = 0; i < adjList[x].size(); i++) {
      if (adjList[x][i].first == par[x]) {
        adjList[x][i].second += f;
        break;
      }
    }
  }
}

int maxflow() {
  int mf = 0;
  f = 0;
  while (true) {
    f = 0;
    memset(par, -1, sizeof(par));
    queue<int> q;
    q.push(n * p);
    par[n * p] = n * p;
    bool found = false;

    while (!q.empty()) {
      int node = q.front();
      // cout <<""cur : "" << node << endl;
      q.pop();
      for (int i = 0; i < adjList[node].size(); i++) {

        int nx = adjList[node][i].first;
        int cap = adjList[node][i].second;
        // cout << nx << "" "" << cap << endl;
        if (cap > 0 && par[nx] == -1) {
          par[nx] = node;
          if (nx == n * p + 1) {
            f = 1000000000;
            augment(nx);
            found = true;

            break;
          }
          q.push(nx);
        }
      }
      if (found)
        break;
    }

    if (f == 0)
      break;
    mf += f;
  }

  return mf;
}

int main(void) {
  open();
  int tc;
  scanf(""%d"", &tc);

  for (int ct = 1; ct <= tc; ct++) {
    map<int, int> mp;

    scanf(""%d"", &n);
    scanf(""%d"", &p);
    for (int i = 0; i < n; i++) {
      scanf(""%d"", &unit[i]);
    }

    memset(mn, -1, sizeof(mn));
    memset(mx, -1, sizeof(mx));

    for (int i = 0; i < n; i++) {
      for (int j = 0; j < p; j++) {
        scanf(""%d"", &wt[i][j]);
        int tmp1 = floor(1.0 * wt[i][j] / (0.9 * unit[i]));
        int tmp2 = ceil(1.0 * wt[i][j] / (1.1 * unit[i]));
        int bawah = min(tmp1, tmp2);
        int atas = max(tmp1, tmp2);
        // cout << bawah << "" "" << atas << endl;
        while (bawah <= atas) {
          if (bawah * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&
              1.0 * wt[i][j] <= bawah * 1.1 * unit[i] + 1e-9)
            break;
          else
            bawah++;
        }

        // cout << bawah << "" "" << atas << endl;

        if (bawah > atas)
          continue;

        while (atas >= bawah) {
          if (atas * 0.9 * unit[i] - 1e-9 <= 1.0 * wt[i][j] &&
              1.0 * wt[i][j] <= atas * 1.1 * unit[i] + 1e-9)
            break;
          else
            atas--;
        }
        // cout <<""idx : "" << i << endl;
        // cout << bawah << "" "" << atas << endl;
        mn[i][j] = bawah;
        mx[i][j] = atas;

        // while(mx[i][j] == -1 && )
      }
    }

    for (int i = 0; i < 1010; i++)
      adjList[i].clear();

    for (int i = 0; i < n - 1; i++) {
      for (int j = 0; j < p; j++) {
        if (mn[i][j] <= 0)
          continue;
        for (int k = 0; k < p; k++) {
          if (mn[i + 1][k] <= 0)
            continue;
          // printf(""%d %d %d %d\n"", mn[i][j], mx[i][j], mn[i+1][k],
          // mx[i+1][k]);
          if ((mn[i][j] <= mn[i + 1][k] && mn[i + 1][k] <= mx[i][j]) ||
              (mn[i + 1][k] <= mn[i][j] && mn[i][j] <= mx[i + 1][k])) {
            // cout << (i * p + j) << "" to "" << ((i+1)*p + k) << endl;
            adjList[i * p + j].push_back(ii((i + 1) * p + k, 1));
            adjList[(i + 1) * p + k].push_back(ii(i * p + j, 0));
          }
        }
      }
    }

    for (int j = 0; j < p; j++) {
      // source + to sink.
      if (mn[0][j] > 0) {
        adjList[n * p].push_back(ii(j, 1));
        adjList[j].push_back(ii(n * p, 0));
      }

      if (mn[n - 1][j] > 0) {
        adjList[(n - 1) * p + j].push_back(ii(n * p + 1, 1));
        adjList[n * p + 1].push_back(ii((n - 1) * p + j, 0));
      }
    }

    printf(""Case #%d: %d\n"", ct, maxflow());
    cerr << ""Test "" << ct << "" done \n"";
  }
  return 0;
}
",178,133,1934
"typedef long long ll;
typedef long long LL;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
void open() {
  freopen(""D:/OneDrive/Code/GCJ/A-small-attempt1.in"", ""r"", stdin);
  freopen(""D:/OneDrive/Code/GCJ/out.txt"", ""w"", stdout);
}

int main(void) {
  open();
  int tc;
  scanf(""%d"", &tc);

  for (int ct = 1; ct <= tc; ct++) {
    int r, c;
    scanf(""%d"", &r);
    scanf(""%d"", &c);
    string str[30];
    string ret[30];
    for (int i = 0; i < r; i++) {
      cin >> str[i];
      // if(ct == 74){
      // 	cerr << str[i] << endl;
      // }
      ret[i] = str[i];
    }

    for (int i = 0; i < r; i++) {
      for (int j = 0; j < c; j++) {
        if (str[i][j] == '?')
          continue;
        int minx, maxx;
        minx = maxx = i;
        int miny, maxy;
        miny = maxy = j;
        while (miny > 0 && str[i][miny - 1] == '?' && ret[i][miny - 1] == '?')
          miny--;
        while (maxy < c - 1 && str[i][maxy + 1] == '?' &&
               ret[i][maxy + 1] == '?')
          maxy++;
        while (minx > 0) {
          bool valid = true;
          for (int k = miny; k <= maxy; k++) {
            if (str[minx - 1][k] != '?' || ret[minx - 1][k] != '?') {
              valid = false;
              break;
            }
          }
          if (valid) {
            minx--;
          } else
            break;
        }
        bool adabawah = false;
        for (int k = i + 1; k < r; k++) {
          for (int l = 0; l < c; l++) {
            if (str[k][l] != '?') {
              adabawah = true;
              break;
            }
          }
        }
        if (!adabawah) {
          maxx = r - 1;
        }

        for (int k = minx; k <= maxx; k++) {
          for (int l = miny; l <= maxy; l++) {
            ret[k][l] = str[i][j];
          }
        }
      }
    }

    printf(""Case #%d: \n"", ct);
    for (int i = 0; i < r; i++) {
      cout << ret[i] << ""\n"";
    }

    cerr << ""Test "" << ct << "" done \n"";
  }
  return 0;
}
",178,134,811
"typedef long long ll;
typedef long long LL;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
void open() {
  freopen(""D:/OneDrive/Code/GCJ/A-small-attempt0.in"", ""r"", stdin);
  freopen(""D:/OneDrive/Code/GCJ/out.txt"", ""w"", stdout);
}

int main(void) {
  open();
  int tc;
  scanf(""%d"", &tc);

  for (int ct = 1; ct <= tc; ct++) {
    int d, n;
    scanf(""%d"", &d);
    scanf(""%d"", &n);
    double maxi = 0.0;

    for (int i = 0; i < n; i++) {
      int st, sp;
      scanf(""%d"", &st);
      scanf(""%d"", &sp);
      maxi = max(maxi, 1.0 * (d - st) / sp);
    }

    printf(""Case #%d: %.7lf\n"", ct, 1.0 * d / maxi);
    cerr << ""Test "" << ct << "" done \n"";
  }
  return 0;
}
",178,135,328
"typedef long long ll;
typedef long long LL;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
void open() {
  freopen(""D:/OneDrive/Code/GCJ/B-small-attempt0.in"", ""r"", stdin);
  freopen(""D:/OneDrive/Code/GCJ/out.txt"", ""w"", stdout);
}

int main(void) {
  open();
  int tc;
  scanf(""%d"", &tc);
  for (int ct = 1; ct <= tc; ct++) {
    printf(""Case #%d: "", ct);
    char str[100];
    scanf(""%s"", str);
    bool valid = true;
    int len = strlen(str);
    for (int i = 0; i < len - 1; i++) {
      if (str[i] > str[i + 1]) {
        valid = false;
        int idx = i;
        int carry = 1;
        while (i >= 0 && carry) {
          if (str[i] != '0') {
            str[i]--;
            carry = 0;
          } else {
            str[i] = '9';
            carry = 1;
          }

          if (i > 0 && str[i - 1] > str[i]) {
            carry = 1;
            str[i] = '9';
          }

          i--;
        }

        for (int j = 0; j <= idx; j++) {
          if (j == 0 && str[j] == '0')
            continue;
          printf(""%c"", str[j]);
        }

        for (int j = idx + 1; j < len; j++) {
          printf(""9"");
        }
        printf(""\n"");
        break;
      }
    }

    if (valid) {
      printf(""%s\n"", str);
    }

    cerr << ""Test "" << ct << "" done \n"";
  }
  return 0;
}
",178,136,530
"typedef long long ll;
typedef long long LL;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
void open() {
  freopen(""D:/OneDrive/Code/GCJ/B-small-attempt1.in"", ""r"", stdin);
  freopen(""D:/OneDrive/Code/GCJ/out1.txt"", ""w"", stdout);
}

void pr(int idx) {
  switch (idx) {
  case 0:
    printf(""R"");
    break;
  case 1:
    printf(""O"");
    break;
  case 2:
    printf(""Y"");
    break;
  case 3:
    printf(""G"");
    break;
  case 4:
    printf(""B"");
    break;
  case 5:
    printf(""V"");
    break;
  }
}

int main(void) {
  open();
  int tc;
  scanf(""%d"", &tc);

  for (int ct = 1; ct <= tc; ct++) {
    int n;
    scanf(""%d"", &n);
    int arr[10];
    printf(""Case #%d: "", ct);
    for (int i = 0; i < 6; i++) {
      scanf(""%d"", &arr[i]);
    }
    bool imp = false;
    for (int i = 0; i < 6; i++) {
      if (arr[i] * 2 > n) {
        imp = true;
        printf(""IMPOSSIBLE\n"");
        break;
      }
    }

    if (imp)
      continue;

    int maxidx = 0;
    for (int i = 0; i < 6; i++) {
      if (arr[maxidx] < arr[i])
        maxidx = i;
    }
    bool palinggede = true;
    int last = maxidx;
    pr(maxidx);
    arr[maxidx]--;
    int first = last;

    while (true) {
      bool ada = false;
      for (int i = 0; i < 6; i++) {
        if (arr[i] > 0)
          ada = true;
      }

      if (!ada)
        break;

      if (last == 0) {
        if (arr[2] > arr[4]) {
          last = 2;
        } else if (arr[2] < arr[4]) {
          last = 4;
        } else {
          if (first == 2) {
            last = 2;
          } else
            last = 4;
        }
      } else if (last == 2) {
        if (arr[0] > arr[4]) {
          last = 0;
        } else if (arr[0] < arr[4]) {
          last = 4;
        } else {
          if (first == 0) {
            last = 0;
          } else
            last = 4;
        }
      } else {
        if (arr[0] > arr[2]) {
          last = 0;
        } else if (arr[0] < arr[2]) {
          last = 2;
        } else {
          if (first == 0) {
            last = 0;
          } else
            last = 2;
        }
      }
      pr(last);
      arr[last]--;
    }
    printf(""\n"");

    cerr << ""Test "" << ct << "" done \n"";
    if (first == last) {
      cerr << ""last equals first\n"";
    }
  }
  return 0;
}
",178,137,935
"typedef long long ll;
typedef long long LL;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
void open() {
  freopen(""D:/OneDrive/Code/GCJ/A-small-attempt0.in"", ""r"", stdin);
  freopen(""D:/OneDrive/Code/GCJ/out.txt"", ""w"", stdout);
}

int main(void) {
  open();
  int tc;
  scanf(""%d"", &tc);
  char str[1010];
  int k;

  for (int ct = 1; ct <= tc; ct++) {
    scanf(""%s"", str);
    scanf(""%d"", &k);
    int ret = 0;
    int len = strlen(str);

    for (int j = 0; j < len; j++) {
      if (str[j] == '-') {
        if (j + k > len) {
          ret = -1;
          break;
        }
        for (int l = 0; l < k; l++) {
          if (str[l + j] == '+')
            str[l + j] = '-';
          else
            str[l + j] = '+';
        }
        ret++;
        // printf(""%s\n"", str);
      }
    }

    printf(""Case #%d: "", ct);

    if (ret == -1) {
      printf(""IMPOSSIBLE\n"");
    } else {
      printf(""%d\n"", ret);
    }
    cerr << ""Test "" << ct << "" done \n"";
  }
  return 0;
}
",178,138,433
"typedef long long ll;
typedef long long LL;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
void open() {
  freopen(""D:/OneDrive/Code/GCJ/C-small-1-attempt0.in"", ""r"", stdin);
  freopen(""D:/OneDrive/Code/GCJ/out.txt"", ""w"", stdout);
}

int main(void) {
  open();
  int tc;
  scanf(""%d"", &tc);
  for (int ct = 1; ct <= tc; ct++) {
    int n, k;
    scanf(""%d"", &n);
    scanf(""%d"", &k);
    priority_queue<int> pq;
    pq.push(n);

    printf(""Case #%d: "", ct);

    while (k--) {
      int top = pq.top();
      pq.pop();
      int mid = top - 1;
      int l, r;
      l = mid / 2;
      r = (mid + 1) / 2;
      if (k == 0) {
        printf(""%d %d\n"", r, l);
      }
      if (l) {
        pq.push(l);
      }

      if (r) {
        pq.push(r);
      }
    }

    cerr << ""Test "" << ct << "" done \n"";
  }
  return 0;
}
",178,139,387
"// Problem A

int get() {
  char c;
  while (c = getchar(), c != '-' && (c < '0' || c > '9'))
    ;
  bool flag = (c == '-');
  if (flag)
    c = getchar();
  int x = 0;
  while (c >= '0' && c <= '9') {
    x = x * 10 + c - '0';
    c = getchar();
  }
  return flag ? -x : x;
}

int main() {
  int totalTest = get();
  for (int test = 1; test <= totalTest; test++) {
    double l = get(), ans = 1e15;
    int n = get();
    for (int i = 0; i < n; i++) {
      double x = get(), v = get();
      ans = min(ans, l / ((l - x) / v));
    }
    printf(""Case #%d: %0.10lf\n"", test, ans);
  }
  return 0;
}
",185,140,265
"// Problem B

int get() {
  char c;
  while (c = getchar(), c != '-' && (c < '0' || c > '9'))
    ;
  bool flag = (c == '-');
  if (flag)
    c = getchar();
  int x = 0;
  while (c >= '0' && c <= '9') {
    x = x * 10 + c - '0';
    c = getchar();
  }
  return flag ? -x : x;
}

int R, O, Y, G, B, V;

void imp() { printf(""IMPOSSIBLE""); }

void alt(char c1, char c2, int n) {
  for (int i = 0; i < n; i++) {
    putchar(c1);
    putchar(c2);
  }
}

void solve(char a, char b, char c, int A, int B, int C) {
  string s = """";
  while (B && C) {
    s += b;
    s += c;
    B--;
    C--;
  }
  while (B--)
    s += b;
  while (C--)
    s += c;
  for (int i = 0; i < A; i++) {
    int len = s.size();
    if (s[0] == s[len - 1] && s[0] != a)
      s += a;
    else {
      int p = -1;
      for (int j = 0; j + 1 < len; j++)
        if (s[j] == s[j + 1] && s[j] != a)
          p = j;
      if (p == -1) {
        for (int j = 0; j + 1 < len; j++)
          if ((s[j] == b && s[j + 1] == c) || (s[j] == c && s[j + 1] == b))
            p = j;
      }
      string t = """";
      for (int j = 0; j <= p; j++)
        t += s[j];
      t += a;
      for (int j = p + 1; j < len; j++)
        t += s[j];
      s = t;
    }
  }
  bool flag[128];
  memset(flag, 0, sizeof(flag));
  for (int i = 0; i < s.size(); i++) {
    char x = s[i];
    putchar(x);
    if (!flag[x]) {
      flag[x] = true;
      if (x == 'R')
        alt('G', 'R', G);
      else if (x == 'B')
        alt('O', 'B', O);
      else
        alt('V', 'Y', V);
    }
  }
}

int main() {
  int totalTest = get();
  for (int test = 1; test <= totalTest; test++) {
    printf(""Case #%d: "", test);
    int N = get();
    R = get();
    O = get();
    Y = get();
    G = get();
    B = get();
    V = get();
    if (R == G && N == R + G)
      alt('R', 'G', R);
    else if (B == O && N == B + O)
      alt('B', 'O', B);
    else if (Y == V && N == Y + V)
      alt('Y', 'V', Y);
    else if ((R <= G && G > 0) || (B <= O && O > 0) || (Y <= V && V > 0))
      imp();
    else {
      R -= G;
      B -= O;
      Y -= V;
      int freq = max(R, max(B, Y));
      if (freq > N / 2)
        imp();
      else {
        if (freq == R)
          solve('R', 'B', 'Y', R, B, Y);
        else if (freq == 'B')
          solve('B', 'Y', 'R', B, Y, R);
        else
          solve('Y', 'R', 'B', Y, R, B);
      }
    }
    putchar('\n');
  }
  return 0;
}
",185,141,1075
"// Problem B

int get() {
  char c;
  while (c = getchar(), c != '-' && (c < '0' || c > '9'))
    ;
  bool flag = (c == '-');
  if (flag)
    c = getchar();
  int x = 0;
  while (c >= '0' && c <= '9') {
    x = x * 10 + c - '0';
    c = getchar();
  }
  return flag ? -x : x;
}

int a[1000], p[1000];
double x[1000][1000], lb[1000][1000], ub[1000][1000];

int main() {
  int totalTest = get();
  for (int test = 1; test <= totalTest; test++) {
    int n = get(), m = get();
    for (int i = 0; i < n; i++)
      a[i] = get();
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++) {
        x[i][j] = (double)get() / a[i];
      }
      sort(x[i], x[i] + m);
      for (int j = 0; j < m; j++) {
        lb[i][j] = ceil(x[i][j] / 1.1);
        ub[i][j] = floor(x[i][j] / 0.9);
      }
    }
    int ans = 0;
    memset(p, 0, sizeof(p));
    for (int i = 0; i < m; i++) {
      if (lb[0][i] > ub[0][i])
        continue;
      bool flag = true;
      for (int j = 1; j < n; j++) {
        while (p[j] < m && ub[j][p[j]] < lb[0][i])
          p[j]++;
        flag = (p[j] < m) && (lb[j][p[j]] <= ub[0][i]);
      }
      if (flag) {
        ans++;
        for (int j = 1; j < n; j++)
          p[j]++;
      }
    }
    printf(""Case #%d: %d\n"", test, ans);
  }
  return 0;
}
",185,142,610
"// Problem A

int get() {
  char c;
  while (c = getchar(), c != '-' && (c < '0' || c > '9'))
    ;
  bool flag = (c == '-');
  if (flag)
    c = getchar();
  int x = 0;
  while (c >= '0' && c <= '9') {
    x = x * 10 + c - '0';
    c = getchar();
  }
  return flag ? -x : x;
}

char a[25][25];

char getCake() {
  char c;
  while (c = getchar(), c != '?' && (c < 'A' || c > 'Z'))
    ;
  return c;
}

int main() {
  int totalTest = get();
  for (int test = 1; test <= totalTest; test++) {
    printf(""Case #%d:\n"", test);
    int n = get(), m = get();
    for (int i = 0; i < n; i++)
      for (int j = 0; j < m; j++)
        a[i][j] = getCake();

    for (int i = 0; i < n; i++) {
      for (int j = 1; j < m; j++)
        if (a[i][j] == '?' && a[i][j - 1] != '?')
          a[i][j] = a[i][j - 1];
      for (int j = m - 2; j >= 0; j--)
        if (a[i][j] == '?' && a[i][j + 1] != '?')
          a[i][j] = a[i][j + 1];
    }

    for (int i = 0; i < m; i++) {
      for (int j = 1; j < n; j++)
        if (a[j][i] == '?' && a[j - 1][i] != '?')
          a[j][i] = a[j - 1][i];
      for (int j = n - 2; j >= 0; j--)
        if (a[j][i] == '?' && a[j + 1][i] != '?')
          a[j][i] = a[j + 1][i];
    }

    for (int i = 0; i < n; i++) {
      for (int j = 0; j < m; j++)
        putchar(a[i][j]);
      putchar('\n');
    }
  }
  return 0;
}
",185,143,649
"// Problem C

long long get() {
  char c;
  while (c = getchar(), c != '-' && (c < '0' || c > '9'))
    ;
  bool flag = (c == '-');
  if (flag)
    c = getchar();
  long long x = 0;
  while (c >= '0' && c <= '9') {
    x = x * 10 + c - '0';
    c = getchar();
  }
  return flag ? -x : x;
}

map<long long, long long> ans;

long long cnt(long long n, long long m) {
  if (n < m)
    return 0;
  if (ans[n] != 0)
    return ans[n];
  long long a = (n + 1) / 2 - 1;
  long long b = n / 2;
  return ans[n] = cnt(a, m) + cnt(b, m) + 1;
}

int main() {
  int totalTest = get();
  for (int test = 1; test <= totalTest; test++) {
    long long n = get(), k = get();

    long long l = 0, r = n;
    while (l < r) {
      long long mid = (l + r + 1) / 2;
      ans.clear();
      if (cnt(n, mid) < k)
        r = mid - 1;
      else
        l = mid;
    }

    printf(""Case #%d: "", test);
    cout << (l / 2) << ' ' << ((l + 1) / 2 - 1) << endl;
  }
  return 0;
}
",185,144,429
"// Problem A

int get() {
  char c;
  while (c = getchar(), c != '-' && (c < '0' || c > '9'))
    ;
  bool flag = (c == '-');
  if (flag)
    c = getchar();
  int x = 0;
  while (c >= '0' && c <= '9') {
    x = x * 10 + c - '0';
    c = getchar();
  }
  return flag ? -x : x;
}

int main() {
  int totalTest = get();
  for (int test = 1; test <= totalTest; test++) {
    string s;
    cin >> s;
    int n = s.size(), k = get(), ans = 0;
    for (int i = 0; i + k <= n; i++) {
      if (s[i] == '+')
        continue;
      for (int j = i; j < i + k; j++)
        s[j] = (s[j] == '+') ? '-' : '+';
      ans++;
    }
    bool flag = true;
    for (int i = 0; flag && i < n; i++)
      flag = (s[i] == '+');
    printf(""Case #%d: "", test);
    if (flag)
      printf(""%d\n"", ans);
    else
      printf(""IMPOSSIBLE\n"");
  }
  return 0;
}
",185,145,364
"// Problem C

int get() {
  char c;
  while (c = getchar(), c != '-' && (c < '0' || c > '9'))
    ;
  bool flag = (c == '-');
  if (flag)
    c = getchar();
  int x = 0;
  while (c >= '0' && c <= '9') {
    x = x * 10 + c - '0';
    c = getchar();
  }
  return flag ? -x : x;
}

const double inf = 1e15;

double l[100], v[100];
double dist[100][100];
double g[100][100];

int main() {
  int totalTest = get();
  for (int test = 1; test <= totalTest; test++) {
    int n = get(), q = get();
    for (int i = 0; i < n; i++) {
      l[i] = get();
      v[i] = get();
    }
    for (int i = 0; i < n; i++)
      for (int j = 0; j < n; j++) {
        int x = get();
        if (i == j)
          dist[i][j] = 0;
        else
          dist[i][j] = (x == -1) ? inf : x;
      }
    for (int k = 0; k < n; k++)
      for (int i = 0; i < n; i++)
        if (dist[i][k] < inf)
          for (int j = 0; j < n; j++)
            dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);
    for (int i = 0; i < n; i++)
      for (int j = 0; j < n; j++)
        g[i][j] = (dist[i][j] <= l[i]) ? (dist[i][j] / v[i]) : inf;
    for (int k = 0; k < n; k++)
      for (int i = 0; i < n; i++)
        if (g[i][k] < inf)
          for (int j = 0; j < n; j++)
            g[i][j] = min(g[i][j], g[i][k] + g[k][j]);
    printf(""Case #%d:"", test);
    for (int i = 0; i < q; i++) {
      int u = get() - 1, v = get() - 1;
      printf("" %0.10lf"", g[u][v]);
    }
    putchar('\n');
  }
  return 0;
}
",185,146,684
"// Hi
typedef long long ll;
int uni[6];

int pickMax(int curColor) {
  int ans = 0;
  if (ans == curColor)
    ans = 1;
  for (int i = 0; i < 6; i++) {
    if (i == curColor)
      continue;
    if (uni[ans] < uni[i])
      ans = i;
  }
  return ans;
}
void solve() {
  int n;
  cin >> n;
  string stuff = ""ROYGBV"";
  for (int i = 0; i < 6; i++)
    cin >> uni[i];
  int ans[1000];
  for (int i = 0; i < n; i++)
    ans[i] = -1;
  int init = pickMax(-1);
  uni[init]--;
  ans[0] = init;
  // cout<<init<<endl;
  int left = 1;
  int right = n - 1;
  bool onLeft = true;
  while (true) {
    int ind;
    if (onLeft) {
      ind = left;
      left++;
    } else {
      ind = right;
      right--;
    }
    if (ans[ind] != -1)
      break;

    int prev;
    if (ind == n - 1)
      prev = ans[0];
    else if (!onLeft)
      prev = ans[ind + 1];
    else
      prev = ans[ind - 1];
    int val = pickMax(prev);

    uni[val]--;
    ans[ind] = val;
    onLeft = !onLeft;
  }

  bool bad = false;
  for (int i = 0; i < 6; i++) {
    if (uni[i] < 0) {
      bad = true;
    }
  }
  // for(int i=0; i< n; i++) cout<<stuff[ans[i]];
  for (int i = 1; i < n; i++) {
    if (ans[i] == ans[i - 1])
      bad = true;
  }
  if (ans[0] == ans[n - 1])
    bad = true;
  if (bad) {
    cout << ""IMPOSSIBLE"" << endl;
    return;
  }
  for (int i = 0; i < n; i++)
    cout << stuff[ans[i]];
  cout << endl;
}
int main() {
  ios::sync_with_stdio(false);
  freopen(""test.txt"", ""r"", stdin);
  freopen(""test1.txt"", ""w"", stdout);
  int t;
  cin >> t;
  for (int i = 1; i <= t; i++) {
    cout << ""Case #"" << i << "": "";
    solve();
  }
}
",199,147,730
"// Hi
typedef long long ll;
ll a, b;
void solve(ll n, ll k) {
  map<ll, ll> prev;
  map<ll, ll> cur;

  prev[n] = 1;
  while (true) {
    for (map<ll, ll>::reverse_iterator it = prev.rbegin(); it != prev.rend();
         ++it) {
      // split
      // check if done

      a = ((it->first) - 1) / 2;
      b = (it->first) - 1 - a;
      ll val = it->second;
      k -= val;
      if (k <= 0)
        return;
      if (a != 0)
        cur[a] += val;
      if (b != 0)
        cur[b] += val;
    }
    prev.swap(cur);
    cur.clear();
  }
}
int main() {
  ios::sync_with_stdio(false);
  freopen(""test.txt"", ""r"", stdin);
  freopen(""test1.txt"", ""w"", stdout);
  int t;
  cin >> t;
  for (int i = 1; i <= t; i++) {
    ll n, k;
    cin >> n >> k;
    solve(n, k);

    cout << ""Case #"" << i << "": "" << max(a, b) << "" "" << min(a, b) << endl;
  }
}
",199,148,364
"// Hi
typedef long long ll;

void solve() {
  int n, q;
  pair<int, int> cities[100];
  vector<int> dists[101];
  cin >> n >> q;
  for (int i = 0; i < n; i++) {
    cin >> cities[i].first >> cities[i].second;
  }
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      int x;
      cin >> x;
      if (x == -1)
        continue;
      dists[i].push_back(x);
    }
  }
  int s;
  int d;
  cin >> s >> d;
  long double bestTimes[100];
  for (int i = 0; i < n; i++)
    bestTimes[i] = 1e13;
  bestTimes[0] = 0;
  for (int i = 0; i < n - 1; i++) {
    int cur = 0;
    int counter = i;
    long double curTime = bestTimes[i];
    while (cur + dists[counter][0] <= cities[i].first) {

      curTime += (long double)dists[counter][0] / cities[i].second;
      cur = cur + dists[counter][0];
      bestTimes[counter + 1] = min(curTime, bestTimes[counter + 1]);

      counter++;
      if (counter >= n - 1)
        break;
    }
    // for(int j=0; j< n; j++) cout<<bestTimes[j]<<"" "";
    // cout<<endl;
  }
  cout << fixed << setprecision(8) << bestTimes[n - 1] << endl;
}
int main() {
  ios::sync_with_stdio(false);
  freopen(""test.txt"", ""r"", stdin);
  freopen(""test1.txt"", ""w"", stdout);
  int t;
  cin >> t;
  for (int i = 1; i <= t; i++) {
    cout << ""Case #"" << i << "": "";
    solve();
  }
}
",199,149,553
"// Hi
int solve(string s, int k) {
  int ans = 0;
  for (int i = 0; i <= s.length() - k; i++) {
    if (s[i] == '-') {
      ans++;
      for (int j = i; j < i + k; j++) {
        if (s[j] == '-')
          s[j] = '+';
        else
          s[j] = '-';
      }
    }
  }

  for (int i = 0; i < s.length(); i++) {
    if (s[i] == '-')
      ans = -1;
  }
  return ans;
}
int main() {
  ios::sync_with_stdio(false);
  freopen(""test.txt"", ""r"", stdin);
  freopen(""test1.txt"", ""w"", stdout);
  // freopen("".out"",""w"",stdout);
  int t;
  cin >> t;
  for (int i = 1; i <= t; i++) {
    string s;
    int k;
    cin >> s >> k;
    int ans = solve(s, k);
    if (ans == -1)
      cout << ""Case #"" << i << "": ""
           << ""IMPOSSIBLE"" << endl;
    else
      cout << ""Case #"" << i << "": "" << ans << endl;
  }
}
",199,150,346
"// Hi
typedef long long ll;
int servings[51];
int packs[51][51];
pair<int, int> valid(int ser, int x) {
  pair<int, int> res;
  res.second = 0;
  if ((float)x / (0.9 * ser) < (float)x / (1.1 * ser))
    return res;
  res.first = ceil(x / (1.1 * ser)) + 0.00001;
  res.second = x / (0.9 * ser);
  return res;
}
struct entr {
  int x;
  int ingre;
  int id;
  int en;
  bool start;
};
bool comp(entr a, entr b) {
  if (a.x < b.x)
    return true;
  if (a.x == b.x && a.start)
    return true;
  return false;
}
bool comp2(entr a, entr b) { return a.en < b.en; }
int solve(int n, int p) {
  int ans = 0;
  vector<entr> ranges;
  int idCount = 0;
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < p; j++) {
      pair<int, int> cur = valid(servings[i], packs[i][j]);
      if (cur.second == 0)
        continue;
      if (cur.second < cur.first)
        continue;
      entr temp;
      temp.x = cur.first;
      temp.ingre = i;
      temp.id = idCount;
      temp.start = true;
      temp.en = cur.second;
      ranges.push_back(temp);
      temp.x = cur.second;
      temp.start = false;
      ranges.push_back(temp);
      idCount++;
    }
  }
  sort(ranges.begin(), ranges.end(), comp);
  vector<entr> cInRange[51];
  for (int i = 0; i < ranges.size(); i++) {
    // cout<<ranges[i].x<<"" ""<<ranges[i].id<<"" ""<<ranges[i].ingre<<endl;
    if (ranges[i].start)
      cInRange[ranges[i].ingre].push_back(ranges[i]);
    else {
      for (int j = 0; j < cInRange[ranges[i].ingre].size(); j++) {
        if (cInRange[ranges[i].ingre][j].id == ranges[i].id) {
          cInRange[ranges[i].ingre].erase(cInRange[ranges[i].ingre].begin() +
                                          j);
          break;
        }
      }
      continue;
    }
    int curMin = cInRange[0].size();
    for (int j = 0; j < n; j++) {
      curMin = min(curMin, (int)cInRange[j].size());
    }
    ans += curMin;
    if (curMin == 0)
      continue;

    for (int j = 0; j < n; j++) {
      sort(cInRange[j].begin(), cInRange[j].end(), comp2);
      cInRange[j].erase(cInRange[j].begin());
    }
  }
  /*
  for(map<int, int>::iterator it = nums[0].begin(); it!=nums[0].end(); ++it){
      int cur = it->second;
      int check= it->first;
      for(int i=0; i< n; i++){
          cur = min(cur, nums[i][check]);
      }
      ans+=cur;
  }
   */
  return ans;
}
int main() {
  ios::sync_with_stdio(false);
  freopen(""test.txt"", ""r"", stdin);
  freopen(""test2.txt"", ""w"", stdout);
  int t;
  cin >> t;
  for (int i = 1; i <= t; i++) {
    int n, p;
    cin >> n >> p;
    for (int j = 0; j < n; j++)
      cin >> servings[j];
    for (int j = 0; j < n; j++) {
      for (int b = 0; b < p; b++) {
        cin >> packs[j][b];
      }
    }

    int ans = solve(n, p);
    cout << ""Case #"" << i << "": "" << ans << endl;
  }
}
",199,151,1162
"// Hi
typedef long long ll;
pair<int, int> horses[1001];
void solve(int d, int n) {
  long double ans = 1e15;
  for (int i = 0; i < n; i++) {
    long double en = (long double)(d - horses[i].first) / horses[i].second;
    long double cur = d / en;
    ans = min(cur, ans);
  }
  cout << fixed << setprecision(8) << ans << endl;
}
int main() {
  ios::sync_with_stdio(false);
  freopen(""test.txt"", ""r"", stdin);
  freopen(""test1.txt"", ""w"", stdout);
  int t;
  cin >> t;
  for (int i = 1; i <= t; i++) {
    int d, n;
    cin >> d >> n;
    for (int j = 0; j < n; j++)
      cin >> horses[j].first >> horses[j].second;
    cout << ""Case #"" << i << "": "";
    solve(d, n);
  }
}
",199,152,280
"// Hi
typedef long long ll;
struct rect {
  int t, b, l, r;
};
char mat[26][26];
bool checkIfClear(int a, int b, int c, int d, char checker) {
  for (int i = a; i <= b; i++) {
    for (int j = c; j <= d; j++) {
      if (mat[i][j] != '?' && mat[i][j] != checker)
        return false;
    }
  }
  return true;
}
void fillC(int a, int b, int c, int d, char filler) {
  for (int i = a; i <= b; i++) {
    for (int j = c; j <= d; j++) {
      mat[i][j] = filler;
    }
  }
}
void solve(int r, int c) {

  map<char, rect> rs;
  for (int i = 0; i < r; i++) {
    for (int b = 0; b < c; b++) {
      if (mat[i][b] == '?')
        continue;
      char ind = mat[i][b];
      rs[ind].t = i;
      rs[ind].b = i;
      rs[ind].l = b;
      rs[ind].r = b;
    }
  }

  for (int i = 0; i < r; i++) {
    for (int b = 0; b < c; b++) {
      if (mat[i][b] != '?')
        continue;
      for (map<char, rect>::iterator it = rs.begin(); it != rs.end(); ++it) {
        rect check;
        rect cur = it->second;
        check.t = min(cur.t, i);
        check.b = max(cur.b, i);
        check.l = min(cur.l, b);
        check.r = max(cur.r, b);
        if (!checkIfClear(check.t, check.b, check.l, check.r, it->first))
          continue;
        rs[it->first] = check;
        fillC(check.t, check.b, check.l, check.r, it->first);
      }
    }
  }

  for (int i = 0; i < r; i++) {
    for (int b = 0; b < c; b++) {
      cout << mat[i][b];
    }
    cout << endl;
  }
}
int main() {
  ios::sync_with_stdio(false);
  freopen(""test.txt"", ""r"", stdin);
  freopen(""test1.txt"", ""w"", stdout);
  int t;
  cin >> t;
  for (int i = 1; i <= t; i++) {
    int r, c;
    cin >> r >> c;

    for (int j = 0; j < r; j++) {
      for (int b = 0; b < c; b++) {
        cin >> mat[j][b];
      }
    }
    cout << ""Case #"" << i << "": "" << endl;
    solve(r, c);
  }
}
",199,153,796
"typedef long long LL;

int main() {
  freopen(""123.in"", ""r"", stdin);
  freopen(""123.out"", ""w"", stdout);
  int T, cas = 0;
  cin >> T;
  while (T--) {
    LL n, k;
    cin >> n >> k;
    int d = 0;
    for (LL v = 1; v <= k; v <<= 1)
      d++;
    printf(""Case #%d: "", ++cas);
    LL base = 1 << d;
    if (n < base) {
      puts(""0 0"");
      continue;
    }
    LL md = (n - (base - 1)) % base;
    LL lx = (n - (base - 1)) / base, rx = lx;
    int id = k - (1 << (d - 1)) + 1;
    if (id <= md)
      rx++;
    if (id + (1 << (d - 1)) <= md)
      lx++;
    printf(""%lld %lld\n"", rx, lx);
  }
  return 0;
}
",200,154,289
"typedef long long LL;

int main() {
  freopen(""123.in"", ""r"", stdin);
  freopen(""123.out"", ""w"", stdout);
  int T, cas = 0;
  cin >> T;
  while (T--) {
    string s;
    int k, ans = 0;
    cin >> s >> k;
    for (int i = 0; i + k <= s.size(); i++) {
      if (s[i] == '-') {
        for (int j = 0; j < k; j++)
          s[i + j] = s[i + j] == '-' ? '+' : '-';
        ans++;
      }
    }
    printf(""Case #%d: "", ++cas);
    if (s == string(s.size(), '+'))
      printf(""%d\n"", ans);
    else
      puts(""IMPOSSIBLE"");
  }
  return 0;
}
",200,155,238
"using LL = long long;

int a[6];
string s = ""ROYGBV"";

int main() {
  freopen(""123.in"", ""r"", stdin);
  freopen(""123.out"", ""w"", stdout);
  int T, cas = 0;
  cin >> T;
  while (T--) {
    int n;
    cin >> n;
    for (int i = 0; i < 6; i++)
      cin >> a[i];
    string ans = """";
    int flag = 0;
    while (ans.size() < n) {
      int mx = 0, c = 0;
      for (int i = 0; i < 6; i++) {
        if (s[i] == ans.back())
          continue;
        if (a[i] == mx && ans.size() && s[i] == ans[0])
          mx = a[i], c = i;
        if (a[i] > mx)
          mx = a[i], c = i;
      }
      if (s[c] == ans.back() || a[c] == 0) {
        flag = 1;
        break;
      }
      ans.push_back(s[c]);
      a[c]--;
    }
    // cout << ans << endl;
    if (ans.size() > 1 && ans[0] == ans.back())
      flag = 1;
    printf(""Case #%d: "", ++cas);
    if (flag)
      puts(""IMPOSSIBLE"");
    else
      printf(""%s\n"", ans.c_str());
  }
  return 0;
}
",200,156,420
"using LL = long long;

int main() {
  freopen(""123.in"", ""r"", stdin);
  freopen(""123.out"", ""w"", stdout);
  int T, cas = 0;
  cin >> T;
  while (T--) {
    int d, n;
    cin >> d >> n;
    double t = 0;
    while (n--) {
      int k, s;
      cin >> k >> s;
      t = max((1.0 * d - k) / s, t);
    }
    double ans = d / t;
    printf(""Case #%d: %.10f\n"", ++cas, ans);
  }
  return 0;
}
",200,157,179
"using LL = long long;

double e[123], v[123], s[123], a[123][123], dp[123];

int main() {
  freopen(""123.in"", ""r"", stdin);
  freopen(""123.out"", ""w"", stdout);
  int T, cas = 0;
  cin >> T;
  while (T--) {
    int n, q;
    cin >> n >> q;
    for (int i = 1; i <= n; i++)
      cin >> e[i] >> v[i];
    for (int i = 1; i <= n; i++)
      for (int j = 1; j <= n; j++)
        cin >> a[i][j];
    for (int i = 2; i <= n; i++)
      s[i] = s[i - 1] + a[i - 1][i];
    dp[1] = 0;
    for (int i = 2; i <= n; i++)
      dp[i] = 1e17;
    for (int i = 0; i < n; i++)
      for (int j = i + 1; j <= n; j++)
        if (s[j] - s[i] <= e[i])
          dp[j] = min(dp[j], dp[i] + (s[j] - s[i]) / v[i]);
    int qu, qv;
    cin >> qu >> qv;
    printf(""Case #%d: %.10f\n"", ++cas, dp[n]);
  }
  return 0;
}
",200,158,414
"using LL = long long;

int T, cas;

string convert(string s) {
  int p, i;
  for (p = 0, i = 0; s[i]; i++) {
    if (s[i] != '?')
      while (p <= i)
        s[p++] = s[i];
  }
  if (!p)
    return s;
  while (s[--i] == '?')
    s[i] = s[p - 1];
  return s;
}

int main() {
  freopen(""123.in"", ""r"", stdin);
  freopen(""123.out"", ""w"", stdout);
  cin >> T;
  while (T--) {
    vector<string> a;
    int n, m;
    cin >> n >> m;
    int p = 0, i;
    for (i = 0; i < n; i++) {
      string s;
      cin >> s;
      s = convert(s);
      a.push_back(s);
      if (s[0] != '?')
        while (p <= i)
          a[p++] = a[i];
    }
    while (a[--i][0] == '?')
      a[i] = a[p - 1];
    printf(""Case #%d:\n"", ++cas);
    for (auto s : a)
      printf(""%s\n"", s.c_str());
  }
  return 0;
}
",200,159,374
"typedef long long LL;

int main() {
  freopen(""123.in"", ""r"", stdin);
  freopen(""123.out"", ""w"", stdout);
  int T, cas = 0;
  cin >> T;
  while (T--) {
    string s;
    cin >> s;
    reverse(s.begin(), s.end());
    int n = s.size();
    for (int i = 1; i < n; i++) {
      if (s[i] <= s[i - 1])
        continue;
      for (int j = 0; j < i; j++)
        s[j] = '9';
      int j = i;
      while (s[j] == '0')
        s[j] = '9', j++;
      s[j]--;
    }
    while (s.back() == '0')
      s.pop_back();
    reverse(s.begin(), s.end());
    printf(""Case #%d: %s\n"", ++cas, s.c_str());
  }
  return 0;
}
",200,160,272
